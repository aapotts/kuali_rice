/*
 * Copyright 2005-2006 The Kuali Foundation.
 * 
 * Licensed under the Educational Community License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.opensource.org/licenses/ecl1.php
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kuali.core.datadictionary.validation;

import java.io.Serializable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.log4j.Logger;
import org.kuali.core.datadictionary.exporter.ExportMap;

/**
 * Abstraction of the regular expressions used to validate attribute values.
 * 
 * 
 */
abstract public class ValidationPattern implements Serializable {
    private static final Logger LOG = Logger.getLogger(ValidationPattern.class);


    /**
     * @return regular expression Pattern generated by the individual ValidationPattern subclass
     */
    abstract public Pattern getRegexPattern();

    /**
     * @return String version of regular expression base, suitable for modification with length-specifiers and used internally by
     *         getRegexPattern
     */
    abstract protected String getRegexString();


    /**
     * @return true if the given String matches this pattern
     */
    public boolean matches(String input) {
        Pattern p = getRegexPattern();
        LOG.debug("matching '" + input + "' against pattern '" + p.pattern() + "'");

        Matcher m = p.matcher(input);

        return m.matches();
    }


    /**
     * @return XML describing the subclass instance
     */
    abstract public String getPatternXml();


    /**
     * @return ExportMap describing the subclass instance
     */
    abstract public ExportMap buildExportMap(String exportKey);
}
