<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2011 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Kuali Rice ${project.version} Release Notes</title>
        <edition>${project.version}</edition>
        <pubdate>Released: ${timestamp}</pubdate>
        <releaseinfo>This document contains a cumulative list of work accomplished between versions
            ${previousVersion} and ${project.version}. It also contains the steps necessary in
            upgrading from release ${previousVersion} to ${project.version} </releaseinfo>
    </info>
    <sect1 xml:id="overview" xreflabel="Overview">
        <title>Overview</title>
        <para>Welcome to the first beta release of Kuali Rice version 2.0!</para>
        <para>This is the first major release of the Kuali Rice software since version 1.0 which was
            released in August of 2009. This release brings many new and exciting features and
            improvements to the Kuali Rice middlware and application development platforms. This
            document provides early information on the work that has been done as part of 2.0
            develoment and how one can get started working with the software during the beta test
            phase of the project.</para>
        <para>The primary architectural goal for this release of Rice was to position the platform
            for cross-version service compatibility moving forward. With the increase in the number
            of applications (both internal and external to Kuali) integrating with the Kuali Rice
            middleware platform, the ability to provide for compatibility across different versions
            of Kuali Rice has risen to forefront within the community as a critical need. The end
            result is intended to be a platform on which institutions can build applications without
            worrying about major forced upgrade paths for all integrated applications whenever they
            deploy a new release of Kuali Rice.</para>
        <para>Another major effort that was undertaken in support of compatibility work was an
            effort to improve the modularity of the various modules of Kuali Rice. In version 1.0.x
            of Rice, a high degree of coupling was present in numerous places. Work was done as part
            of this release to help improve upon that situation.</para>
        <para>In addition to the architectural efforts supporting compatibility and modularity,
            Kuali Rice 2.0 sees the introduction of two new major modules.</para>
        <para>The first of these is the Kuali Rapid Application Development (KRAD) module. KRAD is
            meant to provide the next generation of application development capabilities to those
            who are building applications based on Kuali software. KRAD provides a platform that can
            be utilized to build enterprise applications in a way that provides a more rich and
            flexable user experience than could be provided with the existing Kuali Nervous System
            (KNS). In fact, KRAD is intended to be the eventual replacement for the KNS which is the
            platform upon which much of the existing Kuali application software has been written.
            Note, however, that KNS is not being removed as of Rice 2.0. Work will continue on KRAD
            past the 2.0 release of Kuali Rice.</para>
        <para>The final major piece of functionality that was undertaken for this release was the
            introduction of the Kuali Rule Management System (KRMS).  KRMS is a business rule
            management system which can be used to author and maintain business rules that can be
            utilized during decision making processes within an application.  This includes the
            ability to use business rules defined in KRMS to define rules for workflow routing,
            notification, validation, and other custom scenarios.</para>
        <para>More details on each of the major efforts can be found in later sections of this
            document.</para>
        <sect2>
            <title>Release Highlights</title>
            <itemizedlist>
                <title>Highlights of this release include:</title>
                    <listitem>
                    <simpara>Refactoring of all remotely accessible services to position them for
                        cross-version compatibility with future versions of Kuali Rice.  This
                        includes a migration from Java serialization-based services to SOAP-based
                        web services.</simpara>
                </listitem>
                <listitem>
                    <simpara>Reduction in the number of places where a Kuali Rice client application
                        will interact directly with the Kuali Rice standalone server database (when
                        using integration models like embedded KEW).</simpara>
                </listitem>
                <listitem>
                    <simpara>Improvements to the Kuali Service Bus to allow it to support
                        requirements for version compatibility.</simpara>
                </listitem>
                <listitem>
                    <simpara>Introduction of a new approach to server and client-side caching use
                        the Spring caching abstraction coupled with Ehcache. This includes a new
                        user interface for managing caches.</simpara>
                </listitem>
                <listitem>
                    <simpara>Breakdown of the codebase into smaller modules to increase modularity
                        and flexibility of the software.</simpara>
                </listitem>
                <listitem>
                    <simpara>Numerious improvements to the design and documentation of Kuali Rice
                        apis.</simpara>
                </listitem>
                <listitem>
                    <simpara>Integration of an out-of-the-box LDAP connector for Kuali Identity
                        Management.</simpara>
                </listitem>
                    <listitem>
                    <simpara>Introduction of the Kuali Rules Management System (KRMS) module for
                        creation and execution of business rules.</simpara>
                </listitem>
                <listitem>
                    <simpara>Introduction of the concept of PeopleFlows in Kuali Enterprise
                        Workflow.</simpara>
                </listitem>
                    <listitem>
                    <simpara>Introduction of the  Kuali Rapid Application Development (KRAD) module,
                        the next revision of the KNS which includes rich UI features and is based on
                        Spring MVC instead of Struts.</simpara>
                </listitem>
                <listitem>
                    <simpara>Ability to configure <link xlink:href="http://docs.codehaus.org/display/BTM/Home">Bitronix</link> as a JTA alternative to JOTM
                        and XAPool.</simpara>
                </listitem>
                <listitem>
                    <simpara>Many of the Kuali Rice library dependencies were updated to the latest
                        versions of those libraries.</simpara>
                </listitem>
                </itemizedlist>
        </sect2>
        <sect2>
            <title>Download</title>
            <para>Kuali Rice ${project.version} can be downloaded from the Rice website at <link
                    xlink:href="http://kuali.org/rice/download"
                    >http://kuali.org/rice/download</link>.</para>
            <para>There are three differient distributions of Rice available: source, binary and
                server. Please read the Installation Guide for more details on each of these
                distributions.</para>
        </sect2>
        <sect2>
            <title>Documentation</title>
            <para>JavaDocs can be found at <link xlink:href="http://kuali.org/rice/api/${project.version}"
                >http://kuali.org/rice/api/${project.version}</link></para>
            <para>For the beta test, we have a <link xlink:href="https://wiki.kuali.org/x/xSaREg"
                    >wiki space to collect and maintain for beta testers</link>.</para>
            <para>Formal documentation for this release is under review. Other than KRMS and KRAD
                Chapters, the documentation found at at <link
                    xlink:href="http://kuali.org/rice/docs/${project.version}"
                    >http://kuali.org/rice/docs/${project.version}</link> has not been updated for
                Rice 2.0.</para>
        </sect2>
        <sect2>
            <title>Contact</title>
            <para>If you encounter any difficulty, please don't hesitate to contact the Rice team on
                our public collaboration mailing list at <email>rice.collab@kuali.org</email>.
                Please indicate that you are using the ${project.version} version of Rice.</para>
        </sect2>
    </sect1>
    <sect1 xml:id="major-changes" xreflabel="Major Changes">
        <title>Major Changes</title>
        <para>While implementing modularity and version compatibility changes, there were many
            structural improvements and refactoring changes to Rice to set a stronger foundation for
            future releases. Below is a summary of the major changes.</para>
        <sect2>
            <title>Middleware Version Compatibility</title>
            <para>In Rice 2.0, we are providing Middleware Version Compatibility. More info on this
                and also Framework Version Compatibility can be found in our <link
                    xlink:href="https://wiki.kuali.org/x/OABHC">Kuali Rice Version Compatibility
                    Statement</link>.</para>
            <para>The Rice team implemented this feature with the recommendations found at <link
                    xlink:href="https://wiki.kuali.org/x/P4AZD">Kuali Rice Version Compatibility
                    Recommendations</link>.</para>
            <sect3>
                <title>General Purpose Lookup APIs</title>
                <para>&lt;TODO: List what solution was chosen. It's not clear at <link
                        xlink:href="https://wiki.kuali.org/x/PR9yEg"
                        >https://wiki.kuali.org/x/PR9yEg</link>.</para>
            </sect3>
            <sect3>
                <title>Parameter Service</title>
                <para>See <link xlink:href="https://wiki.kuali.org/x/tg5yEg"
                        >https://wiki.kuali.org/x/tg5yEg</link></para>
            </sect3>
            <sect3>
                <title>Kuali Service Bus</title>
                <para>See <link xlink:href="https://wiki.kuali.org/x/T3dyEg"
                        >https://wiki.kuali.org/x/T3dyEg</link></para>
            </sect3>
            <sect3>
                <title>Kuali Enterprise Workflow</title>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>See <link xlink:href="https://wiki.kuali.org/x/fwuREg"
                                    >https://wiki.kuali.org/x/fwuREg</link></para>
                        </listitem>
                        <listitem>
                            <para>Addition of Priority parallel activation type (KRDOC-380)</para>
                        </listitem>
                    </itemizedlist>
                </para>
            </sect3>
            <sect3>
                <title>Caching Infrastructure</title>
                <para>See <link xlink:href="https://wiki.kuali.org/x/XgmWEg"
                        >https://wiki.kuali.org/x/XgmWEg</link></para>
            </sect3>
            <sect3>
                <title>RiceApplicationConfigurationService</title>
                <para>See <link xlink:href="https://wiki.kuali.org/x/vA6tEg"
                        >https://wiki.kuali.org/x/vA6tEg</link></para>
            </sect3>
        </sect2>
        <sect2>
            <title>New Modules: KRMS and KRAD</title>
            <sect3>   
                <title>Kuali Rapid Application Development Framework (KRAD)</title> 
                <para>KRAD (Kuali Rapid Application Development) is a framework that eases the development of enterprise web
                applications by providing reusable solutions and tooling that enable developers to
                build in a rapid and agile fashion. KRAD is a complete framework for web development
                that provides infrastructure in all major areas of an application (client, business,
                and data) and integrates with other modules of the Rice middleware project. KRAD is
                the next generation of the Rice Kuali Nervous System (KNS) and Kuali Student
                development frameworks. It expands on the ability to rapidly create user interfaces
                with XML while providing more flexibility with layouts and user experience. In
                addition, KRAD allows for the creation of modern, rich UIs using the jQuery and
                Fluid frameworks. </para>
               <para><emphasis role="bold">How does KRAD improve on the KNS?</emphasis> See <link
                        xlink:href="https://wiki.kuali.org/download/attachments/284033363/kradflier.pdf"
                        >Benefits of KRAD</link>. </para>
                <para>To learn more about KRAD, please visit the following pages:<itemizedlist>
                        <listitem>
                            <para><link
                                    xlink:href="https://wiki.kuali.org/display/KULRICE/KRAD+in+a+nutshell"
                                    >KRAD in a nutshell</link></para>
                        </listitem>
                        <listitem>
                            <para><link
                                    xlink:href="https://wiki.kuali.org/display/KULRICE/UIF+Architecture#UIFArchitecture-Views"
                                    >UIF Architecture</link></para>
                        </listitem>
                        <listitem>
                            <para><link
                                    xlink:href="https://wiki.kuali.org/display/KULRICE/UIF+View+Tutorial#UIFViewTutorial-CommonCases"
                                    >View Tutorial</link></para>
                        </listitem>
                        <listitem>
                            <para><link
                                    xlink:href="https://wiki.kuali.org/display/KULRICE/Uif+Component+Tutorial"
                                    >Creating a component</link></para>
                        </listitem>
                    </itemizedlist></para>
              <para>In addition, see various analysis pages here (Note: some of the
                information might be incomplete or out of date): <link
                    xlink:href="https://wiki.kuali.org/display/KULRICE/Rice+2.0+-+KRAD+Analysis"
                    >KRAD Analysis</link>
              </para>
            </sect3> 
            <sect3>
                <title>Kuali Rules Management System (KRMS)</title>
                <para>View the following analysis page for information on KRMS:<link xlink:href="https://wiki.kuali.org/x/egHuE">KRMS
                      Analysis</link></para>
            </sect3>
        </sect2>
        <sect2>
            <title>Increased Modularity</title>
            <para>See the following notes: <itemizedlist>
                    <listitem>
                        <para><link xlink:href="https://wiki.kuali.org/x/AgDYE">Modularity
                                Analysis</link></para>
                    </listitem>
                    <listitem>
                        <para>the running <link
                                xlink:href="https://docs.google.com/a/kuali.org/document/d/1kBvZXMU4jCsLv-OJAbeMjIPXimB_F0Z_ar4s9vpBqKw/edit?hl=en_US"
                                >list of modularity changes</link>.</para>
                    </listitem>
                    <listitem>
                        <para><link
                                xlink:href="https://docs.google.com/a/kuali.org/document/d/1YVyQZQlqqVKCEZbFmyhSAsnjNxbvl55n3iXeut1ems8/edit?hl=en_US"
                                >KEW Refactoring Notes</link></para>
                    </listitem>
                    <listitem>
                        <para>TODO Document Search Framework Changes <link
                                xlink:href="https://jira.kuali.org/browse/KRDOC-383"
                                >(https://jira.kuali.org/browse/KRDOC-383</link>)</para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
        <sect2>
            <title>Configuration Changes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>XAPool/Bitronix Configuration Changes (KRDOC-382 )</para>
                    </listitem>
                    <listitem>
                        <para>New configuration Parameters related to component publishing
                            (KRDOC-386)</para>
                    </listitem>
                    <listitem>
                        <para>Drop support of Tomcat 5.5, servlet spec 2.4,jsp 2.0) -
                            KRDOC-223</para>
                    </listitem>
                    <listitem>
                        <para>Changes to configurers and run modes (KRDOC-389)</para>
                    </listitem>
                    <listitem>
                        <para>Removal of </para>
                    </listitem>
                </itemizedlist>
            </para>
        </sect2>
        <sect2>
            <title>Library Changes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>TODO</para>
                    </listitem>
                </itemizedlist>
            </para>
        </sect2>
        <sect2>
            <title>Other Changes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>Removal of DateUtils and NumberUtils (KRDOC-232)</para>
                    </listitem>
                    <listitem>
                        <para>Changes in how unit tests and integration tests are run
                            (KRDOC-367)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </sect2>
    </sect1>
    <sect1>
        <title>Rice 2.0 Work Remaining</title>
        <para>Rice 2.0 is the first beta release and the goal of this release was to ensure that
            approximately 95% of the functionality was complete prior to the public beta test. Below
            is a summary of major work items that still need to be completed prior to the generally
            available release of Kuali Rice 2.0. Work will continue to try and resolve these issues
            as soon as possible in future beta releases.</para>
        <para>
            <orderedlist>
                <listitem>
                    <para><emphasis role="bold">Remote and embedded client
                        configurations</emphasis><itemizedlist>
                            <listitem>
                                <para>Rice ${project.version} can only be used to set up
                                    "bundled" applications.  None of the remote or embedded
                                    client configurations will work properly.</para>
                            </listitem>
                            <listitem>
                                <para>We will continue through future beta work to make remote
                                    and embedded clients available again.</para>
                            </listitem>
                        </itemizedlist></para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Configuration Changes</emphasis> - The way in
                        which you configure Rice may change quite a bit in future beta releases,
                        so we are going to be looking at fairly inpactful beta releases coming
                        down in the future.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Caching</emphasis> - There is still some work to do
                        on the new caching layer and that will be cleaned up during beta.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">KEN and KCB services</emphasis> - these services
                        have not yet been fully refactored to SOAP versions conforming to Rice
                        compatibility requirements</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Documentation</emphasis> is in a rudimentary
                        state. During the course of beta releases, it will be reviewed and
                        augmented.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">Upgrade guide/upgrade scripts</emphasis> are not
                        complete, but will be available before final release. Rough versions of
                        scripts are available on the <link
                            xlink:href="https://wiki.kuali.org/x/xSaREg">beta test
                            site</link>.</para>
                </listitem>
            </orderedlist>
        </para>
        <sect2>
            <title>"Remote" and "Embedded" client application configurations</title>
            <para>There was much work done in Rice 2.0 to refactor the layout and organization
                of the project and it's services.  This was primarily driven from the
                perspective of work being done both on improving modularity for the 2.0 release
                as well as requirements for version compatibility.  Unfortunately, as of the
                first beta release for Rice 2.0, there is still cleanup work to do to allow for
                proper configuration and operation of non-bundled client applications.  For
                those unfamiliar with the concept of "bundled" vs. "non-bundled", options for
                integration with the Kuali Rice middleware is essentially as follows:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">bundled</emphasis> - in this model, a single
                            application is bundled together with the Kuali Rice services and web
                            application.  This allows for that application to be deployed
                            without the need to set up a seperate application deployment for
                            Kuali Rice.  This model is not intended for "enterprise" application
                            deployments because it prohibits proper reuse of the Kuali Rice
                            middleware as a shared set of services.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">standalone</emphasis> - in this model, a
                            Kuali Rice "standalone server" is deployed which hosts the Kuali
                            Rice web application along with all of it's services.  Client
                            applications can then integrate with the standalone server instance
                            through various "run modes" which are supported by the client-side
                            pieces for the different Kuali Rice components (KEW, KIM, KSB,
                            etc.).  This integration model makes more sense for an enterprise
                            deployment of Kuali Rice because it allows the standalone server
                            instance and the services it provides to be shared and leveraged by
                            multiple applications within the enterprise. </para>
                    </listitem>
                </itemizedlist>For applications that are integrating with a standalone server,
                there are three primary possibilities for integration (generally, it's possible
                to integrate with different modules of Rice in different ways):<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">remote</emphasis> - in this mode, the client
                            application will be configured to connect to the KSB service
                            registry and will invoke remote rice services using the server
                            endpoint information located within the registry</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">embedded</emphasis> - in this mode, some or
                            all of the module will be "embedded" into the client application (in
                            Rice 2.0, this mode is only supported by KEW and KIM).  When using
                            this client-integration mode, the client application will connect
                            directly to the Kuali Rice database.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">manual</emphasis> - all of the Kuali Rice
                            services are available as SOAP web services, so any application can
                            build a manual web-service client using information found in the
                            WSDL's for the services published by the Kuali Rice standalone
                            server.  In these cases, there is generally no Kuali Rice code that
                            need to be configured or used within the client application.</para>
                    </listitem>
                </itemizedlist>Because of the issues mentioned previously, not all of the
                modules in Rice are configured to fully support the remote and embedded
                configurations (however, manual web-service integration should be possible).
                For this reason, we are recommending those participating in the beta test start
                by working on upgrades to any Rice standalone server instances they have as well
                as running Rice 2.0 in "bundled" mode with any existing applications they wish
                to convert to Rice 2.0.</para>
        </sect2>
        <sect2>
            <title>Configurers</title>
            <para>Related to the previous item of remote and embedded client applcation
                configuration, part of the issue here lies with the fact that there is still
                outstanding work on how to set up client "configurers". Those faimiliar with
                Rice 1.0.x will recall the <code>RiceConfigurer</code> class which was used to
                load and configure the various Rice modules. In Rice 2.0, this class no longer
                exists and it's replacement is
                <code>org.kuali.rice.core.impl.config.module.CoreConfigurer</code>. However,
                the core configurer only configures the basic "core" of Kuali Rice. The other
                modules (such as KEW, KSB, etc.) have their own configuers as well.</para>
            <para>The best place to look at for an example of how to configure Rice 2.0 is in
                the file
                <code>impl/src/main/resources/org/kuali/rice/config/RiceSpringBeans.xml</code>.
                This file imports other spring files which configure the various Rice modules.
                These files can also be imported into an application's Spring file in order to
                configure that particular module (unless an alternative or customized
                configuration is needed). Note, however, that the way in which Rice is
                configured will likely be adjusted in future beta releases, but information and
                documentation on such changes will be communicated along with those
                releases.</para>
        </sect2>
    </sect1>
    <sect1 xml:id="upgrade-guide" xreflabel="Upgrade Guide">
        <title>Upgrade Guide</title>
        <sect2>
            <title>Database Changes</title>
            <para>TODO: add links to scripts &amp; how to run (Jeff?)</para>
        </sect2>
    </sect1>
        <sect1 xml:id="bug-fix" xreflabel="Bug Fix">
            <title>Jiras</title>
        <para>There were nearly 800 Jira issues addressed in Rice 2.0. Below are links to Jira
            filters for the items addressed.</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para><link
                            xlink:href="https://jira.kuali.org/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+KULRICE+AND+fixVersion+%3D+%222.0%22+AND+status+IN+%28%27Resolved%27%2C%27Closed%27%29+order+by+priority"
                            >All Rice 2.0 Jiras</link></para>
                </listitem>
                <listitem>
                    <para><link
                            xlink:href="https://jira.kuali.org/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+KULRICE+AND+fixVersion+%3D+%222.0%22+AND+status+IN+%28%27Resolved%27%2C%27Closed%27%29+AND+type%3D%22Bug+Fix%22+order+by+priority"
                            >Bug Fixes</link></para>
                </listitem>
                <listitem>
                    <para><link
                            xlink:href="https://jira.kuali.org/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+KULRICE+AND+fixVersion+%3D+%222.0%22+AND+status+IN+%28%27Resolved%27%2C%27Closed%27%29+AND+type%3D%22Improvement%22+order+by+priority"
                            >Improvements</link></para>
                </listitem>
                <listitem>
                    <para><link
                            xlink:href="https://jira.kuali.org/secure/IssueNavigator.jspa?reset=true&amp;jqlQuery=project+%3D+KULRICE+AND+fixVersion+%3D+&quot;2.0&quot;+AND+status+IN+('Resolved'%2C'Closed')+AND+type+IN+(&quot;Task&quot;%2C&quot;Sub+Task&quot;)+order+by+priority"
                            >Tasks &amp; SubTasks</link></para>
                </listitem>
            </itemizedlist>
        </para>
         </sect1>
</article>
