<?xml version='1.0' encoding='UTF-8'?>
<!--

    Copyright 2005-2012 The Kuali Foundation

    Licensed under the Educational Community License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.opensource.org/licenses/ecl2.php

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<chapter xml:id="UG_KRMS" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>KRMS</title>
    <sect1>
        <title>Kuali Rule Management System: Overview</title>
        <sect2>
            <title>What is KRMS?</title>
            <para xmlns:xlink="http://www.w3.org/1999/xlink">Kuali's Rule Management System (KRMS)
                supports the creation, maintenance, storage and retrieval of business rules and
                agendas (ordered sets of business rules) within business contexts (e.g., for a
                particular department or for a particular university-wide process). It allows
                applications to externalize business logic that commonly needs customization, and
                empowers business analysts to modify them to reflect changes in policy. </para>
            <para xmlns:xlink="http://www.w3.org/1999/xlink">KRMS enables you to define a set of
                rules within a particular business unit or for a particular set of applications.
                These business rules define logical conditions and the set of actions that result
                when those conditions are met. KRMS enables you to call and use this logic from any
                application, without having to re-write and manage all the rules' maintenance logic
                within the application. </para>
        </sect2>
        <sect2>
            <title>KRMS Concepts</title>
            <variablelist>
                <varlistentry>
                    <term>Rule</term>
                    <listitem>
                        <para>There are two parts to a Rule: A logical Proposition ("condition" or
                            "statement" may be more natural) and an Action.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Action</term>
                    <listitem>
                        <para>something you do if a Rule's logical Proposition is true, e.g. <itemizedlist>
                                <listitem>
                                    <para>route to a PeopleFlow</para>
                                </listitem>
                                <listitem>
                                    <para>present a questionnaire</para>
                                </listitem>
                                <listitem>
                                    <para>display a validation error</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Proposition</term>
                    <listitem>
                        <para>the expression of some business logic, e.g. <itemizedlist>
                                <listitem>
                                    <para>activity != reasearch AND sponsor = NASA</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Term</term>
                    <listitem>
                        <para>defines a piece of business data usable in Rules, e.g. <itemizedlist>
                                <listitem>
                                    <para>in the example Proposition (see above), activity and
                                        sponsor are Terms.</para>
                                </listitem>
                            </itemizedlist>
                        </para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Fact</term>
                    <listitem>
                        <para>the actual value for a Term when an Agenda of Rules execute against
                            some set of data</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term>Agenda</term>
                    <listitem>
                        <para>An execution plan for some number of rules. KRMS agendas support
                            conditional logic, e.g. <itemizedlist>
                                <listitem>
                                    <para>rule 1: is initiator admin?</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para>When FALSE:</para>
                                            <itemizedlist>
                                                <listitem>
                                                  <para>rule 2: initiator has special
                                                  permission?</para>
                                                </listitem>
                                                <listitem>
                                                  <para>rule 3: exceeds dollar amount
                                                  threshold?</para>
                                                </listitem>
                                            </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </sect2>
    </sect1>
    <sect1 xmlns:xlink="http://www.w3.org/1999/xlink">
        <title>The KRMS User Interface</title>
        <sect2>
            <title>KRMS Agenda Editor</title>
            <para>Rules in KRMS are placed into ordered sets called Agendas. The order of the Rules
                in an Agenda determines the sequencing: which rule gets evaluated first, second and
                so on. The Agenda also enables you to include conditional branching logic between
                Rules. </para>
            <para>In turn, Agendas are are created in Contexts, which may represent any categories
                that are relevant within your institution. For example, they could correspond to
                document types or business processes or any other categories. In some university
                environments, the following might be relevant contexts: Awards, Proposals, IRB
                reviews, Course co-requisites, Course pre-requisites, Student plan evaluations, and
                so on. </para>
            <para>Each Context contains its own agendas, and each Agenda contains its own rules.
                Rules aren't shared across agendas (though you can copy/paste, they become unique
                Rule instances), and Agendas aren't shared across Contexts. There is no Context
                hierarchy, that is, Agendas and Rules can't be inherited across contexts within any
                sort of hierarchy. </para>
            <para>See below for a view of the Agenda Editor in KRMS.</para>
            <para>
                <figure>
                    <title>KRMS Agenda Editor</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/KRMS-Agenda.png" align="left" scalefit="1"
                                contentwidth="640"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
            <para>Rules in the Agenda can be selected by clicking on them. The order and conditional
                logic within the agenda can be manipulated by selecting rules and clicking the
                buttons on the toolbar above the Rules. Clicking on the "Add Rule" button on the
                Agenda Editor screen will take you to the Rule Editor with a new blank Rule, and
                selecting a Rule and clicking on the "Edit Rule" button will open that existing Rule
                in the Rule Editor.</para>
            <!-- Commenting out, we haven't introduced agenda types and attributes yet.
            <para>And see below for an example of how attributes can be progressively rendered in
                KRMS. In this example, the selected context, "Context 1", requires the selection of
                a type, and the selected type, "CampusAgendaType", requires some additional
                attributes, that are not required by all types. These are shown to the end user only
                when required. This is an example of KRAD's progressive disclosure capability: </para>
            <para>
                <figure>
                    <title>KRMS Agenda Editor with additional attributes displayed</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/KRMS-AgendaEditorWithAttributes.png"
                                scalefit="1" contentwidth="640"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para> -->
        </sect2>
        <sect2>
            <title>KRMS Rule Editor</title>
            <para>See below for views of editing a Rule from an Agenda in KRMS.</para>
            <para>
                <figure>
                    <title>KRMS Rules Editor</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/KRMS-Rule1.png" scalefit="1"
                                contentwidth="640"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
            <para>And below is the same Rule but scrolled down further on the page to show the
                Action configuration as well.  In this example, when the logical proposition for
                this rule is satisfied (when it is true), the rule will call a PeopleFlow to route a
                request to it.</para>
            <para>
                <figure>
                    <title>KRMS proposition and PeopleFlow Action</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/KRMS-Rule2.png" scalefit="1"
                                contentwidth="640"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </para>
            <para>You can add Simple Propositions via "add", or Compound Propositions via "add
                parent".  Simple Propositions are configured with a Term and a user-supplied value
                to compare it with.</para>
            <para>For additional information on KRMS see the KRMS Technical Guide (TRG).</para>
        </sect2>
    </sect1>
</chapter>
