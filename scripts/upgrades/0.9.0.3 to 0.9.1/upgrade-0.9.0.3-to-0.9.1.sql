
CREATE TABLE SH_PARM_DTL_TYP_T(
        SH_PARM_NMSPC_CD               VARCHAR2(20),
        SH_PARM_DTL_TYP_CD             VARCHAR2(100),
        OBJ_ID                         VARCHAR2(36) DEFAULT SYS_GUID() CONSTRAINT SH_PARM_ADDL_DTL_TYP_TN1 NOT NULL,
        VER_NBR                        NUMBER(8) DEFAULT 1 CONSTRAINT SH_PARM_ADDL_DTL_TYP_TN2 NOT NULL,
        SH_PARM_DTL_TYP_NM             VARCHAR2(255),
        ACTIVE_IND                     CHAR(1) DEFAULT 'Y' CONSTRAINT SH_PARM_ADDL_DTL_TYP_TN3 NOT NULL,
     CONSTRAINT SH_PARM_DTL_TYP_TP1 PRIMARY KEY (SH_PARM_NMSPC_CD,SH_PARM_DTL_TYP_CD),
     CONSTRAINT SH_PARM_DTL_TYP_TC0 UNIQUE (OBJ_ID)
);

CREATE TABLE SH_PARM_NMSPC_T(
        SH_PARM_NMSPC_CD               VARCHAR2(20),
        OBJ_ID                         VARCHAR2(36) DEFAULT SYS_GUID() CONSTRAINT SH_PARM_NMSPC_TN1 NOT NULL,
        VER_NBR                        NUMBER(8) DEFAULT 1 CONSTRAINT SH_PARM_NMSPC_TN2 NOT NULL,
        SH_PARM_NMSPC_NM               VARCHAR2(40),
        ACTIVE_IND                     CHAR(1) DEFAULT 'Y' CONSTRAINT SH_PARM_NMSPC_TN3 NOT NULL,
     CONSTRAINT SH_PARM_NMSPC_TP1 PRIMARY KEY (SH_PARM_NMSPC_CD),
     CONSTRAINT SH_PARM_NMSPC_TC0 UNIQUE (OBJ_ID)
);

CREATE TABLE SH_PARM_T(
        SH_PARM_NMSPC_CD               VARCHAR2(20),
        SH_PARM_DTL_TYP_CD             VARCHAR2(100),
        SH_PARM_NM                     VARCHAR2(100),
        OBJ_ID                         VARCHAR2(36) DEFAULT SYS_GUID() CONSTRAINT SH_PARM_TN1 NOT NULL,
        VER_NBR                        NUMBER(8) DEFAULT 1 CONSTRAINT SH_PARM_TN2 NOT NULL,
        SH_PARM_TYP_CD                 VARCHAR2(5) CONSTRAINT SH_PARM_TN3 NOT NULL,
        SH_PARM_TXT                    VARCHAR2(4000),
        SH_PARM_DESC                   VARCHAR2(4000),
        SH_PARM_CONS_CD                VARCHAR2(1),
        WRKGRP_NM                      VARCHAR2(70) DEFAULT 'WorkflowAdmin' CONSTRAINT SH_PARM_TN4 NOT NULL,
        ACTIVE_IND                     CHAR(1) DEFAULT 'Y' CONSTRAINT SH_PARM_TN5 NOT NULL,
     CONSTRAINT SH_PARM_TP1 PRIMARY KEY (SH_PARM_NMSPC_CD,SH_PARM_NM),
     CONSTRAINT SH_PARM_TC0 UNIQUE (OBJ_ID)
);

CREATE TABLE SH_PARM_TYP_T(
        SH_PARM_TYP_CD                 VARCHAR2(5),
        OBJ_ID                         VARCHAR2(36) DEFAULT SYS_GUID() CONSTRAINT SH_PARM_TYP_TN1 NOT NULL,
        VER_NBR                        NUMBER(8) DEFAULT 1 CONSTRAINT SH_PARM_TYP_TN2 NOT NULL,
        SH_PARM_TYP_NM                 VARCHAR2(40),
        ACTIVE_IND                     CHAR(1) DEFAULT 'Y' CONSTRAINT SH_PARM_TYP_TN3 NOT NULL,
     CONSTRAINT SH_PARM_TYP_TP1 PRIMARY KEY (SH_PARM_TYP_CD),
     CONSTRAINT SH_PARM_TYP_TC0 UNIQUE (OBJ_ID)
);

ALTER TABLE SH_PARM_DTL_TYP_T ADD CONSTRAINT SH_PARM_DTL_TYP_TR1
      FOREIGN KEY ( SH_PARM_NMSPC_CD )
      REFERENCES SH_PARM_NMSPC_T ( SH_PARM_NMSPC_CD );

ALTER TABLE SH_PARM_T ADD CONSTRAINT SH_PARM_TR1
      FOREIGN KEY ( SH_PARM_NMSPC_CD )
      REFERENCES SH_PARM_NMSPC_T ( SH_PARM_NMSPC_CD );

ALTER TABLE SH_PARM_T ADD CONSTRAINT SH_PARM_TR2
      FOREIGN KEY ( SH_PARM_TYP_CD )
      REFERENCES SH_PARM_TYP_T ( SH_PARM_TYP_CD );

ALTER TABLE EN_DOC_TYP_T ADD DOC_TYP_SECURITY_XML CLOB;

ALTER TABLE EN_RULE_BASE_VAL_T ADD RULE_NM VARCHAR2(256) NULL;

ALTER TABLE EN_RULE_TMPL_ATTRIB_T ADD ACTV_IND NUMBER(1) DEFAULT 1 NOT NULL;

ALTER TABLE EN_RULE_TMPL_ATTRIB_T MODIFY ACTV_IND NUMBER(1) DEFAULT NULL;

CREATE TABLE EN_EDL_DMP_T (
	DOC_HDR_ID NUMBER(14) NOT NULL,
	DOC_TYP_NM VARCHAR2(255) NOT NULL,
	DOC_RTE_STAT_CD CHAR(1) NOT NULL,
	DOC_MDFN_DT DATE NOT NULL,
	DOC_CRTE_DT DATE NOT NULL,
	DOC_TTL VARCHAR2(255) NULL,
	DOC_INITR_ID VARCHAR2(30) NOT NULL,
	DOC_CRNT_NODE_NM VARCHAR2(30) NOT NULL,
	DB_LOCK_VER_NBR	NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_EDL_DMP_PK PRIMARY KEY (DOC_HDR_ID)
);

CREATE TABLE EN_EDL_FIELD_DMP_T (
	EDL_FIELD_DMP_ID NUMBER(14) NOT NULL,
	DOC_HDR_ID NUMBER(14) NOT NULL,
	FLD_NM VARCHAR2(255) NOT NULL,
	FLD_VAL VARCHAR2(4000) NULL,
	DB_LOCK_VER_NBR	NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_EDL_FIELD_DMP_T_PK PRIMARY KEY (EDL_FIELD_DMP_ID)
);

CREATE TABLE EN_RMV_RPLC_DOC_T (
	DOC_HDR_ID			NUMBER(14) NOT NULL,
	OPRN				CHAR(1) NOT NULL,
	PRSN_EN_ID			VARCHAR2(30) NOT NULL,
	RPLC_PRSN_EN_ID     VARCHAR2(30) NULL,
	DB_LOCK_VER_NBR		NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_RMV_RPLC_DOC_T_PK PRIMARY KEY (DOC_HDR_ID)
);

CREATE TABLE EN_RMV_RPLC_RULE_T (
	DOC_HDR_ID			NUMBER(14) NOT NULL,
	RULE_ID				NUMBER(19) NOT NULL,
	CONSTRAINT EN_RMV_RPLC_RULE_T_PK PRIMARY KEY (DOC_HDR_ID, RULE_ID)
);

CREATE TABLE EN_RMV_RPLC_WRKGRP_T (
	DOC_HDR_ID			NUMBER(14) NOT NULL,
	WRKGRP_ID			NUMBER(14) NOT NULL,
	CONSTRAINT EN_RMV_RPLC_WRKGRP_T_PK PRIMARY KEY (DOC_HDR_ID, WRKGRP_ID)
);

CREATE INDEX EN_MSG_QUE_TI1 ON EN_MSG_QUE_T (MESSAGE_SERVICE_NM, SERVICE_METHOD_NM);
CREATE INDEX EN_MSG_QUE_TI2 ON EN_MSG_QUE_T (MESSAGE_ENTITY_NM, MESSAGE_QUE_STAT_CD, MESSAGE_QUE_IP_NBR, MESSAGE_QUE_DT);

CREATE SEQUENCE SEQ_KIM_ATTRIBUTE_TYPES_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_GROUPS_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_GROUP_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_NAMESPACES_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_NMSPCE_DFLT_ATTR_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_PERMISSIONS_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_PERSONS_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_PERSON_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_PRSN_QUAL_GRP_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_PRSN_QUAL_RL_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_ROLES_ID INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE SEQ_KIM_ROLE_ATTRIBUTES_ID INCREMENT BY 1 START WITH 1000
;
CREATE TABLE KIM_ATTRIBUTE_TYPES_T (
        ID NUMBER(8) NOT NULL,
        NAME VARCHAR2(500) NOT NULL,
        DESCRIPTION VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ATTRIBUTE_TYPES_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_GROUPS_GROUPS_T (
        PARENT_GROUP_ID NUMBER(8) NOT NULL,
        MEMBER_GROUP_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_GROUPS_GROUPS_PK PRIMARY KEY (PARENT_GROUP_ID, MEMBER_GROUP_ID)
)
;
CREATE TABLE KIM_GROUPS_PERSONS_T (
        GROUP_ID NUMBER(8) NOT NULL,
        PERSON_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_GROUPS_PERSONS_PK PRIMARY KEY (GROUP_ID, PERSON_ID)
)
;
CREATE TABLE KIM_GROUPS_T (
        ID NUMBER(8) NOT NULL,
        NAME VARCHAR2(500) NOT NULL,
        DESCRIPTION VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_GROUPS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_GROUP_ATTRIBUTES_T (
        ID NUMBER(8) NOT NULL,
        GROUP_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_NAME VARCHAR2(500) NOT NULL,
        ATTRIBUTE_TYPE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_VALUES VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_GROUP_ATTRIBUTES_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_NAMESPACES_T (
        ID NUMBER(8) NOT NULL,
        NAME VARCHAR2(500) NOT NULL,
        DESCRIPTION VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_NAMESPACE_PK PRIMARY KEY(ID)
)
;
CREATE TABLE KIM_NAMESPACE_DFLT_ATTRIBS_T (
        ID NUMBER(8) NOT NULL,
        NAMESPACE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_NAME VARCHAR2(500) NOT NULL,
        ATTRIBUTE_TYPE_ID NUMBER(8) NOT NULL,
        DESCRIPTION VARCHAR(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_NMSPCE_DFLT_ATTR_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_PERMISSIONS_T (
        ID NUMBER(8) NOT NULL,
        NAME VARCHAR2(500) NOT NULL,
        DESCRIPTION VARCHAR2(4000),
		NAMESPACE_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_PERMISSIONS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_PERSONS_T (
        ID NUMBER(8) NOT NULL,
        USERNAME VARCHAR2(500) NOT NULL,
        PASSWORD VARCHAR2(500),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_PERSONS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_PERSON_ATTRIBUTES_T (
        ID NUMBER(8) NOT NULL,
        PERSON_ID NUMBER(8) NOT NULL,
        SPONSOR_NAMESPACE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_NAME VARCHAR2(500) NOT NULL,
        ATTRIBUTE_TYPE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_VALUES VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_PERSON_ATTRIBUTES_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_PERSON_QUALIFIED_GROUP_T (
		ID NUMBER(8) NOT NULL,
        PERSON_ID NUMBER(8) NOT NULL,
		GROUP_ID NUMBER(8) NOT NULL,
		GROUP_ATTRIBUTE_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_PERSON_QUALIFIED_GROUP_PK PRIMARY KEY (PERSON_ID, GROUP_ID, GROUP_ATTRIBUTE_ID)
)
;
CREATE TABLE KIM_PERSON_QUALIFIED_ROLE_T (
		ID NUMBER(8) NOT NULL,
        PERSON_ID NUMBER(8) NOT NULL,
		ROLE_ID NUMBER(8) NOT NULL,
		ROLE_ATTRIBUTE_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_PERSON_QUALIFIED_ROLE_PK PRIMARY KEY (PERSON_ID, ROLE_ID, ROLE_ATTRIBUTE_ID)
)
;
CREATE TABLE KIM_ROLES_GROUPS_T (
        ROLE_ID NUMBER(8) NOT NULL,
        GROUP_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ROLES_GROUPS_PK PRIMARY KEY (ROLE_ID, GROUP_ID)
)
;
CREATE TABLE KIM_ROLES_PERMISSIONS_T (
        ROLE_ID NUMBER(8) NOT NULL,
        PERMISSION_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ROLES_PERMISSIONS_PK PRIMARY KEY (ROLE_ID, PERMISSION_ID)
)
;
CREATE TABLE KIM_ROLES_PERSONS_T (
        ROLE_ID NUMBER(8) NOT NULL,
        PERSON_ID NUMBER(8) NOT NULL,
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ROLES_PERSONS_PK PRIMARY KEY (ROLE_ID, PERSON_ID)
)
;
CREATE TABLE KIM_ROLES_T (
        ID NUMBER(8) NOT NULL,
        NAME VARCHAR2(500) NOT NULL,
        DESCRIPTION VARCHAR2(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ROLES_PK PRIMARY KEY (ID)
)
;
CREATE TABLE KIM_ROLE_ATTRIBUTES_T (
        ID NUMBER(8) NOT NULL,
        ROLE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_NAME VARCHAR2(500) NOT NULL,
        ATTRIBUTE_TYPE_ID NUMBER(8) NOT NULL,
        ATTRIBUTE_VALUE VARCHAR(4000),
		OBJ_ID VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL,
        VER_NBR NUMBER(8) DEFAULT 1 NOT NULL,
        CONSTRAINT KIM_ROLE_ATTRIBUTES_PK PRIMARY KEY (ID)
);

CREATE INDEX KIM_GROUPS_TI1 ON KIM_GROUPS_T (NAME);
CREATE INDEX KIM_GROUP_ATTRIBUTES_TI1 ON KIM_GROUP_ATTRIBUTES_T (GROUP_ID);
CREATE INDEX KIM_PERMISSIONS_TI1 ON KIM_PERMISSIONS_T (NAMESPACE_ID);
CREATE INDEX KIM_PERSONS_TI1 ON KIM_PERSONS_T (USERNAME);
CREATE INDEX KIM_PERSON_ATTRIBUTES_TI1 ON KIM_PERSON_ATTRIBUTES_T (PERSON_ID);
CREATE INDEX KIM_ROLES_TI1 ON KIM_ROLES_T (NAME);
CREATE INDEX KIM_ROLE_ATTRIBUTES_TI1 ON KIM_ROLE_ATTRIBUTES_T (ROLE_ID);

ALTER TABLE KIM_ATTRIBUTE_TYPES_T
ADD CONSTRAINT KIM_ATTRIBUTE_TYPES_UK1 UNIQUE
(
NAME
) ENABLE
;

ALTER TABLE KIM_GROUPS_GROUPS_T
ADD CONSTRAINT KIM_GROUPS_GROUPS_FK1 FOREIGN KEY
(
PARENT_GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_GROUPS_GROUPS_T
ADD CONSTRAINT KIM_GROUPS_GROUPS_FK2 FOREIGN KEY
(
MEMBER_GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_GROUPS_PERSONS_T
ADD CONSTRAINT KIM_GROUPS_PERSONS_FK1 FOREIGN KEY
(
GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_GROUPS_PERSONS_T
ADD CONSTRAINT KIM_GROUPS_PERSONS_FK2 FOREIGN KEY
(
PERSON_ID
)
REFERENCES KIM_PERSONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_GROUPS_T
ADD CONSTRAINT KIM_GROUPS_UK1 UNIQUE
(
NAME
) ENABLE
;

ALTER TABLE KIM_GROUP_ATTRIBUTES_T
ADD CONSTRAINT KIM_GROUP_ATTRIBUTES_UK1 UNIQUE
(
GROUP_ID,
ATTRIBUTE_NAME
) ENABLE
;

ALTER TABLE KIM_GROUP_ATTRIBUTES_T
ADD CONSTRAINT KIM_GROUP_ATTRIBUTES_FK1 FOREIGN KEY
(
GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_GROUP_ATTRIBUTES_T
ADD CONSTRAINT KIM_GROUP_ATTRIBUTES_FK2 FOREIGN KEY
(
ATTRIBUTE_TYPE_ID
)
REFERENCES KIM_ATTRIBUTE_TYPES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_NAMESPACES_T
ADD CONSTRAINT KIM_NAMESPACES_T_UK1 UNIQUE
(
NAME
) ENABLE
;

ALTER TABLE KIM_NAMESPACE_DFLT_ATTRIBS_T
ADD CONSTRAINT KIM_NMSPCE_DFLT_ATTR_UK1 UNIQUE
(
NAMESPACE_ID,
ATTRIBUTE_NAME
) ENABLE
;

ALTER TABLE KIM_NAMESPACE_DFLT_ATTRIBS_T
ADD CONSTRAINT KIM_NMSPCE_DFLT_ATTR_FK1 FOREIGN KEY
(
NAMESPACE_ID
)
REFERENCES KIM_NAMESPACES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_NAMESPACE_DFLT_ATTRIBS_T
ADD CONSTRAINT KIM_NMSPCE_DFLT_ATTR_FK2 FOREIGN KEY
(
ATTRIBUTE_TYPE_ID
)
REFERENCES KIM_ATTRIBUTE_TYPES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERMISSIONS_T
ADD CONSTRAINT KIM_PERMISSIONS_UK1 UNIQUE
(
NAME,
NAMESPACE_ID
) ENABLE
;

ALTER TABLE KIM_PERMISSIONS_T
ADD CONSTRAINT KIM_PERMISSIONS_FK1 FOREIGN KEY
(
NAMESPACE_ID
)
REFERENCES KIM_NAMESPACES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSONS_T
ADD CONSTRAINT KIM_PERSONS_UK1 UNIQUE
(
USERNAME
) ENABLE
;

ALTER TABLE KIM_PERSON_ATTRIBUTES_T
ADD CONSTRAINT KIM_PERSON_ATTRIBUTES_UK1 UNIQUE
(
PERSON_ID,
SPONSOR_NAMESPACE_ID,
ATTRIBUTE_NAME
) ENABLE
;

ALTER TABLE KIM_PERSON_ATTRIBUTES_T
ADD CONSTRAINT KIM_PERSON_ATTRIBUTES_FK1 FOREIGN KEY
(
PERSON_ID
)
REFERENCES KIM_PERSONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_ATTRIBUTES_T
ADD CONSTRAINT KIM_PERSON_ATTRIBUTES_FK2 FOREIGN KEY
(
ATTRIBUTE_TYPE_ID
)
REFERENCES KIM_ATTRIBUTE_TYPES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_ATTRIBUTES_T
ADD CONSTRAINT KIM_PERSON_ATTRIBUTES_FK3 FOREIGN KEY
(
SPONSOR_NAMESPACE_ID
)
REFERENCES KIM_NAMESPACES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_GROUP_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_GROUP_FK1 FOREIGN KEY
(
PERSON_ID
)
REFERENCES KIM_PERSONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_GROUP_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_GROUP_FK2 FOREIGN KEY
(
GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_GROUP_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_GROUP_FK3 FOREIGN KEY
(
GROUP_ATTRIBUTE_ID
)
REFERENCES KIM_GROUP_ATTRIBUTES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_ROLE_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_ROLE_FK1 FOREIGN KEY
(
PERSON_ID
)
REFERENCES KIM_PERSONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_ROLE_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_ROLE_FK2 FOREIGN KEY
(
ROLE_ID
)
REFERENCES KIM_ROLES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_PERSON_QUALIFIED_ROLE_T
ADD CONSTRAINT KIM_PERSON_QUALIFIED_ROLE_FK3 FOREIGN KEY
(
ROLE_ATTRIBUTE_ID
)
REFERENCES KIM_ROLE_ATTRIBUTES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_GROUPS_T
ADD CONSTRAINT KIM_ROLES_GROUPS_FK1 FOREIGN KEY
(
GROUP_ID
)
REFERENCES KIM_GROUPS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_GROUPS_T
ADD CONSTRAINT KIM_ROLES_GROUPS_FK2 FOREIGN KEY
(
ROLE_ID
)
REFERENCES KIM_ROLES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_PERMISSIONS_T
ADD CONSTRAINT KIM_ROLES_PERMISSIONS_FK1 FOREIGN KEY
(
ROLE_ID
)
REFERENCES KIM_ROLES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_PERMISSIONS_T
ADD CONSTRAINT KIM_ROLES_PERMISSIONS_FK2 FOREIGN KEY
(
PERMISSION_ID
)
REFERENCES KIM_PERMISSIONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_PERSONS_T
ADD CONSTRAINT KIM_ROLES_PERSONS_FK1 FOREIGN KEY
(
ROLE_ID
)
REFERENCES KIM_ROLES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_PERSONS_T
ADD CONSTRAINT KIM_ROLES_PERSONS_FK2 FOREIGN KEY
(
PERSON_ID
)
REFERENCES KIM_PERSONS_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLES_T
ADD CONSTRAINT KIM_ROLES_UK1 UNIQUE
(
NAME
) ENABLE
;

ALTER TABLE KIM_ROLE_ATTRIBUTES_T
ADD CONSTRAINT KIM_ROLE_ATTRIBUTES_UK1 UNIQUE
(
ROLE_ID,
ATTRIBUTE_NAME
) ENABLE
;

ALTER TABLE KIM_ROLE_ATTRIBUTES_T
ADD CONSTRAINT KIM_ROLE_ATTRIBUTES_FK1 FOREIGN KEY
(
ROLE_ID
)
REFERENCES KIM_ROLES_T
(
ID
) ENABLE
;

ALTER TABLE KIM_ROLE_ATTRIBUTES_T
ADD CONSTRAINT KIM_ROLE_ATTRIBUTES_FK2 FOREIGN KEY
(
ATTRIBUTE_TYPE_ID
)
REFERENCES KIM_ATTRIBUTE_TYPES_T
(
ID
) ENABLE
;

CREATE SEQUENCE NOTIFICATIONS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_CHANNELS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_CONTENT_TYPES_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_MSG_DELIVS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_PRIORITIES_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_PRODUCERS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_RECIPIENTS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_RECIPS_LISTS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_REVIEWERS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE NOTIFICATION_SENDERS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE RECIPIENT_PREFERENCES_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE USER_CHANNEL_SUBSCRIPTIONS_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE SEQUENCE USER_DELIVERER_CONFIG_SEQ INCREMENT BY 1 START WITH 1000
;
CREATE TABLE NOTIFICATIONS
(
ID NUMBER(8) NOT NULL,
DELIVERY_TYPE VARCHAR2(3) NOT NULL,
CREATED_DATETIME TIMESTAMP NOT NULL,
SEND_DATETIME TIMESTAMP,
AUTO_REMOVE_DATETIME TIMESTAMP,
PRIORITY_ID NUMBER(8) NOT NULL,
TITLE VARCHAR2(255),
CONTENT CLOB NOT NULL,
CONTENT_TYPE_ID NUMBER(8) NOT NULL,
NOTIFICATION_CHANNEL_ID NUMBER(8) NOT NULL,
PRODUCER_ID NUMBER(8) NOT NULL,
PROCESSING_FLAG VARCHAR2(15) NOT NULL,
LOCKED_DATE TIMESTAMP,
DB_LOCK_VER_NBR INTEGER DEFAULT 0 NOT NULL,
CONSTRAINT NOTIFICATIONS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_CHANNELS
(
ID NUMBER(8) NOT NULL,
NAME VARCHAR2(1000) NOT NULL,
DESCRIPTION VARCHAR2(4000) NOT NULL,
SUBSCRIBABLE CHAR(1) NOT NULL,
CONSTRAINT NOTIFICATION_CHANNELS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_CHANNEL_PRODUCERS
(
CHANNEL_ID NUMBER(8) NOT NULL,
PRODUCER_ID NUMBER(6) NOT NULL,
CONSTRAINT NOTIFICATION_CHANNEL_PROD_PK PRIMARY KEY (CHANNEL_ID, PRODUCER_ID)
)
;
CREATE TABLE NOTIFICATION_CONTENT_TYPES
(
ID NUMBER(8) NOT NULL,
NAME VARCHAR2(500) NOT NULL,
DESCRIPTION VARCHAR2(1000) NOT NULL,
NAMESPACE VARCHAR2(1000) NOT NULL,
XSD CLOB NOT NULL,
XSL CLOB NOT NULL,
CONSTRAINT NOTIFICATION_CONTENT_TYPE_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_MSG_DELIVS
(
ID NUMBER(8) NOT NULL,
NOTIFICATION_ID NUMBER(8) NOT NULL,
USER_RECIPIENT_ID VARCHAR2(300) NOT NULL,
MESSAGE_DELIVERY_TYPE_NAME VARCHAR2(500) NOT NULL,
MESSAGE_DELIVERY_STATUS VARCHAR2(15) NOT NULL,
DELIVERY_SYSTEM_ID VARCHAR2(300),
LOCKED_DATE TIMESTAMP,
DB_LOCK_VER_NBR INTEGER DEFAULT 0 NOT NULL,
CONSTRAINT NOTIFICATION_MSG_DELIVS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_PRIORITIES
(
ID NUMBER(8) NOT NULL,
NAME VARCHAR2(40) NOT NULL,
DESCRIPTION VARCHAR2(500) NOT NULL,
PRIORITY_ORDER NUMBER(4) NOT NULL,
CONSTRAINT NOTIFICATION_PRIORITY_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_PRODUCERS
(
ID NUMBER(8) NOT NULL,
NAME VARCHAR2(500) NOT NULL,
DESCRIPTION VARCHAR2(1000) NOT NULL,
CONTACT_INFO VARCHAR2(1000) NOT NULL,
CONSTRAINT NOTIFICATION_PRODUCER_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_RECIPIENTS
(
ID NUMBER(8) NOT NULL,
NOTIFICATION_ID NUMBER(8) NOT NULL,
RECIPIENT_TYPE VARCHAR2(10) NOT NULL,
RECIPIENT_ID VARCHAR2(300) NOT NULL,
CONSTRAINT NOTIFICATION_RECIPIENTS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_RECIPIENTS_LISTS
(
ID NUMBER(8) NOT NULL,
CHANNEL_ID NUMBER(8) NOT NULL,
RECIPIENT_TYPE VARCHAR2(10) NOT NULL,
RECIPIENT_ID VARCHAR2(300) NOT NULL,
CONSTRAINT NOTIFICATION_RECIPIENTS_L_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_REVIEWERS
(
ID NUMBER(8) NOT NULL,
CHANNEL_ID NUMBER(8) NOT NULL,
REVIEWER_TYPE VARCHAR2(10) NOT NULL,
REVIEWER_ID VARCHAR2(300) NOT NULL,
CONSTRAINT NOTIFICATION_REVIEWERS_PK PRIMARY KEY (ID)
)
;
CREATE TABLE NOTIFICATION_SENDERS
(
ID NUMBER(8) NOT NULL,
NOTIFICATION_ID NUMBER(8) NOT NULL,
NAME VARCHAR2(500) NOT NULL
)
;
CREATE TABLE RECIPIENT_PREFERENCES
(
ID NUMBER(8) NOT NULL,
RECIPIENT_TYPE VARCHAR2(10) NOT NULL,
RECIPIENT_ID VARCHAR2(300) NOT NULL,
PROPERTY VARCHAR2(300) NOT NULL,
VALUE VARCHAR2(1000) NOT NULL,
CONSTRAINT RECIPIENT_PREFERENCES_PK PRIMARY KEY (ID)
)
;
CREATE TABLE USER_CHANNEL_SUBSCRIPTIONS
(
ID NUMBER(8) NOT NULL,
CHANNEL_ID NUMBER(8) NOT NULL,
USER_ID VARCHAR2(300) NOT NULL,
CONSTRAINT USER_CHANNEL_SUBSCRIPTION_PK PRIMARY KEY (ID)
)
;
CREATE TABLE USER_DELIVERER_CONFIG
(
ID NUMBER(8) NOT NULL,
CHANNEL_ID NUMBER(8) NOT NULL,
USER_ID VARCHAR2(300) NOT NULL,
DELIVERER_NAME VARCHAR2(300) NOT NULL,
CONSTRAINT USER_DELIVERER_CONFIG_PK PRIMARY KEY (ID)
)
;
ALTER TABLE NOTIFICATIONS
ADD CONSTRAINT NOTIFICATIONS_NOTIFICATIO_FK1 FOREIGN KEY
(
NOTIFICATION_CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;

ALTER TABLE NOTIFICATIONS
ADD CONSTRAINT NOTIFICATIONS_NOTIFICATIO_FK2 FOREIGN KEY
(
CONTENT_TYPE_ID
)
REFERENCES NOTIFICATION_CONTENT_TYPES
(
ID
) ENABLE
;

ALTER TABLE NOTIFICATIONS
ADD CONSTRAINT NOTIFICATIONS_NOTIFICATIO_FK3 FOREIGN KEY
(
PRIORITY_ID
)
REFERENCES NOTIFICATION_PRIORITIES
(
ID
) ENABLE
;

ALTER TABLE NOTIFICATIONS
ADD CONSTRAINT NOTIFICATIONS_NOTIFICATIO_FK4 FOREIGN KEY
(
PRODUCER_ID
)
REFERENCES NOTIFICATION_PRODUCERS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_CHANNELS
ADD CONSTRAINT NOTIFICATION_CHANNELS_UK1 UNIQUE
(
NAME
)
 ENABLE
;
ALTER TABLE NOTIFICATION_CHANNEL_PRODUCERS
ADD CONSTRAINT NOTIFICATION_CHANNEL_PROD_FK1 FOREIGN KEY
(
CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;

ALTER TABLE NOTIFICATION_CHANNEL_PRODUCERS
ADD CONSTRAINT NOTIFICATION_CHANNEL_PROD_FK2 FOREIGN KEY
(
PRODUCER_ID
)
REFERENCES NOTIFICATION_PRODUCERS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_CONTENT_TYPES
ADD CONSTRAINT NOTIFICATION_CONTENT_TYPE_UK1 UNIQUE
(
NAME
)
 ENABLE
;
ALTER TABLE NOTIFICATION_MSG_DELIVS
ADD CONSTRAINT NOTIF_MSG_DELIVS_UK1 UNIQUE
(
NOTIFICATION_ID,
USER_RECIPIENT_ID,
MESSAGE_DELIVERY_TYPE_NAME
)
 ENABLE
;

ALTER TABLE NOTIFICATION_MSG_DELIVS
ADD CONSTRAINT NOTIF_MSG_DELIVS_FK1 FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATIONS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_PRIORITIES
ADD CONSTRAINT NOTIFICATION_PRIORITIES_UK1 UNIQUE
(
NAME
)
 ENABLE
;
ALTER TABLE NOTIFICATION_PRODUCERS
ADD CONSTRAINT NOTIFICATION_PRODUCERS_UK1 UNIQUE
(
NAME
)
 ENABLE
;
ALTER TABLE NOTIFICATION_RECIPIENTS
ADD CONSTRAINT NOTIFICATION_RECIPIENTS_UK1 UNIQUE
(
NOTIFICATION_ID,
RECIPIENT_TYPE,
RECIPIENT_ID
)
 ENABLE
;

ALTER TABLE NOTIFICATION_RECIPIENTS
ADD CONSTRAINT NOTIFICATION_RECIPIENTS_N_FK1 FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATIONS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_RECIPIENTS_LISTS
ADD CONSTRAINT NOTIFICATION_RECIPIENTS_L_UK1 UNIQUE
(
CHANNEL_ID,
RECIPIENT_TYPE,
RECIPIENT_ID
)
 ENABLE
;

ALTER TABLE NOTIFICATION_RECIPIENTS_LISTS
ADD CONSTRAINT NOTIFICATION_RECIPIENTS_L_FK1 FOREIGN KEY
(
CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_REVIEWERS
ADD CONSTRAINT NOTIFICATION_REVIEWERS_UK1 UNIQUE
(
CHANNEL_ID,
REVIEWER_TYPE,
REVIEWER_ID
)
 ENABLE
;

ALTER TABLE NOTIFICATION_REVIEWERS
ADD CONSTRAINT NOTIFICATION_REVIEWERS_N_FK1 FOREIGN KEY
(
CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;
ALTER TABLE NOTIFICATION_SENDERS
ADD CONSTRAINT NOTIFICATION_SENDER_PK PRIMARY KEY
(
ID
)
 ENABLE
;

ALTER TABLE NOTIFICATION_SENDERS
ADD CONSTRAINT NOTIFICATION_SENDERS_UK1 UNIQUE
(
NOTIFICATION_ID,
NAME
)
 ENABLE
;

ALTER TABLE NOTIFICATION_SENDERS
ADD CONSTRAINT NOTIFICATION_SENDERS_NOTI_FK1 FOREIGN KEY
(
NOTIFICATION_ID
)
REFERENCES NOTIFICATIONS
(
ID
) ENABLE
;
ALTER TABLE RECIPIENT_PREFERENCES
ADD CONSTRAINT RECIPIENT_PREFERENCES_UK1 UNIQUE
(
RECIPIENT_TYPE,
RECIPIENT_ID,
PROPERTY
)
 ENABLE
;
ALTER TABLE USER_CHANNEL_SUBSCRIPTIONS
ADD CONSTRAINT USER_CHANNEL_SUBSCRIPTION_UK1 UNIQUE
(
CHANNEL_ID,
USER_ID
)
 ENABLE
;

ALTER TABLE USER_CHANNEL_SUBSCRIPTIONS
ADD CONSTRAINT USER_CHANNEL_SUBSCRIPTION_FK1 FOREIGN KEY
(
CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;
ALTER TABLE USER_DELIVERER_CONFIG
ADD CONSTRAINT USER_DELIVERER_CONFIG_FK1 FOREIGN KEY
(
CHANNEL_ID
)
REFERENCES NOTIFICATION_CHANNELS
(
ID
) ENABLE
;

insert into SH_PARM_TYP_T values ('CONFG', 3, 0,'Config',1);
insert into SH_PARM_NMSPC_T values ('KR-NS', 3, 0, 'Kuali Rice', 1);

INSERT INTO sh_parm_typ_t
("SH_PARM_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_TYP_NM","ACTIVE_IND")
VALUES
('VALID','3A6A61E1427C414AE043814FD881414A',1,'Document Validation','Y')
;
INSERT INTO sh_parm_typ_t
("SH_PARM_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_TYP_NM","ACTIVE_IND")
VALUES
('AUTH','3A6A61E1427D414AE043814FD881414A',1,'Authorization','Y')
;
INSERT INTO sh_parm_typ_t
("SH_PARM_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_TYP_NM","ACTIVE_IND")
VALUES
('HELP','3A6A61E1427E414AE043814FD881414A',1,'Help','Y')
;

INSERT INTO sh_parm_dtl_typ_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_DTL_TYP_NM","ACTIVE_IND")
VALUES
('KR-NS','All','5DA619601EC14DC8B5533631F153915C',1,'All','Y')
;
INSERT INTO sh_parm_dtl_typ_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_DTL_TYP_NM","ACTIVE_IND")
VALUES
('KR-NS','Document','76F469D2EBE347F8AFA946F8D98ABB12',1,'Document','Y')
;
INSERT INTO sh_parm_dtl_typ_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_DTL_TYP_NM","ACTIVE_IND")
VALUES
('KR-NS','Lookup','BE854CD08B004FF499E441778A55DEA2',1,'Lookup','Y')
;
INSERT INTO sh_parm_dtl_typ_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","OBJ_ID","VER_NBR","SH_PARM_DTL_TYP_NM","ACTIVE_IND")
VALUES
('KR-NS','N;A','4C4AE503F3644C97B6C90540B10751CA',1,'Not Applicable','Y')
;




INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','All','CHECK_ENCRYPTION_SERVICE_OVERRIDE_IND','C6D1ECCA75C6426CBBE7BD84556D7528',1,'CONFG','Y','Flag for enabling;disabling the demonstration encryption check.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Document','DEFAULT_CAN_PERFORM_ROUTE_REPORT','8DE1B1CC0D2D413DAD28C845940F0119',1,'CONFG','N','If Y, the "route report" button will be displayed on the document actions bar if the document is using the default DocumentAuthorizerBase.getDocumentActionFlags to set the canPerformRouteReport property of the returned DocumentActionFlags instance.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Document','EXCEPTION_GROUP','604D7BC43D914B68A490C9443B7D4299',1,'CONFG','KUALI_ROLE_EXCEPTION','Workgroup which can perform functions on documents in exception routing status.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Document','SUPERVISOR_GROUP','21273383BDF544C192978FE1A4EDDE6F',1,'AUTH','KUALI_ROLE_SUPERVISOR','Workgroup which can perform almost any function within Kuali.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Lookup','MULTIPLE_VALUE_RESULTS_EXPIRATION_SECONDS','5B413AA4AD7F40C7BBC4C75CE99E743A',1,'CONFG','86400','Lookup results may continue to be persisted in the DB long after they are needed. This parameter represents the minimum amount of time, in seconds, that the results will be allowed to persist in the DB before they are deleted from the DB.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Lookup','MULTIPLE_VALUE_RESULTS_PER_PAGE','90D766F2396C4C9DAE37FDECA0682233',1,'CONFG','100','The max number of rows that will be displayed on a lookup results screen','A','WorkflowAdmin')
;


INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","OBJ_ID","VER_NBR","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','UniversalUser','UNIVERSAL_USER_EDIT_GROUP','F8ED3336B99546878BE7B41311E4F63E',1,'AUTH','UNIVERSAL_USER_MAINTAINERS','Workgroup which can edit the universal user table.','A','WorkflowAdmin')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','All','DEFAULT_MAX_UPLOAD_FILE_SIZE','CONFG','5M','Maximum file upload size for the application. Used by PojoFormBase. Must be an integer, optionally followed by "K", "M", or "G". Only used if no other upload limits are in effect.','A','KUALI_FMSOPS')
;
INSERT INTO sh_parm_t
("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM")
VALUES
('KR-NS','Document','ATTACHMENT_MAX_FILE_SIZE','CONFG','5M','Maximum attachment upload size for the application. Used by KualiDocumentFormBase. Must be an integer, optionally followed by "K", "M", or "G".','A','KUALI_FMSOPS')
;
INSERT INTO SH_PARM_T
(SH_PARM_NMSPC_CD, SH_PARM_DTL_TYP_CD, SH_PARM_NM, OBJ_ID, VER_NBR, SH_PARM_TYP_CD, SH_PARM_TXT, SH_PARM_DESC, SH_PARM_CONS_CD, WRKGRP_NM) 
VALUES
('KR-NS', 'Document', 'SEND_NOTE_WORKFLOW_NOTIFICATION_ACTIONS', sys_guid(), 0, 'CONFG', 'K', 'Some documents provide the functionality to send notes to another user using a workflow FYI or acknowledge functionality. This parameter specifies the default action that will be used when sending notes. This parameter should be one of the following 2 values: "K" for acknowledge or "F" for fyi. Depending on the notes and workflow service implementation, other values may be possible (see edu.iu.uis.eden.EdenConstants javadocs for details).', 'A', 'KUALI_FMSOPS')
;


INSERT INTO sh_parm_t ("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM") VALUES ('KR-NS','Lookup','RESULTS_DEFAULT_MAX_COLUMN_LENGTH','CONFG','70','If a maxLength attribute has not been set on a lookup result field in the data dictionary, then the result column''s max length will be the value of this parameter. Set this parameter to 0 for an unlimited default length or a positive value (i.e. greater than 0) for a finite max length.','A','KUALI_FMSOPS');
INSERT INTO sh_parm_t ("SH_PARM_NMSPC_CD","SH_PARM_DTL_TYP_CD","SH_PARM_NM","SH_PARM_TYP_CD","SH_PARM_TXT","SH_PARM_DESC","SH_PARM_CONS_CD","WRKGRP_NM") VALUES ('KR-NS','Lookup','RESULTS_LIMIT','CONFG','70','If a maxLength attribute has not been set on a lookup result field in the data dictionary, then the result column''s max length will be the value of this parameter. Set this parameter to 0 for an unlimited default length or a positive value (i.e. greater than 0) for a finite max length.','A','KUALI_FMSOPS');;

INSERT INTO KIM_NAMESPACES_T (ID, NAME, DESCRIPTION) VALUES (1, 'KIM', 'This record represents the actual KIM system and must always be loaded by default in order for the system to work properly.');
INSERT INTO KIM_PERSONS_T (ID, USERNAME, PASSWORD) VALUES (1, 'admin', 'admin');

INSERT INTO NOTIFICATION_PRIORITIES
(ID, NAME, DESCRIPTION, PRIORITY_ORDER)
VALUES
(1, 'Normal', 'Normal priority', 2);

INSERT INTO NOTIFICATION_PRIORITIES
(ID, NAME, DESCRIPTION, PRIORITY_ORDER)
VALUES
(2, 'Low', 'A low priority', 3);

INSERT INTO NOTIFICATION_PRIORITIES
(ID, NAME, DESCRIPTION, PRIORITY_ORDER)
VALUES
(3, 'High', 'A high priority', 1);

INSERT INTO NOTIFICATION_CONTENT_TYPES
(ID, NAME, DESCRIPTION, NAMESPACE, XSD, XSL)
VALUES
(1, 'Simple', 'Simple content type', 'notification/ContentTypeSimple',
'<?xml version="1.0" encoding="UTF-8"?>
<!-- This schema describes a simple notification.  It only contains a content
element which is a String...about as simple as one can get -->
<schema xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:c="ns:notification/common"
  xmlns:cs="ns:notification/ContentTypeSimple"
  targetNamespace="ns:notification/ContentTypeSimple"
  attributeFormDefault="unqualified"
    elementFormDefault="qualified">
  <annotation>
    <documentation xml:lang="en">
      Simple Content Schema
    </documentation>
  </annotation>
  <import namespace="ns:notification/common" schemaLocation="resource:notification/notification-common" />
  <!--  The content element is just a String -->
  <element name="content">
    <complexType>
      <sequence>
        <element name="message" type="c:LongStringType"/>
      </sequence>
    </complexType>
  </element>
</schema>',
'<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
   version="1.0"
   xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
   xmlns:n="ns:notification/ContentTypeSimple"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="ns:notification/ContentTypeSimple resource:notification/ContentTypeSimple"
   exclude-result-prefixes="n xsi">
   <xsl:output method="html" omit-xml-declaration="yes" />
   <xsl:template match="/n:content/n:message">
      <strong>
          <xsl:value-of select="." disable-output-escaping="yes"/>
      </strong>
   </xsl:template>
</xsl:stylesheet>');

INSERT INTO NOTIFICATION_CONTENT_TYPES
(ID, NAME, DESCRIPTION, NAMESPACE, XSD, XSL)
VALUES
(2, 'Event', 'Event content type', 'notification/ContentTypeEvent',
'<?xml version="1.0" encoding="UTF-8"?>
<!-- This schema defines an generic event notification type in order for it
to be accepted into the system. -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:c="ns:notification/common" xmlns:ce="ns:notification/ContentTypeEvent" targetNamespace="ns:notification/ContentTypeEvent" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <annotation>
    <documentation xml:lang="en">Content Event Schema</documentation>
  </annotation>
  <import namespace="ns:notification/common" schemaLocation="resource:notification/notification-common" />
  <!-- The content element describes the content of the notification.  It
  contains a message (a simple String) and a message element -->
  <element name="content">
    <complexType>
      <sequence>
        <element name="message" type="c:LongStringType"/>
        <element ref="ce:event"/>
      </sequence>
    </complexType>
  </element>
  <!-- This is the event element.  It describes a simple event type containing a
  summary, description, location, and start/stop times -->
  <element name="event">
    <complexType>
      <sequence>
        <element name="summary" type="c:NonEmptyShortStringType" />
        <element name="description" type="c:NonEmptyShortStringType" />
        <element name="location" type="c:NonEmptyShortStringType" />
        <element name="startDateTime" type="dateTime" />
        <element name="stopDateTime" type="dateTime" />
      </sequence>
    </complexType>
  </element>
</schema>',
'<?xml version="1.0" encoding="UTF-8"?>
<!-- style sheet declaration: be very careful editing the following, the
     default namespace must be used otherwise elements will not match -->
<xsl:stylesheet
    version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:n="ns:notification/ContentTypeEvent"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="ns:notification/ContentTypeEvent resource:notification/ContentTypeEvent"
    exclude-result-prefixes="n xsi">
    <!-- output an html fragment -->
    <xsl:output method="html" indent="yes" />
    <!-- match everything -->
    <xsl:template match="/n:content" >
        <table class="bord-all">
            <xsl:apply-templates />
        </table>
    </xsl:template>
    <!--  match message element in the default namespace and render as strong -->
    <xsl:template match="n:message" >
        <caption>
            <strong><xsl:value-of select="." disable-output-escaping="yes"/></strong>
        </caption>
    </xsl:template>
    <!-- match on event in the default namespace and display all children -->
    <xsl:template match="n:event">
        <tr>
            <td class="thnormal"><strong>Summary: </strong></td>
            <td class="thnormal"><xsl:value-of select="n:summary" /></td>
        </tr>
        <tr>
            <td class="thnormal"><strong>Description: </strong></td>
            <td class="thnormal"><xsl:value-of select="n:description" /></td>
        </tr>
        <tr>
            <td class="thnormal"><strong>Location: </strong></td>
            <td class="thnormal"><xsl:value-of select="n:location" /></td>
        </tr>
        <tr>
            <td class="thnormal"><strong>Start Time: </strong></td>
            <td class="thnormal"><xsl:value-of select="n:startDateTime" /></td>
        </tr>
        <tr>
            <td class="thnormal"><strong>End Time: </strong></td>
            <td class="thnormal"><xsl:value-of select="n:stopDateTime" /></td>
        </tr>
    </xsl:template>
</xsl:stylesheet>');

INSERT INTO NOTIFICATION_PRODUCERS
(ID, NAME, DESCRIPTION, CONTACT_INFO)
VALUES
(1, 'Notification System', 'This producer represents messages sent from the general message sending forms.', 'kuali-ken-testing@cornell.edu');

INSERT INTO NOTIFICATION_PRODUCERS
(ID, NAME, DESCRIPTION, CONTACT_INFO)
VALUES
(2, 'University Library System', 'This producer represents messages sent from the University Library system.', 'kuali-ken-testing@cornell.edu');

INSERT INTO NOTIFICATION_PRODUCERS
(ID, NAME, DESCRIPTION, CONTACT_INFO)
VALUES
(3, 'University Events Office', 'This producer represents messages sent from the University Events system.', 'kuali-ken-testing@cornell.edu');

DELETE FROM NOTIFICATION_CHANNELS;

INSERT INTO NOTIFICATION_CHANNELS
(ID, NAME, DESCRIPTION, SUBSCRIBABLE)
VALUES
(1, 'Kuali Rice Channel', 'This channel is used for sending out information about the Kuali Rice effort.', 'Y');

INSERT INTO NOTIFICATION_CHANNELS
(ID, NAME, DESCRIPTION, SUBSCRIBABLE)
VALUES
(2, 'Library Events Channel', 'This channel is used for sending out information about Library Events.', 'Y');

INSERT INTO NOTIFICATION_CHANNELS
(ID, NAME, DESCRIPTION, SUBSCRIBABLE)
VALUES
(3, 'Overdue Library Books', 'This channel is used for sending out information about your overdue books.', 'N');

INSERT INTO NOTIFICATION_CHANNELS
(ID, NAME, DESCRIPTION, SUBSCRIBABLE)
VALUES
(4, 'Concerts Coming to Campus', 'This channel broadcasts any concerts coming to campus.', 'Y');

INSERT INTO NOTIFICATION_CHANNELS
(ID, NAME, DESCRIPTION, SUBSCRIBABLE)
VALUES
(5, 'University Alerts', 'This channel broadcasts general announcements for the university.', 'N');

INSERT INTO USER_CHANNEL_SUBSCRIPTIONS
(ID, CHANNEL_ID, USER_ID)
VALUES
(1, 1, 'TestUser4');

INSERT INTO NOTIFICATION_RECIPIENTS_LISTS
(ID, CHANNEL_ID, RECIPIENT_TYPE, RECIPIENT_ID)
values
(1, 4, 'USER', 'TestUser1');

INSERT INTO NOTIFICATION_RECIPIENTS_LISTS
(ID, CHANNEL_ID, RECIPIENT_TYPE, RECIPIENT_ID)
values
(2, 4, 'USER', 'TestUser3');

INSERT INTO NOTIFICATION_REVIEWERS
(ID, CHANNEL_ID, REVIEWER_TYPE, REVIEWER_ID)
VALUES
(1, 1, 'GROUP', 'RiceTeam');

INSERT INTO NOTIFICATION_REVIEWERS
(ID, CHANNEL_ID, REVIEWER_TYPE, REVIEWER_ID)
VALUES
(2, 5, 'USER', 'TestUser3');

INSERT INTO NOTIFICATION_REVIEWERS
(ID, CHANNEL_ID, REVIEWER_TYPE, REVIEWER_ID)
VALUES
(3, 5, 'GROUP', 'TestGroup1');

DELETE FROM NOTIFICATION_CHANNEL_PRODUCERS;

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(1, 1);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(2, 1);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(3, 1);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(4, 1);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(5, 1);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(2, 2);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(3, 2);

INSERT INTO NOTIFICATION_CHANNEL_PRODUCERS
(CHANNEL_ID, PRODUCER_ID)
VALUES
(4, 3);

INSERT INTO FP_DOC_GROUP_T VALUES ('MO', '054EDFB3B260C8D2E043816FD881C8EE', 1,	'Obsolete Maintenance Table', null);
INSERT INTO FP_DOC_GROUP_T VALUES ('MR', '054EDFB3B260C8D2E043816FD881C8EA', 1,	'Reference Table Maintenance', null);
INSERT INTO FP_DOC_TYPE_T VALUES ('PTYP', '1A6FEB2501C7607EE043814FD111607E', 1, 'MO', 'Parameter Type', 'N', 'Y', 'N', 0, 'N', 'N');
INSERT INTO FP_DOC_TYPE_T VALUES ('PDTP', '1A6FEB2501C7607EE043814FD112607E', 1, 'MR', 'Parameter Detailed Type', 'N', 'Y', 'N', 0, 'N', 'N');
INSERT INTO FP_DOC_TYPE_T VALUES ('PNMS', '1A6FEB2501C7607EE043814FD113607E', 1, 'MR', 'Parameter Namespace', 'N', 'Y', 'N', 0, 'N', 'N');

