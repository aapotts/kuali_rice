Index: test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchAttribute2.java
===================================================================
RCS file: /opt/cvs/workflow/test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchAttribute2.java,v
retrieving revision 1.1
diff -u -r1.1 Client1SearchAttribute2.java
--- test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchAttribute2.java	8 Dec 2006 19:47:07 -0000	1.1
+++ test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchAttribute2.java	28 Mar 2007 15:31:05 -0000
@@ -5,6 +5,7 @@
 import java.util.Map;
 
 import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
 import edu.iu.uis.eden.lookupable.Row;
 import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
@@ -20,7 +21,7 @@
 
 	public List<SearchableAttributeValue> getSearchStorageValues(String docContent) {
 		List<SearchableAttributeValue> savs = new ArrayList<SearchableAttributeValue>();
-		SearchableAttributeValue sav = new SearchableAttributeValue();
+		SearchableAttributeStringValue sav = new SearchableAttributeStringValue();
 		sav.setRouteHeader(new DocumentRouteHeaderValue());
 		sav.setSearchableAttributeKey("client2Key");
 		sav.setSearchableAttributeValue("client2Value");
Index: test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchableAttribute.java
===================================================================
RCS file: /opt/cvs/workflow/test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchableAttribute.java,v
retrieving revision 1.2
diff -u -r1.2 Client1SearchableAttribute.java
--- test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchableAttribute.java	8 Dec 2006 19:47:07 -0000	1.2
+++ test/clients/TestClient1/WEB-INF/src/edu/iu/uis/eden/test/services/remotedcomponents/Client1SearchableAttribute.java	28 Mar 2007 15:31:05 -0000
@@ -5,6 +5,7 @@
 import java.util.Map;
 
 import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
 import edu.iu.uis.eden.lookupable.Row;
 import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
@@ -23,7 +24,7 @@
 
 	public List<SearchableAttributeValue> getSearchStorageValues(String docContent) {
 		List<SearchableAttributeValue> savs = new ArrayList<SearchableAttributeValue>();
-		SearchableAttributeValue sav = new SearchableAttributeValue();
+        SearchableAttributeStringValue sav = new SearchableAttributeStringValue();
 		sav.setRouteHeader(new DocumentRouteHeaderValue());
 		sav.setSearchableAttributeKey("client1Key");
 		sav.setSearchableAttributeValue("client1Value");
Index: .classpath
===================================================================
RCS file: /opt/cvs/workflow/.classpath,v
retrieving revision 1.117.4.4
diff -u -r1.117.4.4 .classpath
--- .classpath	16 Feb 2007 02:06:07 -0000	1.117.4.4
+++ .classpath	28 Mar 2007 15:31:04 -0000
@@ -50,7 +50,7 @@
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/wss4j/wss4j.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/wss4j/xmlsec-1.3.0.jar"/>
 	<classpathentry kind="lib" path="plugin/lib/casfilter.jar"/>
-	<classpathentry kind="lib" path="workflow_libraries/bin/shared/displaytag-1.1/displaytag-1.1.jar" sourcepath="/Users/ewestfal/Desktop/Desktop Archive/displaytag-1.1/displaytag/src/main/java"/>
+	<classpathentry kind="lib" path="workflow_libraries/bin/shared/displaytag-1.1/displaytag-1.1.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/ognl-2.6.7/ognl-2.6.7.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/jmanage/jmanage-startup.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/jmanage/jmxri-1_2_1.jar"/>
@@ -116,5 +116,6 @@
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/htmlunit-1.10/js-1.6R2.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/htmlunit-1.10/jaxen-1.1-beta-11.jar"/>
 	<classpathentry kind="lib" path="workflow_libraries/bin/shared/htmlunit-1.10/htmlunit-1.10.jar"/>
+	<classpathentry kind="lib" path="C:/java/servers/apache-tomcat-5.5.17/common/lib/ojdbc14.jar"/>
 	<classpathentry kind="output" path="classes"/>
 </classpath>
Index: embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAO.java
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAO.java,v
retrieving revision 1.1
diff -u -r1.1 DocumentSearchDAO.java
--- embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAO.java	24 Aug 2006 18:14:15 -0000	1.1
+++ embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAO.java	28 Mar 2007 15:31:05 -0000
@@ -3,8 +3,10 @@
 import java.util.List;
 
 import edu.iu.uis.eden.docsearch.DocSearchCriteriaVO;
+import edu.iu.uis.eden.docsearch.DocumentSearchExecutor;
 import edu.iu.uis.eden.exception.EdenUserNotFoundException;
 
 public interface DocumentSearchDAO {
     public List getList(DocSearchCriteriaVO criteria) throws EdenUserNotFoundException;
+    public List getList(DocumentSearchExecutor docSearchExecutor,DocSearchCriteriaVO criteria) throws EdenUserNotFoundException;
 }
\ No newline at end of file
Index: embedded-src/edu/iu/uis/eden/docsearch/dao/SearchableAttributeSql.java
===================================================================
RCS file: embedded-src/edu/iu/uis/eden/docsearch/dao/SearchableAttributeSql.java
diff -N embedded-src/edu/iu/uis/eden/docsearch/dao/SearchableAttributeSql.java
--- embedded-src/edu/iu/uis/eden/docsearch/dao/SearchableAttributeSql.java	24 Aug 2006 18:14:15 -0000	1.1
+++ /dev/null	1 Jan 1970 00:00:00 -0000
@@ -1,67 +0,0 @@
-package edu.iu.uis.eden.docsearch.dao;
-
-public class SearchableAttributeSql {
-
-	private String selectSql = "";
-	private String fromSql = "";
-	private String whereSql = "";
-	
-	private int searchableAttributeCount = 0;
-
-	/**
-	 * @return Returns the tables.
-	 */
-	public String getFromSql() {
-		return fromSql;
-	}
-
-	/**
-	 * @return Returns the searchableAttributeCount.
-	 */
-	public int getSearchableAttributeCount() {
-		return searchableAttributeCount;
-	}
-
-	/**
-	 * @return Returns the sql.
-	 */
-	public String getSelectSql() {
-		return selectSql;
-	}
-
-	/**
-	 * @return Returns the tempSql.
-	 */
-	public String getWhereSql() {
-		return whereSql;
-	}
-
-	/**
-	 * @param tables The tables to set.
-	 */
-	public void setFromSql(String tables) {
-		this.fromSql = tables;
-	}
-
-	/**
-	 * @param searchableAttributeCount The searchableAttributeCount to set.
-	 */
-	public void setSearchableAttributeCount(int searchableAttributeCount) {
-		this.searchableAttributeCount = searchableAttributeCount;
-	}
-
-	/**
-	 * @param sql The sql to set.
-	 */
-	public void setSelectSql(String sql) {
-		this.selectSql = sql;
-	}
-
-	/**
-	 * @param tempSql The tempSql to set.
-	 */
-	public void setWhereSql(String tempSql) {
-		this.whereSql = tempSql;
-	}
-	
-}
Index: embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAOOjbImpl.java
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAOOjbImpl.java,v
retrieving revision 1.2
diff -u -r1.2 DocumentSearchDAOOjbImpl.java
--- embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAOOjbImpl.java	4 Jan 2007 17:53:47 -0000	1.2
+++ embedded-src/edu/iu/uis/eden/docsearch/dao/DocumentSearchDAOOjbImpl.java	28 Mar 2007 15:31:05 -0000
@@ -18,9 +18,11 @@
 
 import edu.iu.uis.eden.EdenConstants;
 import edu.iu.uis.eden.KEWServiceLocator;
-import edu.iu.uis.eden.database.platform.Platform.DocSearchResult;
+import edu.iu.uis.eden.database.platform.Platform;
 import edu.iu.uis.eden.docsearch.DocSearchCriteriaVO;
 import edu.iu.uis.eden.docsearch.DocSearchVO;
+import edu.iu.uis.eden.docsearch.DocumentSearchExecutor;
+import edu.iu.uis.eden.docsearch.DocumentSearchExecutor.DocSearchResult;
 import edu.iu.uis.eden.exception.EdenUserNotFoundException;
 import edu.iu.uis.eden.user.WorkflowUser;
 import edu.iu.uis.eden.user.WorkflowUserId;
@@ -42,7 +44,7 @@
         try {
             broker = this.getPersistenceBroker();
             conn = broker.serviceConnectionManager().getConnection();
-            DocSearchResult dsr = KEWServiceLocator.getDbPlatform().getDocSearchSQL(criteria);
+            Platform.DocSearchResult dsr = KEWServiceLocator.getDbPlatform().getDocSearchSQL(criteria);
             LOG.info("Executing document search w/page size="+DocSearchCriteriaVO.SEARCH_RESULT_CAP+": " + dsr.getSql());
             statement = conn.createStatement();
             // new paging for patch
@@ -97,6 +99,58 @@
         return docList;
     }
 
+    public List getList(DocumentSearchExecutor docSearchExecutor,DocSearchCriteriaVO criteria) throws EdenUserNotFoundException {
+        LOG.info("start getList");
+        List docList = new ArrayList();
+        PersistenceBroker broker = null;
+        Connection conn = null;
+        Statement statement = null;
+        ResultSet rs = null;
+        try {
+            broker = this.getPersistenceBroker();
+            conn = broker.serviceConnectionManager().getConnection();
+            DocSearchResult dsr = docSearchExecutor.executeSearch(criteria);
+//            DocSearchResult dsr = KEWServiceLocator.getDbPlatform().getDocSearchSQL(criteria);
+            LOG.info("Executing document search w/page size="+DocSearchCriteriaVO.SEARCH_RESULT_CAP+": " + dsr.getSql());
+            statement = conn.createStatement();
+            // new paging for patch
+            statement.setFetchSize(DocSearchCriteriaVO.SEARCH_RESULT_CAP+1);
+            statement.setMaxRows(DocSearchCriteriaVO.SEARCH_RESULT_CAP+1);
+            // ...end paging
+            rs = statement.executeQuery(dsr.getSql());
+            docList = docSearchExecutor.processResultSet(rs,criteria,dsr.getSearchableAttributeCount());
+        } catch (SQLException sqle) {
+            LOG.error("SQLException: " + sqle.getMessage(), sqle);
+        } catch (LookupException le) {
+            LOG.error("LookupException: " + le.getMessage(), le);
+        } finally {
+            if (rs != null) {
+                try {
+                    rs.close();
+                } catch (SQLException e) {
+                    LOG.warn("Could not close result set.");
+                }
+            }
+            if (statement != null) {
+                try {
+                    statement.close();
+                } catch (SQLException e) {
+                    LOG.warn("Could not close statement.");
+                }
+            }
+            if (broker != null) {
+                try {
+                    OjbFactoryUtils.releasePersistenceBroker(broker, getPbKey());
+                } catch (Exception e) {
+                    LOG.error("Failed closing connection: " + e.getMessage(), e);
+                }
+            }
+        }
+
+        LOG.info("end getlist");
+        return docList;
+    }
+    
     private DocSearchVO processRow(ResultSet rs, int searchableAttributeCount) throws java.sql.SQLException, EdenUserNotFoundException {
         DocSearchVO docSearchVO = new DocSearchVO();
 
Index: src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttribute.java
===================================================================
RCS file: /opt/cvs/workflow/src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttribute.java,v
retrieving revision 1.15
diff -u -r1.15 StandardGenericXMLSearchableAttribute.java
--- src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttribute.java	5 Jan 2007 22:02:29 -0000	1.15
+++ src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttribute.java	28 Mar 2007 15:31:05 -0000
@@ -39,7 +39,7 @@
 import org.xml.sax.InputSource;
 
 import edu.iu.uis.eden.KEWServiceLocator;
-import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.exception.EdenUserNotFoundException;
 import edu.iu.uis.eden.exception.WorkflowRuntimeException;
 import edu.iu.uis.eden.lookupable.Field;
@@ -169,7 +169,7 @@
                               //being that this is the standard xml attribute we will return the key with an empty value
                                 // so we can find it from a doc search using this key
                                 if (searchValues.getLength() == 0) { 
-                                	SearchableAttributeValue searchableValue = new SearchableAttributeValue();
+                                	SearchableAttributeStringValue searchableValue = new SearchableAttributeStringValue();
                                     searchableValue.setSearchableAttributeKey(fieldAttributes.getNamedItem("name").getNodeValue());
                                     // if there is no value, set it to a string with a single space in it, the column has a null constraint on it in the database and Oracle treats empty strings as NULL
                                     searchableValue.setSearchableAttributeValue(" ");
@@ -178,7 +178,7 @@
                                 } else {
                                 	for (int j = 0; j < searchValues.getLength(); j++) {
                                         Node searchValue = searchValues.item(j);
-                                        SearchableAttributeValue searchableValue = new SearchableAttributeValue();
+                                        SearchableAttributeStringValue searchableValue = new SearchableAttributeStringValue();
                                         searchableValue.setSearchableAttributeKey(fieldAttributes.getNamedItem("name").getNodeValue());
                                         if (searchValue.getFirstChild() == null || StringUtils.isEmpty(searchValue.getFirstChild().getNodeValue())) {
                                         	searchableValue.setSearchableAttributeValue(" ");
@@ -193,7 +193,7 @@
                                 //seems like a poor way to determine our expression return type but 
                                 //it's all I can come up with at the moment.
                                 String searchValue = (String) xpath.evaluate(xpathExpression, DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new BufferedReader(new StringReader(docContent)))).getDocumentElement(), XPathConstants.STRING);
-                                SearchableAttributeValue searchableValue = new SearchableAttributeValue();
+                                SearchableAttributeStringValue searchableValue = new SearchableAttributeStringValue();
                                 searchableValue.setSearchableAttributeKey(fieldAttributes.getNamedItem("name").getNodeValue());
                                 if (StringUtils.isEmpty(searchValue)) {
                                 	searchValue = " ";
Index: embedded-src/edu/iu/uis/eden/database/platform/SqlUtil.java
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/edu/iu/uis/eden/database/platform/SqlUtil.java,v
retrieving revision 1.3
diff -u -r1.3 SqlUtil.java
--- embedded-src/edu/iu/uis/eden/database/platform/SqlUtil.java	4 Jan 2007 19:21:01 -0000	1.3
+++ embedded-src/edu/iu/uis/eden/database/platform/SqlUtil.java	28 Mar 2007 15:31:05 -0000
@@ -13,7 +13,8 @@
 import edu.iu.uis.eden.KEWServiceLocator;
 import edu.iu.uis.eden.database.platform.Platform.DocSearchResult;
 import edu.iu.uis.eden.docsearch.DocSearchCriteriaVO;
-import edu.iu.uis.eden.docsearch.dao.SearchableAttributeSql;
+import edu.iu.uis.eden.docsearch.QueryComponent;
+import edu.iu.uis.eden.docsearch.SearchableAttributeSql;
 import edu.iu.uis.eden.doctype.DocumentType;
 import edu.iu.uis.eden.doctype.DocumentTypeService;
 import edu.iu.uis.eden.exception.EdenUserNotFoundException;
@@ -134,9 +135,8 @@
 //            }
         }
 
-        searchableAttributeSql.setSelectSql(selectSql.toString());
-        searchableAttributeSql.setWhereSql(whereSql.toString());
-        searchableAttributeSql.setFromSql(fromSql.toString());
+        QueryComponent qc = new QueryComponent(selectSql.toString(),fromSql.toString(),whereSql.toString());
+        searchableAttributeSql.setQueryComponent(qc);
         searchableAttributeSql.setSearchableAttributeCount(searchableAttributes.size());
         return searchableAttributeSql;
     }
@@ -427,9 +427,10 @@
         filterOutNonQueryAttributes(criteria);
         if ((criteria.getSearchableAttributes() != null) && (criteria.getSearchableAttributes().size() > 0)) {
             searchableAttributeSql = SqlUtil.getSearchableAttributeSql(criteria.getSearchableAttributes(), whereSQL.length());
-            selectSQL.append(searchableAttributeSql.getSelectSql());
-            fromSQL.append(searchableAttributeSql.getFromSql());
-            whereSQL.append(searchableAttributeSql.getWhereSql());
+            QueryComponent searchableAttributeQueryComponent = searchableAttributeSql.getQueryComponent();
+            selectSQL.append(searchableAttributeQueryComponent.getSelectSql());
+            fromSQL.append(searchableAttributeQueryComponent.getFromSql());
+            whereSQL.append(searchableAttributeQueryComponent.getWhereSql());
             searchablAttributeCount = searchableAttributeSql.getSearchableAttributeCount();
         }
 
Index: plugin/src/edu/iu/uis/eden/routing/chartorgnode/OrganizationRoutingAttribute.java
===================================================================
RCS file: /opt/cvs/workflow/plugin/src/edu/iu/uis/eden/routing/chartorgnode/OrganizationRoutingAttribute.java,v
retrieving revision 1.9
diff -u -r1.9 OrganizationRoutingAttribute.java
--- plugin/src/edu/iu/uis/eden/routing/chartorgnode/OrganizationRoutingAttribute.java	4 Jan 2007 19:21:00 -0000	1.9
+++ plugin/src/edu/iu/uis/eden/routing/chartorgnode/OrganizationRoutingAttribute.java	28 Mar 2007 15:31:05 -0000
@@ -10,6 +10,7 @@
 import edu.iu.uis.eden.IUServiceLocator;
 import edu.iu.uis.eden.WorkflowServiceErrorImpl;
 import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
 import edu.iu.uis.eden.engine.node.NodeState;
 import edu.iu.uis.eden.engine.node.RouteNodeInstance;
@@ -239,13 +240,13 @@
         List searchStorageValues = new ArrayList();
 //      TODO the variables finCoaCd and orgCd may not be populated.  Values may only be in the incoming doc content.
         if (finCoaCd != null && !finCoaCd.equals("")) {
-            SearchableAttributeValue searchableFinCoaCd = new SearchableAttributeValue();
+            SearchableAttributeStringValue searchableFinCoaCd = new SearchableAttributeStringValue();
             searchableFinCoaCd.setSearchableAttributeKey(FIN_COA_CD_KEY);
             searchableFinCoaCd.setSearchableAttributeValue(this.finCoaCd);
             searchStorageValues.add(searchableFinCoaCd);
         }
         if (orgCd != null && !orgCd.equals("")) {
-            SearchableAttributeValue searchableOrgCd = new SearchableAttributeValue();
+            SearchableAttributeStringValue searchableOrgCd = new SearchableAttributeStringValue();
             searchableOrgCd.setSearchableAttributeKey(ORG_CD_KEY);
             searchableOrgCd.setSearchableAttributeValue(this.orgCd);
             searchStorageValues.add(searchableOrgCd);
Index: test/src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttributeTest.java
===================================================================
RCS file: /opt/cvs/workflow/test/src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttributeTest.java,v
retrieving revision 1.19
diff -u -r1.19 StandardGenericXMLSearchableAttributeTest.java
--- test/src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttributeTest.java	4 Jan 2007 17:53:46 -0000	1.19
+++ test/src/edu/iu/uis/eden/docsearch/xml/StandardGenericXMLSearchableAttributeTest.java	28 Mar 2007 15:31:05 -0000
@@ -226,9 +226,9 @@
         boolean foundJill = false;
         for (Iterator iter = doc.getSearchableAttributeValues().iterator(); iter.hasNext();) {
             SearchableAttributeValue searchableValue = (SearchableAttributeValue) iter.next();
-            if (searchableValue.getSearchableAttributeValue().equals("jack")) {
+            if (searchableValue.getSearchableAttributeStringValue().equals("jack")) {
                 foundJack = true;
-            } else if (searchableValue.getSearchableAttributeValue().equals("jill")) {
+            } else if (searchableValue.getSearchableAttributeStringValue().equals("jill")) {
                 foundJill = true;
             }
         }
@@ -250,7 +250,7 @@
     	WorkflowDocument workflowDocument2 = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType2");
     	workflowDocument2.saveDocument("");
     	
-    	DocumentRouteHeaderValue document2 = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+    	DocumentRouteHeaderValue document2 = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument2.getRouteHeaderId());
     	assertEquals("Should have a searchable attribute key", 1, document2.getSearchableAttributeValues().size());
     	assertEquals("Searchable attribute key should be givenname", "givenname", ((SearchableAttributeValue)document2.getSearchableAttributeValues().get(0)).getSearchableAttributeKey());
     }
@@ -331,11 +331,11 @@
         boolean foundDukeBoys = false;
         for (Iterator iter = doc.getSearchableAttributeValues().iterator(); iter.hasNext();) {
             SearchableAttributeValue searchableValue = (SearchableAttributeValue) iter.next();
-            if (searchableValue.getSearchableAttributeValue().equals("dukeboys")) {
+            if (searchableValue.getSearchableAttributeStringValue().equals("dukeboys")) {
                 foundDukeBoys = true;
-            } else if (searchableValue.getSearchableAttributeValue().equals("luke duke")) {
+            } else if (searchableValue.getSearchableAttributeStringValue().equals("luke duke")) {
                 foundLuke = true;
-            } else if (searchableValue.getSearchableAttributeValue().equals("bo duke")) {
+            } else if (searchableValue.getSearchableAttributeStringValue().equals("bo duke")) {
                 foundBo = true;
             }
         }
@@ -382,7 +382,7 @@
         for (Iterator iter = values.iterator(); iter.hasNext();) {
             SearchableAttributeValue value = (SearchableAttributeValue) iter.next();
             assertTrue("Key should be givenname", "givenname".equals(value.getSearchableAttributeKey()));
-            assertTrue("Value should be jack", "jack".equals(value.getSearchableAttributeValue()));
+            assertTrue("Value should be jack", "jack".equals(value.getSearchableAttributeStringValue()));
         }
     }
 
Index: test/src/edu/iu/uis/eden/docsearch/xml/XmlConfig.xml
===================================================================
RCS file: /opt/cvs/workflow/test/src/edu/iu/uis/eden/docsearch/xml/XmlConfig.xml,v
retrieving revision 1.5
diff -u -r1.5 XmlConfig.xml
--- test/src/edu/iu/uis/eden/docsearch/xml/XmlConfig.xml	10 Aug 2006 16:01:38 -0000	1.5
+++ test/src/edu/iu/uis/eden/docsearch/xml/XmlConfig.xml	28 Mar 2007 15:31:06 -0000
@@ -146,6 +146,27 @@
 				</xmlSearchContent>
 			</searchingConfig>
 		</ruleAttribute>
+		<ruleAttribute>
+			<name>XMLSearchableAttributeLong</name>
+			<className>edu.iu.uis.eden.docsearch.xml.TestXMLSearchableAttributeLong</className>
+			<label>XML Searchable attribute</label>
+			<description>XML Searchable attribute</description>
+			<type>SearchableAttribute</type>
+		</ruleAttribute>
+		<ruleAttribute>
+			<name>XMLSearchableAttributeFloat</name>
+			<className>edu.iu.uis.eden.docsearch.xml.TestXMLSearchableAttributeFloat</className>
+			<label>XML Searchable attribute</label>
+			<description>XML Searchable attribute</description>
+			<type>SearchableAttribute</type>
+		</ruleAttribute>
+		<ruleAttribute>
+			<name>XMLSearchableAttributeDateTime</name>
+			<className>edu.iu.uis.eden.docsearch.xml.TestXMLSearchableAttributeDateTime</className>
+			<label>XML Searchable attribute</label>
+			<description>XML Searchable attribute</description>
+			<type>SearchableAttribute</type>
+		</ruleAttribute>
 	</ruleAttributes>
 	<ruleTemplates xmlns="ns:workflow/RuleTemplate" xsi:schemaLocation="ns:workflow/RuleTemplate resource:RuleTemplate">
 		<ruleTemplate>
@@ -211,7 +232,7 @@
 		<documentType>
 			<name>SearchDocType2</name>
 			<description>SearchDocType2</description>
-			<label>SearchDocType</label>
+			<label>SearchDocType2</label>
 			<postProcessorName>edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttributePostProcessor</postProcessorName>
 			<docHandler>_blank</docHandler>
 			<superUserWorkgroupName>TestWorkgroup</superUserWorkgroupName>
@@ -255,6 +276,62 @@
 			</routeNodes>
 		</documentType>		
 		<documentType>
+			<name>SearchDocType3</name>
+			<description>SearchDocType3</description>
+			<label>SearchDocType3</label>
+			<postProcessorName>edu.iu.uis.eden.postprocessor.DefaultPostProcessor</postProcessorName>
+			<!--  postProcessorName>edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttributePostProcessor</postProcessorName -->
+			<docHandler>_blank</docHandler>
+			<superUserWorkgroupName>TestWorkgroup</superUserWorkgroupName>
+			<blanketApproveWorkgroupName>TestWorkgroup</blanketApproveWorkgroupName>
+			<defaultExceptionWorkgroupName>TestWorkgroup</defaultExceptionWorkgroupName>
+			<attributesInherited>false</attributesInherited>
+			<active>true</active>
+			<policies>
+				<policy>
+					<name>PRE_APPROVE</name>
+					<value>false</value>
+				</policy>
+				<policy>
+					<name>DEFAULT_APPROVE</name>
+					<value>false</value>
+				</policy>
+			</policies>
+			<attributes>
+				<!-- Add the CustomActionListAttribute to this document type to verify the resolution to KULWF-654 -->
+				<attribute>
+					<name>CustomActionListAttribute</name>
+				</attribute>
+				<attribute>
+					<name>XMLSearchableAttribute</name>
+				</attribute>
+				<attribute>
+					<name>XMLSearchableAttributeLong</name>
+				</attribute>
+				<attribute>
+					<name>XMLSearchableAttributeFloat</name>
+				</attribute>
+				<attribute>
+					<name>XMLSearchableAttributeDateTime</name>
+				</attribute>
+			</attributes>
+			<routePaths>
+				<routePath>
+					<start name="Initial" nextNode="First" />
+					<requests name="First" />
+				</routePath>
+			</routePaths>
+			<routeNodes>
+				<start name="Initial">
+					<activationType>P</activationType>
+				</start>
+				<requests name="First">
+					<activationType>S</activationType>
+					<ruleTemplate>searchTemplate</ruleTemplate>
+				</requests>
+			</routeNodes>
+		</documentType>
+		<documentType>
 			<name>SearchDocTypeXStream</name>
 			<description>SearchDocTypeXStream</description>
 			<label>SearchDocTypeXStream</label>
@@ -384,6 +461,19 @@
 			</responsibilities>
 		</rule>
 		<rule>
+			<documentType>SearchDocType3</documentType>
+			<ruleTemplate>searchTemplate</ruleTemplate>
+			<description>Search attribute rule test</description>
+			<ignorePrevious>false</ignorePrevious>
+			<responsibilities>
+				<responsibility>
+					<user>jhopf</user>
+					<actionRequested>A</actionRequested>
+					<priority>1</priority>
+				</responsibility>
+			</responsibilities>
+		</rule>
+		<rule>
 			<documentType>SearchDocTypeXStream</documentType>
 			<ruleTemplate>searchTemplate</ruleTemplate>
 			<description>Search XStream attribute rule test</description>
Index: test/src/edu/iu/uis/eden/messaging/RemotingDocumentComponentsTest.java
===================================================================
RCS file: /opt/cvs/workflow/test/src/edu/iu/uis/eden/messaging/RemotingDocumentComponentsTest.java,v
retrieving revision 1.10
diff -u -r1.10 RemotingDocumentComponentsTest.java
--- test/src/edu/iu/uis/eden/messaging/RemotingDocumentComponentsTest.java	5 Jan 2007 16:47:04 -0000	1.10
+++ test/src/edu/iu/uis/eden/messaging/RemotingDocumentComponentsTest.java	28 Mar 2007 15:31:06 -0000
@@ -95,7 +95,7 @@
 		
 		assertTrue("document isn't enroute", document.stateIsEnroute());
 		DocumentType docType = KEWServiceLocator.getRouteHeaderService().getRouteHeader(document.getRouteHeaderId()).getDocumentType();
-		ObjectDefinition ppDef = docType.getPostProcessorObjectDefinition();
+		ObjectDefinition ppDef = docType.getObjectDefinition(docType.getPostProcessorName());
 		
 		List<BAMTargetEntry> bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(ppDef);
 		for (BAMTargetEntry entry : bams) {
@@ -203,10 +203,10 @@
 		for (SearchableAttributeValue value : searchAttVals) {
 			if (value.getSearchableAttributeKey().equals("client1Key")) {
 				att1Present = true;
-				assertEquals("Value for search att1 is wrong", "client1Value", value.getSearchableAttributeValue());
+				assertEquals("Value for search att1 is wrong", "client1Value", value.getSearchableAttributeStringValue());
 			} else if (value.getSearchableAttributeKey().equals("client2Key")) {
 				att2Present = true;
-				assertEquals("Value for search att2 is wrong", "client2Value", value.getSearchableAttributeValue());
+				assertEquals("Value for search att2 is wrong", "client2Value", value.getSearchableAttributeStringValue());
 			}
 		}
 		
@@ -399,17 +399,17 @@
 		DocumentType docType = KEWServiceLocator.getRouteHeaderService().getRouteHeader(document.getRouteHeaderId()).getDocumentType(); 
 		PostProcessor pp = docType.getPostProcessor();
 		pp.doActionTaken(getFakeyActionTakenEvent());
-		List<BAMTargetEntry> bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getPostProcessorObjectDefinition(), "doActionTaken");
+		List<BAMTargetEntry> bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getObjectDefinition(docType.getPostProcessorName()), "doActionTaken");
 		assertEquals("Should record 2 calls to pp.  Server and client", 2, bams.size());
 		verifyServerAndClientCall(bams, "calling pp doActionTaken");
 		
 		pp.doDeleteRouteHeader(new DeleteEvent(new Long(0), ""));
-		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getPostProcessorObjectDefinition(), "doDeleteRouteHeader");
+		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getObjectDefinition(docType.getPostProcessorName()), "doDeleteRouteHeader");
 		assertEquals("doDeleteRouteHeader Should record 2 calls to pp.  Server and client", 2, bams.size());
 		verifyServerAndClientCall(bams, "calling pp doDeleteRouteHeader");
 		
 		pp.doRouteLevelChange(new DocumentRouteLevelChange(new Long(0), "", 0, 0));
-		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getPostProcessorObjectDefinition(), "doRouteLevelChange");
+		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getObjectDefinition(docType.getPostProcessorName()), "doRouteLevelChange");
 		assertEquals("doRouteLevelChange Should record 2 calls to pp.  Server and client", 2, bams.size());
 		verifyServerAndClientCall(bams, "calling pp doRouteLevelChange");
 		
@@ -417,7 +417,7 @@
 		KEWServiceLocator.getBAMService().clearBAMTables();
 		
 		pp.doRouteStatusChange(new DocumentRouteStatusChange(new Long(0), "", "", ""));
-		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getPostProcessorObjectDefinition(), "doRouteStatusChange");
+		bams = KEWServiceLocator.getBAMService().getCallsForRemotedClasses(docType.getObjectDefinition(docType.getPostProcessorName()), "doRouteStatusChange");
 		assertEquals("doRouteStatusChange Should record 2 calls to pp.  Server and client", 2, bams.size());
 		verifyServerAndClientCall(bams, "calling pp doRouteStatusChange");
 	}
Index: plugin/src/edu/iu/uis/eden/routetemplate/attribute/ChartOrgAttribute.java
===================================================================
RCS file: /opt/cvs/workflow/plugin/src/edu/iu/uis/eden/routetemplate/attribute/ChartOrgAttribute.java,v
retrieving revision 1.8
diff -u -r1.8 ChartOrgAttribute.java
--- plugin/src/edu/iu/uis/eden/routetemplate/attribute/ChartOrgAttribute.java	4 Jan 2007 19:21:00 -0000	1.8
+++ plugin/src/edu/iu/uis/eden/routetemplate/attribute/ChartOrgAttribute.java	28 Mar 2007 15:31:05 -0000
@@ -15,7 +15,7 @@
 import edu.iu.uis.eden.WorkflowServiceErrorException;
 import edu.iu.uis.eden.WorkflowServiceErrorImpl;
 import edu.iu.uis.eden.docsearch.SearchableAttribute;
-import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.fisdata.Organization;
 import edu.iu.uis.eden.lookupable.Field;
 import edu.iu.uis.eden.lookupable.Row;
@@ -280,13 +280,13 @@
         List searchStorageValues = new ArrayList();
 //TODO the variables finCoaCd and orgCd may not be populated.  Values may only be in the incoming doc content.
         if (finCoaCd != null && !finCoaCd.equals("")) {
-        	SearchableAttributeValue searchableFinCoaCd = new SearchableAttributeValue();
+        	SearchableAttributeStringValue searchableFinCoaCd = new SearchableAttributeStringValue();
         	searchableFinCoaCd.setSearchableAttributeKey(FIN_COA_CD_KEY);
         	searchableFinCoaCd.setSearchableAttributeValue(this.finCoaCd);
             searchStorageValues.add(searchableFinCoaCd);
         }
         if (orgCd != null && !orgCd.equals("")) {
-        	SearchableAttributeValue searchableOrgCd = new SearchableAttributeValue();
+        	SearchableAttributeStringValue searchableOrgCd = new SearchableAttributeStringValue();
             searchableOrgCd.setSearchableAttributeKey(ORG_CD_KEY);
             searchableOrgCd.setSearchableAttributeValue(this.orgCd);
             searchStorageValues.add(searchableOrgCd);
Index: conf/sql/master_workflow_sql.sql
===================================================================
RCS file: /opt/cvs/workflow/conf/sql/master_workflow_sql.sql,v
retrieving revision 1.40.4.1
diff -u -r1.40.4.1 master_workflow_sql.sql
--- conf/sql/master_workflow_sql.sql	7 Feb 2007 14:37:17 -0000	1.40.4.1
+++ conf/sql/master_workflow_sql.sql	28 Mar 2007 15:31:04 -0000
@@ -666,10 +666,37 @@
 	PARAM				LONG NOT NULL,
 	CONSTRAINT EN_BAM_PARAM_T_PK PRIMARY KEY (BAM_PARAM_ID)
 )
- /
-CREATE SEQUENCE seq_en_edoclt INCREMENT BY 1 START WITH 2000
- /  
+/
+
+CREATE TABLE EN_DOC_HDR_EXT_LONG_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			NUMBER(19) NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_LONG_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+)
+/
+
+CREATE TABLE EN_DOC_HDR_EXT_FLT_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			FLOAT NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_FLT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+)
+/
+
+CREATE TABLE EN_DOC_HDR_EXT_DT_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			DATE NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_DT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+)
+/
 
+CREATE SEQUENCE seq_en_edoclt INCREMENT BY 1 START WITH 2000
+/  
 
 CREATE SEQUENCE SEQ_ACTN_ITM INCREMENT BY 1 START WITH 10000 
 /  
Index: embedded-src/edu/iu/uis/eden/docsearch/DocumentSearchServiceImpl.java
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/edu/iu/uis/eden/docsearch/DocumentSearchServiceImpl.java,v
retrieving revision 1.3
diff -u -r1.3 DocumentSearchServiceImpl.java
--- embedded-src/edu/iu/uis/eden/docsearch/DocumentSearchServiceImpl.java	4 Jan 2007 17:53:44 -0000	1.3
+++ embedded-src/edu/iu/uis/eden/docsearch/DocumentSearchServiceImpl.java	28 Mar 2007 15:31:05 -0000
@@ -44,7 +44,7 @@
 
 	private DocumentSearchDAO docSearchDao;
 	private UserOptionsService userOptionsService;
-
+    
 	public void setDocumentSearchDAO(DocumentSearchDAO docSearchDao) {
 		this.docSearchDao = docSearchDao;
 	}
@@ -71,32 +71,242 @@
 		DocSearchCriteriaVO criteria = getCriteriaFromSavedSearch(savedSearch);
 		return new SavedSearchResult(criteria, docSearchDao.getList(criteria));
 	}
+    
+    public void validateDocumentSearchCriteria(DocumentSearchExecutor docSearchExecutor,DocSearchCriteriaVO criteria) {
+        List errors = this.validateWorkflowDocumentSearchCriteria(criteria);
+        errors.addAll(docSearchExecutor.validateSearchableAttributes(criteria));
+        if (!errors.isEmpty()) {
+            throw new WorkflowServiceErrorException("Document Search Validation Errors", errors);
+        }
+    }
+    
+//	public void validateDocumentSearchCriteria(DocSearchCriteriaVO criteria) {
+//		List errors = new ArrayList();
+//
+//		// validate the network id's
+//		if (!validateNetworkId(criteria.getApprover())) {
+//			errors.add(new WorkflowServiceErrorImpl("Approver network id is invalid", "docsearch.DocumentSearchService.networkid.approver"));
+//		} else {
+//			if (criteria.getApprover() != null && !"".equals(criteria.getApprover().trim())) {
+//				criteria.setApprover(criteria.getApprover().trim());
+//			}
+//		}
+//		if (!validateNetworkId(criteria.getViewer())) {
+//			errors.add(new WorkflowServiceErrorImpl("Viewer network id is invalid", "docsearch.DocumentSearchService.networkid.viewer"));
+//		} else {
+//			if (criteria.getViewer() != null && !"".equals(criteria.getViewer().trim())) {
+//				criteria.setViewer(criteria.getViewer().trim());
+//			}
+//		}
+//		if (!validateNetworkId(criteria.getInitiator())) {
+//			errors.add(new WorkflowServiceErrorImpl("Initiator network id is invalid", "docsearch.DocumentSearchService.networkid.initiator"));
+//		} else {
+//			if (criteria.getInitiator() != null && !"".equals(criteria.getInitiator().trim())) {
+//				criteria.setInitiator(criteria.getInitiator().trim());
+//			}
+//		}
+//        
+//        if (! validateWorkgroup(criteria.getWorkgroupViewerName())) {
+//            errors.add(new WorkflowServiceErrorImpl("Workgroup Viewer Name is not a workgroup", "docsearch.DocumentSearchService.workgroup.viewer"));
+//        } else {
+//            if (!Utilities.isEmpty(criteria.getWorkgroupViewerName())){
+//                criteria.setWorkgroupViewerName(criteria.getWorkgroupViewerName().trim());    
+//            }
+//        }
+//
+//		// validate any numbers
+//		if (!validateNumber(criteria.getDocRouteNodeId())) {
+//			errors.add(new WorkflowServiceErrorImpl("Non-numeric route level", "docsearch.DocumentSearchService.routeLevel"));
+//		} else {
+//			if (criteria.getDocRouteNodeId() != null && !"".equals(criteria.getDocRouteNodeId().trim())) {
+//				criteria.setDocRouteNodeId(criteria.getDocRouteNodeId().trim());
+//			}
+//		}
+//		if (!validateNumber(criteria.getDocVersion())) {
+//			errors.add(new WorkflowServiceErrorImpl("Non-numeric document version", "docsearch.DocumentSearchService.docVersion"));
+//		} else {
+//			if (criteria.getDocVersion() != null && !"".equals(criteria.getDocVersion().trim())) {
+//				criteria.setDocVersion(criteria.getDocVersion().trim());
+//			}
+//		}
+//
+//		if (!validateNumber(criteria.getRouteHeaderId())) {
+//			errors.add(new WorkflowServiceErrorImpl("Non-numeric document id", "docsearch.DocumentSearchService.routeHeaderId"));
+//		} else {
+//			if (criteria.getRouteHeaderId() != null && !"".equals(criteria.getRouteHeaderId().trim())) {
+//				criteria.setRouteHeaderId(criteria.getRouteHeaderId().trim());
+//			}
+//		}
+//
+//		// validate any dates
+//		boolean compareDatePairs = true;
+//		if (!validateDate(criteria.getFromDateCreated())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getFromDateCreated() != null && !"".equals(criteria.getFromDateCreated().trim())) {
+//				criteria.setFromDateCreated(criteria.getFromDateCreated().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (!validateDate(criteria.getToDateCreated())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getToDateCreated() != null && !"".equals(criteria.getToDateCreated().trim())) {
+//				criteria.setToDateCreated(criteria.getToDateCreated().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (compareDatePairs) {
+//			if (!checkDateRanges(criteria.getFromDateCreated(), criteria.getToDateCreated())) {
+//				errors.add(new WorkflowServiceErrorImpl("Invalid create date range", "docsearch.DocumentSearchService.dateCreatedRange"));
+//			}
+//		}
+//		compareDatePairs = true;
+//		if (!validateDate(criteria.getFromDateApproved())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getFromDateApproved() != null && !"".equals(criteria.getFromDateApproved().trim())) {
+//				criteria.setFromDateApproved(criteria.getFromDateApproved().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (!validateDate(criteria.getToDateApproved())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getToDateApproved() != null && !"".equals(criteria.getToDateApproved().trim())) {
+//				criteria.setToDateApproved(criteria.getToDateApproved().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (compareDatePairs) {
+//			if (!checkDateRanges(criteria.getFromDateApproved(), criteria.getToDateApproved())) {
+//				errors.add(new WorkflowServiceErrorImpl("Invalid approved date range", "docsearch.DocumentSearchService.dateApprovedRange"));
+//			}
+//		}
+//		compareDatePairs = true;
+//		if (!validateDate(criteria.getFromDateFinalized())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getFromDateFinalized() != null && !"".equals(criteria.getFromDateFinalized().trim())) {
+//				criteria.setFromDateFinalized(criteria.getFromDateFinalized().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (!validateDate(criteria.getToDateFinalized())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getToDateFinalized() != null && !"".equals(criteria.getToDateFinalized().trim())) {
+//				criteria.setToDateFinalized(criteria.getToDateFinalized().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (compareDatePairs) {
+//			if (!checkDateRanges(criteria.getFromDateFinalized(), criteria.getToDateFinalized())) {
+//				errors.add(new WorkflowServiceErrorImpl("Invalid finalized date range", "docsearch.DocumentSearchService.dateFinalizedRange"));
+//			}
+//		}
+//		compareDatePairs = true;
+//		if (!validateDate(criteria.getFromDateLastModified())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getFromDateLastModified() != null && !"".equals(criteria.getFromDateLastModified().trim())) {
+//				criteria.setFromDateLastModified(criteria.getFromDateLastModified().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (!validateDate(criteria.getToDateLastModified())) {
+//			errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
+//			compareDatePairs = false;
+//		} else {
+//			if (criteria.getToDateLastModified() != null && !"".equals(criteria.getToDateLastModified().trim())) {
+//				criteria.setToDateLastModified(criteria.getToDateLastModified().trim());
+//			} else {
+//				compareDatePairs = false;
+//			}
+//		}
+//		if (compareDatePairs) {
+//			if (!checkDateRanges(criteria.getFromDateLastModified(), criteria.getToDateLastModified())) {
+//				errors.add(new WorkflowServiceErrorImpl("Invalid last modified date range", "docsearch.DocumentSearchService.dateLastModifiedRange"));
+//			}
+//		}
+//        
+//        
+//		List searchableAttributes = criteria.getSearchableAttributes();
+//		if (searchableAttributes != null && !searchableAttributes.isEmpty()) {
+//			Map paramMap = new HashMap();
+//			for (Iterator iter = searchableAttributes.iterator(); iter.hasNext();) {
+//				KeyLabelPair propertyField = (KeyLabelPair) iter.next();
+//				paramMap.put(propertyField.getKey(), propertyField.getLabel());
+//			}
+//			DocumentType documentType = KEWServiceLocator.getDocumentTypeService().findByName(criteria.getDocTypeFullName());
+//
+//			for (Iterator iter = documentType.getDocumentTypeAttributes().iterator(); iter.hasNext();) {
+//				DocumentTypeAttribute attribute = (DocumentTypeAttribute) iter.next();
+//				RuleAttribute ruleAttribute = attribute.getRuleAttribute();
+//				if (EdenConstants.SEARCHABLE_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType()) || EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())) {
+//					try {
+//						SearchableAttribute searchableAttribute = (SearchableAttribute) GlobalResourceLoader.getObject(new ObjectDefinition(ruleAttribute.getClassName(), ruleAttribute.getMessageEntity())); //SpringServiceLocator.getExtensionService().getSearchableAttribute(ruleAttribute.getClassName());
+//						if(EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())){
+//							((GenericXMLSearchableAttribute)searchableAttribute).setRuleAttribute(ruleAttribute);
+//						}
+//						List searchableErrors = searchableAttribute.validateUserSearchInputs(paramMap);
+//						if(!Utilities.isEmpty(searchableAttributes)){
+//							for (Iterator iterator = searchableErrors.iterator(); iterator.hasNext();) {
+//								WorkflowAttributeValidationError error = (WorkflowAttributeValidationError) iterator.next();
+//								errors.add(new WorkflowServiceErrorImpl(error.getKey(), "routetemplate.xmlattribute.error", error.getMessage()));
+//							}
+//						}
+//					} catch (Exception e) {
+//						LOG.error("error finding searchable attribute in when validating document search criteria.", e);
+//					}
+//				}
+//			}
+//		}
+//        
+//		if (!errors.isEmpty()) {
+//			throw new WorkflowServiceErrorException("Document Search Validation Errors", errors);
+//		}
+//	}
+    
+    protected List validateWorkflowDocumentSearchCriteria(DocSearchCriteriaVO criteria) {
+        List errors = new ArrayList();
 
-	public void validateDocumentSearchCriteria(DocSearchCriteriaVO criteria) {
-		List errors = new ArrayList();
-
-		// validate the network id's
-		if (!validateNetworkId(criteria.getApprover())) {
-			errors.add(new WorkflowServiceErrorImpl("Approver network id is invalid", "docsearch.DocumentSearchService.networkid.approver"));
-		} else {
-			if (criteria.getApprover() != null && !"".equals(criteria.getApprover().trim())) {
-				criteria.setApprover(criteria.getApprover().trim());
-			}
-		}
-		if (!validateNetworkId(criteria.getViewer())) {
-			errors.add(new WorkflowServiceErrorImpl("Viewer network id is invalid", "docsearch.DocumentSearchService.networkid.viewer"));
-		} else {
-			if (criteria.getViewer() != null && !"".equals(criteria.getViewer().trim())) {
-				criteria.setViewer(criteria.getViewer().trim());
-			}
-		}
-		if (!validateNetworkId(criteria.getInitiator())) {
-			errors.add(new WorkflowServiceErrorImpl("Initiator network id is invalid", "docsearch.DocumentSearchService.networkid.initiator"));
-		} else {
-			if (criteria.getInitiator() != null && !"".equals(criteria.getInitiator().trim())) {
-				criteria.setInitiator(criteria.getInitiator().trim());
-			}
-		}
+        // validate the network id's
+        if (!validateNetworkId(criteria.getApprover())) {
+            errors.add(new WorkflowServiceErrorImpl("Approver network id is invalid", "docsearch.DocumentSearchService.networkid.approver"));
+        } else {
+            if (criteria.getApprover() != null && !"".equals(criteria.getApprover().trim())) {
+                criteria.setApprover(criteria.getApprover().trim());
+            }
+        }
+        if (!validateNetworkId(criteria.getViewer())) {
+            errors.add(new WorkflowServiceErrorImpl("Viewer network id is invalid", "docsearch.DocumentSearchService.networkid.viewer"));
+        } else {
+            if (criteria.getViewer() != null && !"".equals(criteria.getViewer().trim())) {
+                criteria.setViewer(criteria.getViewer().trim());
+            }
+        }
+        if (!validateNetworkId(criteria.getInitiator())) {
+            errors.add(new WorkflowServiceErrorImpl("Initiator network id is invalid", "docsearch.DocumentSearchService.networkid.initiator"));
+        } else {
+            if (criteria.getInitiator() != null && !"".equals(criteria.getInitiator().trim())) {
+                criteria.setInitiator(criteria.getInitiator().trim());
+            }
+        }
         
         if (! validateWorkgroup(criteria.getWorkgroupViewerName())) {
             errors.add(new WorkflowServiceErrorImpl("Workgroup Viewer Name is not a workgroup", "docsearch.DocumentSearchService.workgroup.viewer"));
@@ -106,172 +316,137 @@
             }
         }
 
-		// validate any numbers
-		if (!validateNumber(criteria.getDocRouteNodeId())) {
-			errors.add(new WorkflowServiceErrorImpl("Non-numeric route level", "docsearch.DocumentSearchService.routeLevel"));
-		} else {
-			if (criteria.getDocRouteNodeId() != null && !"".equals(criteria.getDocRouteNodeId().trim())) {
-				criteria.setDocRouteNodeId(criteria.getDocRouteNodeId().trim());
-			}
-		}
-		if (!validateNumber(criteria.getDocVersion())) {
-			errors.add(new WorkflowServiceErrorImpl("Non-numeric document version", "docsearch.DocumentSearchService.docVersion"));
-		} else {
-			if (criteria.getDocVersion() != null && !"".equals(criteria.getDocVersion().trim())) {
-				criteria.setDocVersion(criteria.getDocVersion().trim());
-			}
-		}
-
-		if (!validateNumber(criteria.getRouteHeaderId())) {
-			errors.add(new WorkflowServiceErrorImpl("Non-numeric document id", "docsearch.DocumentSearchService.routeHeaderId"));
-		} else {
-			if (criteria.getRouteHeaderId() != null && !"".equals(criteria.getRouteHeaderId().trim())) {
-				criteria.setRouteHeaderId(criteria.getRouteHeaderId().trim());
-			}
-		}
+        // validate any numbers
+        if (!validateNumber(criteria.getDocRouteNodeId())) {
+            errors.add(new WorkflowServiceErrorImpl("Non-numeric route level", "docsearch.DocumentSearchService.routeLevel"));
+        } else {
+            if (criteria.getDocRouteNodeId() != null && !"".equals(criteria.getDocRouteNodeId().trim())) {
+                criteria.setDocRouteNodeId(criteria.getDocRouteNodeId().trim());
+            }
+        }
+        if (!validateNumber(criteria.getDocVersion())) {
+            errors.add(new WorkflowServiceErrorImpl("Non-numeric document version", "docsearch.DocumentSearchService.docVersion"));
+        } else {
+            if (criteria.getDocVersion() != null && !"".equals(criteria.getDocVersion().trim())) {
+                criteria.setDocVersion(criteria.getDocVersion().trim());
+            }
+        }
 
-		// validate any dates
-		boolean compareDatePairs = true;
-		if (!validateDate(criteria.getFromDateCreated())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getFromDateCreated() != null && !"".equals(criteria.getFromDateCreated().trim())) {
-				criteria.setFromDateCreated(criteria.getFromDateCreated().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (!validateDate(criteria.getToDateCreated())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getToDateCreated() != null && !"".equals(criteria.getToDateCreated().trim())) {
-				criteria.setToDateCreated(criteria.getToDateCreated().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (compareDatePairs) {
-			if (!checkDateRanges(criteria.getFromDateCreated(), criteria.getToDateCreated())) {
-				errors.add(new WorkflowServiceErrorImpl("Invalid create date range", "docsearch.DocumentSearchService.dateCreatedRange"));
-			}
-		}
-		compareDatePairs = true;
-		if (!validateDate(criteria.getFromDateApproved())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getFromDateApproved() != null && !"".equals(criteria.getFromDateApproved().trim())) {
-				criteria.setFromDateApproved(criteria.getFromDateApproved().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (!validateDate(criteria.getToDateApproved())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getToDateApproved() != null && !"".equals(criteria.getToDateApproved().trim())) {
-				criteria.setToDateApproved(criteria.getToDateApproved().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (compareDatePairs) {
-			if (!checkDateRanges(criteria.getFromDateApproved(), criteria.getToDateApproved())) {
-				errors.add(new WorkflowServiceErrorImpl("Invalid approved date range", "docsearch.DocumentSearchService.dateApprovedRange"));
-			}
-		}
-		compareDatePairs = true;
-		if (!validateDate(criteria.getFromDateFinalized())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getFromDateFinalized() != null && !"".equals(criteria.getFromDateFinalized().trim())) {
-				criteria.setFromDateFinalized(criteria.getFromDateFinalized().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (!validateDate(criteria.getToDateFinalized())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getToDateFinalized() != null && !"".equals(criteria.getToDateFinalized().trim())) {
-				criteria.setToDateFinalized(criteria.getToDateFinalized().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (compareDatePairs) {
-			if (!checkDateRanges(criteria.getFromDateFinalized(), criteria.getToDateFinalized())) {
-				errors.add(new WorkflowServiceErrorImpl("Invalid finalized date range", "docsearch.DocumentSearchService.dateFinalizedRange"));
-			}
-		}
-		compareDatePairs = true;
-		if (!validateDate(criteria.getFromDateLastModified())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getFromDateLastModified() != null && !"".equals(criteria.getFromDateLastModified().trim())) {
-				criteria.setFromDateLastModified(criteria.getFromDateLastModified().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (!validateDate(criteria.getToDateLastModified())) {
-			errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
-			compareDatePairs = false;
-		} else {
-			if (criteria.getToDateLastModified() != null && !"".equals(criteria.getToDateLastModified().trim())) {
-				criteria.setToDateLastModified(criteria.getToDateLastModified().trim());
-			} else {
-				compareDatePairs = false;
-			}
-		}
-		if (compareDatePairs) {
-			if (!checkDateRanges(criteria.getFromDateLastModified(), criteria.getToDateLastModified())) {
-				errors.add(new WorkflowServiceErrorImpl("Invalid last modified date range", "docsearch.DocumentSearchService.dateLastModifiedRange"));
-			}
-		}
-        
-        
-		List searchableAttributes = criteria.getSearchableAttributes();
-		if (searchableAttributes != null && !searchableAttributes.isEmpty()) {
-			Map paramMap = new HashMap();
-			for (Iterator iter = searchableAttributes.iterator(); iter.hasNext();) {
-				KeyLabelPair propertyField = (KeyLabelPair) iter.next();
-				paramMap.put(propertyField.getKey(), propertyField.getLabel());
-			}
-			DocumentType documentType = KEWServiceLocator.getDocumentTypeService().findByName(criteria.getDocTypeFullName());
+        if (!validateNumber(criteria.getRouteHeaderId())) {
+            errors.add(new WorkflowServiceErrorImpl("Non-numeric document id", "docsearch.DocumentSearchService.routeHeaderId"));
+        } else {
+            if (criteria.getRouteHeaderId() != null && !"".equals(criteria.getRouteHeaderId().trim())) {
+                criteria.setRouteHeaderId(criteria.getRouteHeaderId().trim());
+            }
+        }
 
-			for (Iterator iter = documentType.getDocumentTypeAttributes().iterator(); iter.hasNext();) {
-				DocumentTypeAttribute attribute = (DocumentTypeAttribute) iter.next();
-				RuleAttribute ruleAttribute = attribute.getRuleAttribute();
-				if (EdenConstants.SEARCHABLE_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType()) || EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())) {
-					try {
-						SearchableAttribute searchableAttribute = (SearchableAttribute) GlobalResourceLoader.getObject(new ObjectDefinition(ruleAttribute.getClassName(), ruleAttribute.getMessageEntity())); //SpringServiceLocator.getExtensionService().getSearchableAttribute(ruleAttribute.getClassName());
-						if(EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())){
-							((GenericXMLSearchableAttribute)searchableAttribute).setRuleAttribute(ruleAttribute);
-						}
-						List searchableErrors = searchableAttribute.validateUserSearchInputs(paramMap);
-						if(!Utilities.isEmpty(searchableAttributes)){
-							for (Iterator iterator = searchableErrors.iterator(); iterator.hasNext();) {
-								WorkflowAttributeValidationError error = (WorkflowAttributeValidationError) iterator.next();
-								errors.add(new WorkflowServiceErrorImpl(error.getKey(), "routetemplate.xmlattribute.error", error.getMessage()));
-							}
-						}
-					} catch (Exception e) {
-						LOG.error("error finding searchable attribute in when validating document search criteria.", e);
-					}
-				}
-			}
-		}
-		if (!errors.isEmpty()) {
-			throw new WorkflowServiceErrorException("Document Search Validation Errors", errors);
-		}
-	}
+        // validate any dates
+        boolean compareDatePairs = true;
+        if (!validateDate(criteria.getFromDateCreated())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getFromDateCreated() != null && !"".equals(criteria.getFromDateCreated().trim())) {
+                criteria.setFromDateCreated(criteria.getFromDateCreated().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (!validateDate(criteria.getToDateCreated())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid create date", "docsearch.DocumentSearchService.dateCreated"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getToDateCreated() != null && !"".equals(criteria.getToDateCreated().trim())) {
+                criteria.setToDateCreated(criteria.getToDateCreated().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (compareDatePairs) {
+            if (!checkDateRanges(criteria.getFromDateCreated(), criteria.getToDateCreated())) {
+                errors.add(new WorkflowServiceErrorImpl("Invalid create date range", "docsearch.DocumentSearchService.dateCreatedRange"));
+            }
+        }
+        compareDatePairs = true;
+        if (!validateDate(criteria.getFromDateApproved())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getFromDateApproved() != null && !"".equals(criteria.getFromDateApproved().trim())) {
+                criteria.setFromDateApproved(criteria.getFromDateApproved().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (!validateDate(criteria.getToDateApproved())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid approved date", "docsearch.DocumentSearchService.dateApproved"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getToDateApproved() != null && !"".equals(criteria.getToDateApproved().trim())) {
+                criteria.setToDateApproved(criteria.getToDateApproved().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (compareDatePairs) {
+            if (!checkDateRanges(criteria.getFromDateApproved(), criteria.getToDateApproved())) {
+                errors.add(new WorkflowServiceErrorImpl("Invalid approved date range", "docsearch.DocumentSearchService.dateApprovedRange"));
+            }
+        }
+        compareDatePairs = true;
+        if (!validateDate(criteria.getFromDateFinalized())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getFromDateFinalized() != null && !"".equals(criteria.getFromDateFinalized().trim())) {
+                criteria.setFromDateFinalized(criteria.getFromDateFinalized().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (!validateDate(criteria.getToDateFinalized())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid finalized date", "docsearch.DocumentSearchService.dateFinalized"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getToDateFinalized() != null && !"".equals(criteria.getToDateFinalized().trim())) {
+                criteria.setToDateFinalized(criteria.getToDateFinalized().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (compareDatePairs) {
+            if (!checkDateRanges(criteria.getFromDateFinalized(), criteria.getToDateFinalized())) {
+                errors.add(new WorkflowServiceErrorImpl("Invalid finalized date range", "docsearch.DocumentSearchService.dateFinalizedRange"));
+            }
+        }
+        compareDatePairs = true;
+        if (!validateDate(criteria.getFromDateLastModified())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getFromDateLastModified() != null && !"".equals(criteria.getFromDateLastModified().trim())) {
+                criteria.setFromDateLastModified(criteria.getFromDateLastModified().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (!validateDate(criteria.getToDateLastModified())) {
+            errors.add(new WorkflowServiceErrorImpl("Invalid last modified date", "docsearch.DocumentSearchService.dateLastModified"));
+            compareDatePairs = false;
+        } else {
+            if (criteria.getToDateLastModified() != null && !"".equals(criteria.getToDateLastModified().trim())) {
+                criteria.setToDateLastModified(criteria.getToDateLastModified().trim());
+            } else {
+                compareDatePairs = false;
+            }
+        }
+        if (compareDatePairs) {
+            if (!checkDateRanges(criteria.getFromDateLastModified(), criteria.getToDateLastModified())) {
+                errors.add(new WorkflowServiceErrorImpl("Invalid last modified date range", "docsearch.DocumentSearchService.dateLastModifiedRange"));
+            }
+        }
+        return errors;
+    }
 
 	private boolean validateNetworkId(String networkId) {
 		if ((networkId == null) || networkId.trim().equals("")) {
@@ -316,13 +491,16 @@
     }
 
 	public List getList(WorkflowUser user, DocSearchCriteriaVO criteria) throws EdenUserNotFoundException {
-		validateDocumentSearchCriteria(criteria);
-		try {
-			saveSearch(user, criteria);
-		} catch (RuntimeException e) {
-			// swallerin it, cuz we look to be read only
-		}
-		return docSearchDao.getList(criteria);
+        DocumentType documentType = KEWServiceLocator.getDocumentTypeService().findByName(criteria.getDocTypeFullName());
+        DocumentSearchExecutor docSearchExecutor = documentType.getDocumentSearchExecutor();
+//        docSearchExecutor.validateGlobalCriteria();  TODO implement later
+        validateDocumentSearchCriteria(docSearchExecutor,criteria);
+        try {
+            saveSearch(user, criteria);
+        } catch (RuntimeException e) {
+            // swallerin it, cuz we look to be read only
+        }
+        return docSearchDao.getList(docSearchExecutor,criteria);
 	}
 
 	public List getNamedSearches(WorkflowUser user) {
Index: test/src/edu/iu/uis/eden/doctype/DocumentTypeAttributeFetchTest.java
===================================================================
RCS file: /opt/cvs/workflow/test/src/edu/iu/uis/eden/doctype/DocumentTypeAttributeFetchTest.java,v
retrieving revision 1.5
diff -u -r1.5 DocumentTypeAttributeFetchTest.java
--- test/src/edu/iu/uis/eden/doctype/DocumentTypeAttributeFetchTest.java	4 Jan 2007 19:21:01 -0000	1.5
+++ test/src/edu/iu/uis/eden/doctype/DocumentTypeAttributeFetchTest.java	28 Mar 2007 15:31:06 -0000
@@ -235,10 +235,10 @@
 		for (SearchableAttributeValue value : searchAttVals) {
 			if (value.getSearchableAttributeKey().equals("client1Key")) {
 				att1Present = true;
-				assertEquals("Value for search att1 is wrong", "client1Value", value.getSearchableAttributeValue());
+				assertEquals("Value for search att1 is wrong", "client1Value", value.getSearchableAttributeStringValue());
 			} else if (value.getSearchableAttributeKey().equals("client2Key")) {
 				att2Present = true;
-				assertEquals("Value for search att2 is wrong", "client2Value", value.getSearchableAttributeValue());
+				assertEquals("Value for search att2 is wrong", "client2Value", value.getSearchableAttributeStringValue());
 			}
 		}
 		
Index: src/edu/iu/uis/eden/doctype/DocumentType.java
===================================================================
RCS file: /opt/cvs/workflow/src/edu/iu/uis/eden/doctype/DocumentType.java,v
retrieving revision 1.123.4.1.4.2
diff -u -r1.123.4.1.4.2 DocumentType.java
--- src/edu/iu/uis/eden/doctype/DocumentType.java	22 Mar 2007 20:13:41 -0000	1.123.4.1.4.2
+++ src/edu/iu/uis/eden/doctype/DocumentType.java	28 Mar 2007 15:31:05 -0000
@@ -34,6 +34,8 @@
 import edu.iu.uis.eden.core.Core;
 import edu.iu.uis.eden.core.GlobalResourceLoader;
 import edu.iu.uis.eden.definition.ObjectDefinition;
+import edu.iu.uis.eden.docsearch.DefaultDocumentSearchExecutor;
+import edu.iu.uis.eden.docsearch.DocumentSearchExecutor;
 import edu.iu.uis.eden.docsearch.SearchableAttribute;
 import edu.iu.uis.eden.docsearch.xml.GenericXMLSearchableAttribute;
 import edu.iu.uis.eden.engine.node.Process;
@@ -82,6 +84,7 @@
     private Long workgroupId;
     private Long blanketApproveWorkgroupId;
     private String messageEntity;
+    private String documentSearchExecutorName;
     private Integer lockVerNbr;
 
     /* these two fields are for the web tier lookupable
@@ -118,7 +121,6 @@
         return getPolicyByName(EdenConstants.DEFAULT_APPROVE_POLICY, Boolean.TRUE);
     }
 
-
     public DocumentTypePolicy getInitiatorMustRoutePolicy() {
         return getPolicyByName(EdenConstants.INITIATOR_MUST_ROUTE_POLICY, Boolean.TRUE);
     }
@@ -288,6 +290,30 @@
         this.routeLevels = routeLevels;
     }
 
+    public String getDocumentSearchExecutorName() {
+        if (Utilities.isEmpty(this.documentSearchExecutorName)) {
+            return getParentDocumentSearchExecutorName(getParentDocType());
+        }
+        return documentSearchExecutorName;
+    }
+
+    private String getParentDocumentSearchExecutorName(DocumentType parent) {
+        if ( parent == null) {
+            return null;
+        } else {
+            if (Utilities.isEmpty(parent.getDocumentSearchExecutorName())) {
+                return getParentDocumentSearchExecutorName(parent.getParentDocType());
+            } else {
+                return parent.getDocumentSearchExecutorName();
+            }
+        }
+    }
+
+    public void setDocumentSearchExecutorName(String documentSearchExecutorName) {
+        this.documentSearchExecutorName = documentSearchExecutorName;
+    }
+
+
     public String getActionsUrl() {
         return actionsUrl;
     }
@@ -543,10 +569,10 @@
             return new DefaultPostProcessor();
         }
 
-    	ObjectDefinition objDef = getPostProcessorObjectDefinition();
+    	ObjectDefinition objDef = getObjectDefinition(pname);
     	Object postProcessor = GlobalResourceLoader.getObject(objDef);
         if (postProcessor == null) {
-        	throw new WorkflowRuntimeException("Could not locate PostProcessor in this JVM or at message entity " + getMessageEntity() + ": " + getPostProcessorName());
+        	throw new WorkflowRuntimeException("Could not locate PostProcessor in this JVM or at message entity " + getMessageEntity() + ": " + pname);
         }
     	if (postProcessor instanceof PostProcessorRemote) {
             postProcessor = new PostProcessorRemoteAdapter((PostProcessorRemote)postProcessor);
@@ -555,8 +581,22 @@
     	return (PostProcessor)postProcessor;
     }
 
-    public ObjectDefinition getPostProcessorObjectDefinition() {
-    	return new ObjectDefinition(getPostProcessorName(), getMessageEntity());
+    public DocumentSearchExecutor getDocumentSearchExecutor() {
+        String executorName = getDocumentSearchExecutorName();
+        if (StringUtils.isBlank(executorName)) {
+            return new DefaultDocumentSearchExecutor();
+        }
+
+        ObjectDefinition objDef = getObjectDefinition(executorName);
+        Object searchExecutor = GlobalResourceLoader.getObject(objDef);
+        if (searchExecutor == null) {
+            throw new WorkflowRuntimeException("Could not locate DocumentSearchExecutor in this JVM or at message entity " + getMessageEntity() + ": " + executorName);
+        }
+        return (DocumentSearchExecutor)searchExecutor;
+    }
+
+    public ObjectDefinition getObjectDefinition(String objectName) {
+    	return new ObjectDefinition(objectName, getMessageEntity());
     }
 
     /**
Index: embedded-src/edu/iu/uis/eden/clientapp/webservices/WebServiceLocator.java
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/edu/iu/uis/eden/clientapp/webservices/WebServiceLocator.java,v
retrieving revision 1.7.4.1
diff -u -r1.7.4.1 WebServiceLocator.java
--- embedded-src/edu/iu/uis/eden/clientapp/webservices/WebServiceLocator.java	18 Feb 2007 05:40:12 -0000	1.7.4.1
+++ embedded-src/edu/iu/uis/eden/clientapp/webservices/WebServiceLocator.java	28 Mar 2007 15:31:05 -0000
@@ -48,6 +48,7 @@
 import edu.iu.uis.eden.clientapp.vo.StateVO;
 import edu.iu.uis.eden.clientapp.vo.UserVO;
 import edu.iu.uis.eden.clientapp.vo.UuIdVO;
+import edu.iu.uis.eden.clientapp.vo.ValidActionsVO;
 import edu.iu.uis.eden.clientapp.vo.WorkflowAttributeDefinitionVO;
 import edu.iu.uis.eden.clientapp.vo.WorkflowAttributeValidationErrorVO;
 import edu.iu.uis.eden.clientapp.vo.WorkflowGroupIdVO;
@@ -127,6 +128,7 @@
         vos.add(new Object[] { "http://vo.clientapp.eden.uis.iu.edu", "RuleReportCriteriaVO", RuleReportCriteriaVO.class });
         vos.add(new Object[] { "http://vo.clientapp.eden.uis.iu.edu", "RuleResponsibilityVO", RuleResponsibilityVO.class});
         vos.add(new Object[] { "http://vo.clientapp.eden.uis.iu.edu", "RuleVO", RuleVO.class});
+        vos.add(new Object[] { "http://vo.clientapp.eden.uis.iu.edu", "ValidActionsVO", ValidActionsVO.class});
 }
 
     protected void initializeService() {
Index: embedded-src/repository_user.xml
===================================================================
RCS file: /opt/cvs/workflow/embedded-src/repository_user.xml,v
retrieving revision 1.16.4.1.4.1
diff -u -r1.16.4.1.4.1 repository_user.xml
--- embedded-src/repository_user.xml	2 Mar 2007 22:25:41 -0000	1.16.4.1.4.1
+++ embedded-src/repository_user.xml	28 Mar 2007 15:31:05 -0000
@@ -1,734 +1,799 @@
-<class-descriptor class="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" table="EN_DOC_HDR_T" >
-    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"
-      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
-    <field-descriptor name="documentTypeId" column="DOC_TYP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="docRouteStatus" column="DOC_RTE_STAT_CD" jdbc-type="VARCHAR" />
-    <field-descriptor name="docRouteLevel" column="DOC_RTE_LVL_NBR" jdbc-type="INTEGER" />
-    <field-descriptor name="statusModDate" column="DOC_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="createDate" column="DOC_CRTE_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="approvedDate" column="DOC_APRV_DT"  jdbc-type="TIMESTAMP" />
-    <field-descriptor name="finalizedDate" column="DOC_FNL_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="routeStatusDate"  column="DOC_RTE_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="routeLevelDate" column="DOC_RTE_LVL_MDFN_DT"  jdbc-type="TIMESTAMP" />
+<class-descriptor class="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" table="EN_DOC_HDR_T" >
+    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"
+      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
+    <field-descriptor name="documentTypeId" column="DOC_TYP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="docRouteStatus" column="DOC_RTE_STAT_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="docRouteLevel" column="DOC_RTE_LVL_NBR" jdbc-type="INTEGER" />
+    <field-descriptor name="statusModDate" column="DOC_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="createDate" column="DOC_CRTE_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="approvedDate" column="DOC_APRV_DT"  jdbc-type="TIMESTAMP" />
+    <field-descriptor name="finalizedDate" column="DOC_FNL_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="routeStatusDate"  column="DOC_RTE_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="routeLevelDate" column="DOC_RTE_LVL_MDFN_DT"  jdbc-type="TIMESTAMP" />
     <field-descriptor name="docContent" column="DOC_CNTNT_TXT" jdbc-type="LONGVARCHAR"
-                      conversion="edu.iu.uis.eden.security.OjbEncryptDecryptFieldConversion"/>
-    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
-    <field-descriptor name="appDocId" column="DOC_APPL_DOC_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="docVersion"  column="DOC_VER_NBR"  jdbc-type="INTEGER" />
-    <field-descriptor name="initiatorWorkflowId" column="DOC_INITR_PRSN_EN_ID"  jdbc-type="VARCHAR" />
-    <field-descriptor name="lockCode" column="DOC_LOCK_CD" jdbc-type="CHAR" />
-    <field-descriptor name="jrfVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
-    <field-descriptor name="overrideInd" column="DOC_OVRD_IND" jdbc-type="VARCHAR" />
-    <!--
-    <reference-descriptor name="documentType" class-ref="edu.iu.uis.eden.doctype.DocumentType" auto-retrieve="true" auto-update="false" auto-delete="false">
-      <foreignkey field-ref="documentTypeId"   />
-    </reference-descriptor>
-    -->
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionitem.ActionItem" auto-retrieve="true" auto-update="false"
-      auto-delete="true" name="actionItems">
-      <inverse-foreignkey field-ref="routeHeaderId" />
-    </collection-descriptor>
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="false"
-      auto-delete="true" name="actionRequests">
-      <inverse-foreignkey field-ref="routeHeaderId" />
-    </collection-descriptor>
-    <collection-descriptor orderby="actionDate" sort="ASC" element-class-ref="edu.iu.uis.eden.actiontaken.ActionTakenValue" auto-retrieve="true" auto-update="false"
-      auto-delete="true" name="actionsTaken">
-      <inverse-foreignkey field-ref="routeHeaderId" />
-    </collection-descriptor>
-    <collection-descriptor auto-retrieve="true" auto-update="false" auto-delete="true"
-        element-class-ref="edu.iu.uis.eden.notes.Note"
-        name="notes"
-        orderby="noteId"
-        sort="ASC"
-        proxy="true">
-        <inverse-foreignkey field-ref="routeHeaderId" />
-    </collection-descriptor>
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeValue" auto-retrieve="true" auto-update="true"
-      auto-delete="true" name="searchableAttributeValues">
-      <inverse-foreignkey field-ref="routeHeaderId" />
-    </collection-descriptor>
-    <collection-descriptor name="initialRouteNodeInstances"
-     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
-     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
-     	auto-retrieve="true"
+                      conversion="edu.iu.uis.eden.security.OjbEncryptDecryptFieldConversion"/>
+    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
+    <field-descriptor name="appDocId" column="DOC_APPL_DOC_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="docVersion"  column="DOC_VER_NBR"  jdbc-type="INTEGER" />
+    <field-descriptor name="initiatorWorkflowId" column="DOC_INITR_PRSN_EN_ID"  jdbc-type="VARCHAR" />
+    <field-descriptor name="lockCode" column="DOC_LOCK_CD" jdbc-type="CHAR" />
+    <field-descriptor name="jrfVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
+    <field-descriptor name="overrideInd" column="DOC_OVRD_IND" jdbc-type="VARCHAR" />
+    <!--
+    <reference-descriptor name="documentType" class-ref="edu.iu.uis.eden.doctype.DocumentType" auto-retrieve="true" auto-update="false" auto-delete="false">
+      <foreignkey field-ref="documentTypeId"   />
+    </reference-descriptor>
+    -->
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionitem.ActionItem" auto-retrieve="true" auto-update="false"
+      auto-delete="true" name="actionItems">
+      <inverse-foreignkey field-ref="routeHeaderId" />
+    </collection-descriptor>
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="false"
+      auto-delete="true" name="actionRequests">
+      <inverse-foreignkey field-ref="routeHeaderId" />
+    </collection-descriptor>
+    <collection-descriptor orderby="actionDate" sort="ASC" element-class-ref="edu.iu.uis.eden.actiontaken.ActionTakenValue" auto-retrieve="true" auto-update="false"
+      auto-delete="true" name="actionsTaken">
+      <inverse-foreignkey field-ref="routeHeaderId" />
+    </collection-descriptor>
+    <collection-descriptor auto-retrieve="true" auto-update="false" auto-delete="true"
+        element-class-ref="edu.iu.uis.eden.notes.Note"
+        name="notes"
+        orderby="noteId"
+        sort="ASC"
+        proxy="true">
+        <inverse-foreignkey field-ref="routeHeaderId" />
+    </collection-descriptor>
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeValue" auto-retrieve="true" auto-update="true"
+      auto-delete="true" name="searchableAttributeValues">
+      <inverse-foreignkey field-ref="routeHeaderId" />
+    </collection-descriptor>
+    <collection-descriptor name="initialRouteNodeInstances"
+     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
+     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
+     	auto-retrieve="true"
      	auto-update="false"
-        auto-delete="true"
-     	proxy="false"
-     	indirection-table="EN_INIT_RTE_NODE_INSTN_T">
-      <fk-pointing-to-this-class column="DOC_HDR_ID"/>
-      <fk-pointing-to-element-class column="RTE_NODE_INSTN_ID"/>
-    </collection-descriptor>
-
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.notes.Note" table="EN_DOC_NTE_T">
-    <field-descriptor column="DOC_NTE_ID" name="noteId" jdbc-type="BIGINT" primarykey="true"
-         autoincrement="true" sequence-name="SEQ_DOC_NTE" />
-    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DOC_NTE_AUTH_PRSN_EN_ID" name="noteAuthorWorkflowId" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_NTE_CRT_DT" name="noteCreateDate"  jdbc-type="TIMESTAMP" />
-    <field-descriptor column="DOC_NTE_TXT" name="noteText" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr"  jdbc-type="INTEGER" locking="true"/>
-	<collection-descriptor element-class-ref="edu.iu.uis.eden.notes.Attachment" name="attachments" auto-retrieve="true" auto-delete="true" auto-update="true">
-		<inverse-foreignkey field-ref="noteId"></inverse-foreignkey>
-	</collection-descriptor>
-  </class-descriptor>
-
-  <!--  attachment -->
-
-  <class-descriptor class="edu.iu.uis.eden.notes.Attachment" table="EN_ATTACHMENT_T">
-  	<field-descriptor column="ATTACHMENT_ID" name="attachmentId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_DOC_NTE" />
-  	<field-descriptor column="NTE_ID" name="noteId" jdbc-type="BIGINT" />
-  	<field-descriptor column="FILE_NM" name="fileName" jdbc-type="VARCHAR" />
-  	<field-descriptor column="FILE_LOC" name="fileLoc" jdbc-type="VARCHAR" />
-  	<field-descriptor column="MIME_TYP" name="mimeType" jdbc-type="VARCHAR" />
-  	<field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-    <reference-descriptor name="note" class-ref="edu.iu.uis.eden.notes.Note" auto-retrieve="true" auto-delete="false" auto-update="false">
-    	<foreignkey field-ref="noteId"></foreignkey>
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValueActionListExtension" table="EN_DOC_HDR_T" >
-    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"
-      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
-    <field-descriptor name="documentTypeId" column="DOC_TYP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="docRouteStatus" column="DOC_RTE_STAT_CD" jdbc-type="VARCHAR" />
-    <field-descriptor name="docRouteLevel" column="DOC_RTE_LVL_NBR" jdbc-type="INTEGER" />
-    <field-descriptor name="statusModDate" column="DOC_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="createDate" column="DOC_CRTE_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="approvedDate" column="DOC_APRV_DT"  jdbc-type="TIMESTAMP" />
-    <field-descriptor name="finalizedDate" column="DOC_FNL_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="routeStatusDate"  column="DOC_RTE_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="routeLevelDate" column="DOC_RTE_LVL_MDFN_DT"  jdbc-type="TIMESTAMP" />
-<!--     <field-descriptor name="docContent" column="DOC_CNTNT_TXT" jdbc-type="LONGVARCHAR" />-->
-    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
-    <field-descriptor name="appDocId" column="DOC_APPL_DOC_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="docVersion"  column="DOC_VER_NBR"  jdbc-type="INTEGER" />
-    <field-descriptor name="initiatorWorkflowId" column="DOC_INITR_PRSN_EN_ID"  jdbc-type="VARCHAR" />
-    <field-descriptor name="lockCode" column="DOC_LOCK_CD" jdbc-type="CHAR" />
-    <field-descriptor name="jrfVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
-    <field-descriptor name="overrideInd" column="DOC_OVRD_IND" jdbc-type="VARCHAR" />
-    <!--
-    <reference-descriptor name="documentType" class-ref="edu.iu.uis.eden.doctype.DocumentTypeActionListExtension" auto-retrieve="true" auto-update="false" auto-delete="false">
-      <foreignkey field-ref="documentTypeId"   />
-    </reference-descriptor>
-    -->
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.actionitem.ActionItem" table="EN_ACTN_ITM_T">
-    <field-descriptor column="ACTN_ITM_ID" name="actionItemId" jdbc-type="BIGINT" primarykey="true"
-      autoincrement="true" sequence-name="SEQ_ACTN_ITM" />
-    <field-descriptor name="workflowId" column="ACTN_ITM_PRSN_EN_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="dateAssigned" column="ACTN_ITM_ASND_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="actionRequestCd" column="ACTN_ITM_RQST_CD" jdbc-type="CHAR" />
-    <field-descriptor name="actionRequestId" column="ACTN_RQST_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"  />
-    <field-descriptor name="responsibilityId" column="ACTN_ITM_RESP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="roleName" column="ROLE_NM" jdbc-type="VARCHAR" />
-    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
-    <field-descriptor name="docLabel" column="DOC_TYP_LBL_TXT" jdbc-type="VARCHAR" />
-    <field-descriptor name="docHandlerURL" column="DOC_TYP_HDLR_URL_ADDR" jdbc-type="VARCHAR" />
-    <field-descriptor name="docName" column="DOC_TYP_NM" jdbc-type="VARCHAR" />
-    <field-descriptor name="delegatorWorkflowId" column="ACTN_ITM_DLGN_PRSN_EN_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="delegatorWorkgroupId" column="ACTN_ITM_DLGN_WRKGRP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="delegationType" column="DLGN_TYP" jdbc-type="VARCHAR" />
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader">
-      <foreignkey field-ref="routeHeaderId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.actionitem.ActionItemActionListExtension" table="EN_ACTN_ITM_T">
-    <field-descriptor column="ACTN_ITM_ID" name="actionItemId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_ACTN_ITM" />
-    <field-descriptor name="workflowId" column="ACTN_ITM_PRSN_EN_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="dateAssigned" column="ACTN_ITM_ASND_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="actionRequestCd" column="ACTN_ITM_RQST_CD" jdbc-type="CHAR" />
-    <field-descriptor name="actionRequestId" column="ACTN_RQST_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"  />
-    <field-descriptor name="responsibilityId" column="ACTN_ITM_RESP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="roleName" column="ROLE_NM" jdbc-type="VARCHAR" />
-    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
-    <field-descriptor name="docLabel" column="DOC_TYP_LBL_TXT" jdbc-type="VARCHAR" />
-    <field-descriptor name="docHandlerURL" column="DOC_TYP_HDLR_URL_ADDR" jdbc-type="VARCHAR" />
-    <field-descriptor name="docName" column="DOC_TYP_NM" jdbc-type="VARCHAR" />
-    <field-descriptor name="delegatorWorkflowId" column="ACTN_ITM_DLGN_PRSN_EN_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="delegatorWorkgroupId" column="ACTN_ITM_DLGN_WRKGRP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="delegationType" column="DLGN_TYP" jdbc-type="VARCHAR" />
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValueActionListExtension" name="routeHeader">
-      <foreignkey field-ref="routeHeaderId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.actiontaken.ActionTakenValue" table="EN_ACTN_TKN_T">
-    <field-descriptor name="actionTakenId" column="ACTN_TKN_ID" jdbc-type="BIGINT" primarykey="true"
-      autoincrement="true" sequence-name="SEQ_ACTION_TAKEN"/>
-    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"/>
-    <field-descriptor name="actionTaken" column="ACTN_TKN_CD" jdbc-type="CHAR"/>
-    <field-descriptor name="actionDate" column="ACTN_TKN_DT" jdbc-type="TIMESTAMP"/>
-    <field-descriptor name="annotation" column="ACTN_TKN_ANNOTN_TXT" jdbc-type="VARCHAR"/>
-    <field-descriptor name="docVersion" column="DOC_VER_NBR" jdbc-type="INTEGER"/>
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    <field-descriptor name="workflowId" column="ACTN_TKN_PRSN_EN_ID" jdbc-type="VARCHAR"/>
-    <field-descriptor name="delegatorWorkflowId" column="ACTN_TKN_DLGTR_PRSN_EN_ID"  jdbc-type="VARCHAR"/>
-    <field-descriptor name="delegatorWorkgroupId" column="ACTN_TKN_DLGTR_WRKGRP_ID" jdbc-type="BIGINT" />
-    <field-descriptor name="currentIndicator" column="ACTN_TKN_CUR_IND" jdbc-type="BIT" />
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="false"
-      auto-delete="false" name="actionRequests">
-      <inverse-foreignkey field-ref="actionTakenId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.actionrequests.ActionRequestValue" table="EN_ACTN_RQST_T">
-    <field-descriptor column="ACTN_RQST_ID" name="actionRequestId" jdbc-type="BIGINT" primarykey="true"
-      autoincrement="true" sequence-name="SEQ_ACTION_REQUEST"/>
-    <field-descriptor column="ACTN_RQST_PARNT_ID" name="parentActionRequestId" jdbc-type="BIGINT" />
-    <field-descriptor column="ACTN_RQST_CD" name="actionRequested" jdbc-type="CHAR"/>
-    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_BASE_VALUES_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
-
-    <field-descriptor column="ACTN_RQST_STAT_CD" name="status" jdbc-type="CHAR"/>
-    <field-descriptor column="ACTN_RQST_RESP_ID" name="responsibilityId" jdbc-type="BIGINT"/>
-    <field-descriptor column="WRKGRP_ID" name="workgroupId" jdbc-type="BIGINT"/>
-    <field-descriptor column="ROLE_NM" name="roleName" jdbc-type="VARCHAR" />
-    <field-descriptor column="QUAL_ROLE_NM" name="qualifiedRoleName" jdbc-type="VARCHAR" />
-    <field-descriptor column="QUAL_ROLE_NM_LBL_TXT" name="qualifiedRoleNameLabel" jdbc-type="VARCHAR" />
-    <field-descriptor column="ACTN_RQST_RECP_TYP_CD" name="recipientTypeCd" jdbc-type="CHAR"/>
-    <field-descriptor column="ACTN_RQST_PRIO_NBR" name="priority" jdbc-type="INTEGER" />
-
-    <field-descriptor column="ACTN_RQST_RTE_LVL_NBR" name="routeLevel" jdbc-type="INTEGER" />
-    <field-descriptor column="ACTN_RQST_RTE_NODE_INSTN_ID" name="nodeInstanceId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="ACTN_TKN_ID" name="actionTakenId" jdbc-type="BIGINT" />
-    <field-descriptor column="DOC_VER_NBR" name="docVersion" jdbc-type="INTEGER"/>
-    <field-descriptor column="ACTN_RQST_CRTE_DT" name="createDate" jdbc-type="TIMESTAMP"/>
-    <field-descriptor column="ACTN_RQST_RESP_DESC" name="responsibilityDesc" jdbc-type="VARCHAR"/>
-    <field-descriptor column="ACTN_RQST_ANNOTN_TXT" name="annotation" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="jrfVerNbr" jdbc-type="INTEGER"/>
-    <field-descriptor column="ACTN_RQST_PRSN_EN_ID" name="workflowId" jdbc-type="VARCHAR" />
-    <field-descriptor column="ACTN_RQST_IGN_PREV_ACTN_IND" name="ignorePrevAction" jdbc-type="BIT" />
-    <field-descriptor column="ACTN_RQST_CUR_IND" name="currentIndicator" jdbc-type="BIT" />
-    <field-descriptor column="ACTN_RQST_APPR_PLCY" name="approvePolicy" jdbc-type="CHAR" />
-   	<field-descriptor column="DLGN_TYP" name="delegationType" jdbc-type="CHAR" />
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
-    	class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" name="parentActionRequest">
-    	<foreignkey field-ref="parentActionRequestId" />
-    </reference-descriptor>
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
-    	class-ref="edu.iu.uis.eden.actiontaken.ActionTakenValue" name="actionTaken">
-    	<foreignkey field-ref="actionTakenId" />
-    </reference-descriptor>
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
-      class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader">
-      <foreignkey field-ref="routeHeaderId" />
-    </reference-descriptor>
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
-    	class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="nodeInstance">
-    	<foreignkey field-ref="nodeInstanceId"/>
-    </reference-descriptor>
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionitem.ActionItem" auto-retrieve="true" auto-update="false"
-      auto-delete="false" name="actionItems" proxy="true">
-      <inverse-foreignkey field-ref="actionRequestId" />
-    </collection-descriptor>
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="true"
-      auto-delete="false" name="childrenRequests">
-      <inverse-foreignkey field-ref="parentActionRequestId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeValue" table="EN_DOC_HDR_EXT_T">
-    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
-      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
-    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
-    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="VARCHAR"/>
-
-    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="routeHeaderId" />
-    </reference-descriptor>
-
-  </class-descriptor>
-
-  <!-- new definition of docType -->
-
-  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentType" table="EN_DOC_TYP_T">
-    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" primarykey="true"
-         autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
-    <field-descriptor column="DOC_TYP_PARNT_ID" name="docTypeParentId" jdbc-type="BIGINT" />
-    <field-descriptor column="DOC_TYP_NM" name="name" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_TYP_VER_NBR" name="version" jdbc-type="INTEGER"/>
-    <field-descriptor column="DOC_TYP_ACTV_IND" name="activeInd" jdbc-type="BIT"/>
-    <field-descriptor column="DOC_TYP_CUR_IND" name="currentInd" jdbc-type="BIT"/>
-    <field-descriptor column="DOC_TYP_DESC" name="description" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_TYP_LBL_TXT" name="label" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_TYP_PREV_VER" name="previousVersionId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DOC_TYP_HDLR_URL_ADDR" name="docHandlerUrl" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_TYP_POST_PRCSR_NM" name="postProcessorName" jdbc-type="VARCHAR"/>
-    <field-descriptor column="WRKGRP_ID" name="workgroupId" jdbc-type="BIGINT"/>
-    <field-descriptor column="BLNKT_APPR_WRKGRP_ID" name="blanketApproveWorkgroupId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DOC_TYP_RTE_VER_NBR" name="routingVersion" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DOC_TYP_NOTIFY_ADDR" name="notificationFromAddress" jdbc-type="VARCHAR"/>
+        auto-delete="true"
+     	proxy="false"
+     	indirection-table="EN_INIT_RTE_NODE_INSTN_T">
+      <fk-pointing-to-this-class column="DOC_HDR_ID"/>
+      <fk-pointing-to-element-class column="RTE_NODE_INSTN_ID"/>
+    </collection-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.notes.Note" table="EN_DOC_NTE_T">
+    <field-descriptor column="DOC_NTE_ID" name="noteId" jdbc-type="BIGINT" primarykey="true"
+         autoincrement="true" sequence-name="SEQ_DOC_NTE" />
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_NTE_AUTH_PRSN_EN_ID" name="noteAuthorWorkflowId" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_NTE_CRT_DT" name="noteCreateDate"  jdbc-type="TIMESTAMP" />
+    <field-descriptor column="DOC_NTE_TXT" name="noteText" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr"  jdbc-type="INTEGER" locking="true"/>
+	<collection-descriptor element-class-ref="edu.iu.uis.eden.notes.Attachment" name="attachments" auto-retrieve="true" auto-delete="true" auto-update="true">
+		<inverse-foreignkey field-ref="noteId"></inverse-foreignkey>
+	</collection-descriptor>
+  </class-descriptor>
+
+  <!--  attachment -->
+
+  <class-descriptor class="edu.iu.uis.eden.notes.Attachment" table="EN_ATTACHMENT_T">
+  	<field-descriptor column="ATTACHMENT_ID" name="attachmentId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_DOC_NTE" />
+  	<field-descriptor column="NTE_ID" name="noteId" jdbc-type="BIGINT" />
+  	<field-descriptor column="FILE_NM" name="fileName" jdbc-type="VARCHAR" />
+  	<field-descriptor column="FILE_LOC" name="fileLoc" jdbc-type="VARCHAR" />
+  	<field-descriptor column="MIME_TYP" name="mimeType" jdbc-type="VARCHAR" />
+  	<field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+    <reference-descriptor name="note" class-ref="edu.iu.uis.eden.notes.Note" auto-retrieve="true" auto-delete="false" auto-update="false">
+    	<foreignkey field-ref="noteId"></foreignkey>
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValueActionListExtension" table="EN_DOC_HDR_T" >
+    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"
+      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
+    <field-descriptor name="documentTypeId" column="DOC_TYP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="docRouteStatus" column="DOC_RTE_STAT_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="docRouteLevel" column="DOC_RTE_LVL_NBR" jdbc-type="INTEGER" />
+    <field-descriptor name="statusModDate" column="DOC_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="createDate" column="DOC_CRTE_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="approvedDate" column="DOC_APRV_DT"  jdbc-type="TIMESTAMP" />
+    <field-descriptor name="finalizedDate" column="DOC_FNL_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="routeStatusDate"  column="DOC_RTE_STAT_MDFN_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="routeLevelDate" column="DOC_RTE_LVL_MDFN_DT"  jdbc-type="TIMESTAMP" />
+<!--     <field-descriptor name="docContent" column="DOC_CNTNT_TXT" jdbc-type="LONGVARCHAR" />-->
+    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
+    <field-descriptor name="appDocId" column="DOC_APPL_DOC_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="docVersion"  column="DOC_VER_NBR"  jdbc-type="INTEGER" />
+    <field-descriptor name="initiatorWorkflowId" column="DOC_INITR_PRSN_EN_ID"  jdbc-type="VARCHAR" />
+    <field-descriptor name="lockCode" column="DOC_LOCK_CD" jdbc-type="CHAR" />
+    <field-descriptor name="jrfVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
+    <field-descriptor name="overrideInd" column="DOC_OVRD_IND" jdbc-type="VARCHAR" />
+    <!--
+    <reference-descriptor name="documentType" class-ref="edu.iu.uis.eden.doctype.DocumentTypeActionListExtension" auto-retrieve="true" auto-update="false" auto-delete="false">
+      <foreignkey field-ref="documentTypeId"   />
+    </reference-descriptor>
+    -->
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.actionitem.ActionItem" table="EN_ACTN_ITM_T">
+    <field-descriptor column="ACTN_ITM_ID" name="actionItemId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_ACTN_ITM" />
+    <field-descriptor name="workflowId" column="ACTN_ITM_PRSN_EN_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="dateAssigned" column="ACTN_ITM_ASND_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="actionRequestCd" column="ACTN_ITM_RQST_CD" jdbc-type="CHAR" />
+    <field-descriptor name="actionRequestId" column="ACTN_RQST_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"  />
+    <field-descriptor name="responsibilityId" column="ACTN_ITM_RESP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="roleName" column="ROLE_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
+    <field-descriptor name="docLabel" column="DOC_TYP_LBL_TXT" jdbc-type="VARCHAR" />
+    <field-descriptor name="docHandlerURL" column="DOC_TYP_HDLR_URL_ADDR" jdbc-type="VARCHAR" />
+    <field-descriptor name="docName" column="DOC_TYP_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="delegatorWorkflowId" column="ACTN_ITM_DLGN_PRSN_EN_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="delegatorWorkgroupId" column="ACTN_ITM_DLGN_WRKGRP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="delegationType" column="DLGN_TYP" jdbc-type="VARCHAR" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.actionitem.ActionItemActionListExtension" table="EN_ACTN_ITM_T">
+    <field-descriptor column="ACTN_ITM_ID" name="actionItemId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_ACTN_ITM" />
+    <field-descriptor name="workflowId" column="ACTN_ITM_PRSN_EN_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="dateAssigned" column="ACTN_ITM_ASND_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="actionRequestCd" column="ACTN_ITM_RQST_CD" jdbc-type="CHAR" />
+    <field-descriptor name="actionRequestId" column="ACTN_RQST_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"  />
+    <field-descriptor name="responsibilityId" column="ACTN_ITM_RESP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="roleName" column="ROLE_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="docTitle" column="DOC_TTL" jdbc-type="VARCHAR" />
+    <field-descriptor name="docLabel" column="DOC_TYP_LBL_TXT" jdbc-type="VARCHAR" />
+    <field-descriptor name="docHandlerURL" column="DOC_TYP_HDLR_URL_ADDR" jdbc-type="VARCHAR" />
+    <field-descriptor name="docName" column="DOC_TYP_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="delegatorWorkflowId" column="ACTN_ITM_DLGN_PRSN_EN_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="delegatorWorkgroupId" column="ACTN_ITM_DLGN_WRKGRP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="delegationType" column="DLGN_TYP" jdbc-type="VARCHAR" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValueActionListExtension" name="routeHeader">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.actiontaken.ActionTakenValue" table="EN_ACTN_TKN_T">
+    <field-descriptor name="actionTakenId" column="ACTN_TKN_ID" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_ACTION_TAKEN"/>
+    <field-descriptor name="routeHeaderId" column="DOC_HDR_ID" jdbc-type="BIGINT"/>
+    <field-descriptor name="actionTaken" column="ACTN_TKN_CD" jdbc-type="CHAR"/>
+    <field-descriptor name="actionDate" column="ACTN_TKN_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="annotation" column="ACTN_TKN_ANNOTN_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="docVersion" column="DOC_VER_NBR" jdbc-type="INTEGER"/>
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    <field-descriptor name="workflowId" column="ACTN_TKN_PRSN_EN_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="delegatorWorkflowId" column="ACTN_TKN_DLGTR_PRSN_EN_ID"  jdbc-type="VARCHAR"/>
+    <field-descriptor name="delegatorWorkgroupId" column="ACTN_TKN_DLGTR_WRKGRP_ID" jdbc-type="BIGINT" />
+    <field-descriptor name="currentIndicator" column="ACTN_TKN_CUR_IND" jdbc-type="BIT" />
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="false"
+      auto-delete="false" name="actionRequests">
+      <inverse-foreignkey field-ref="actionTakenId" />
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.actionrequests.ActionRequestValue" table="EN_ACTN_RQST_T">
+    <field-descriptor column="ACTN_RQST_ID" name="actionRequestId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_ACTION_REQUEST"/>
+    <field-descriptor column="ACTN_RQST_PARNT_ID" name="parentActionRequestId" jdbc-type="BIGINT" />
+    <field-descriptor column="ACTN_RQST_CD" name="actionRequested" jdbc-type="CHAR"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_BASE_VALUES_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
+
+    <field-descriptor column="ACTN_RQST_STAT_CD" name="status" jdbc-type="CHAR"/>
+    <field-descriptor column="ACTN_RQST_RESP_ID" name="responsibilityId" jdbc-type="BIGINT"/>
+    <field-descriptor column="WRKGRP_ID" name="workgroupId" jdbc-type="BIGINT"/>
+    <field-descriptor column="ROLE_NM" name="roleName" jdbc-type="VARCHAR" />
+    <field-descriptor column="QUAL_ROLE_NM" name="qualifiedRoleName" jdbc-type="VARCHAR" />
+    <field-descriptor column="QUAL_ROLE_NM_LBL_TXT" name="qualifiedRoleNameLabel" jdbc-type="VARCHAR" />
+    <field-descriptor column="ACTN_RQST_RECP_TYP_CD" name="recipientTypeCd" jdbc-type="CHAR"/>
+    <field-descriptor column="ACTN_RQST_PRIO_NBR" name="priority" jdbc-type="INTEGER" />
+
+    <field-descriptor column="ACTN_RQST_RTE_LVL_NBR" name="routeLevel" jdbc-type="INTEGER" />
+    <field-descriptor column="ACTN_RQST_RTE_NODE_INSTN_ID" name="nodeInstanceId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="ACTN_TKN_ID" name="actionTakenId" jdbc-type="BIGINT" />
+    <field-descriptor column="DOC_VER_NBR" name="docVersion" jdbc-type="INTEGER"/>
+    <field-descriptor column="ACTN_RQST_CRTE_DT" name="createDate" jdbc-type="TIMESTAMP"/>
+    <field-descriptor column="ACTN_RQST_RESP_DESC" name="responsibilityDesc" jdbc-type="VARCHAR"/>
+    <field-descriptor column="ACTN_RQST_ANNOTN_TXT" name="annotation" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="jrfVerNbr" jdbc-type="INTEGER"/>
+    <field-descriptor column="ACTN_RQST_PRSN_EN_ID" name="workflowId" jdbc-type="VARCHAR" />
+    <field-descriptor column="ACTN_RQST_IGN_PREV_ACTN_IND" name="ignorePrevAction" jdbc-type="BIT" />
+    <field-descriptor column="ACTN_RQST_CUR_IND" name="currentIndicator" jdbc-type="BIT" />
+    <field-descriptor column="ACTN_RQST_APPR_PLCY" name="approvePolicy" jdbc-type="CHAR" />
+   	<field-descriptor column="DLGN_TYP" name="delegationType" jdbc-type="CHAR" />
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
+    	class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" name="parentActionRequest">
+    	<foreignkey field-ref="parentActionRequestId" />
+    </reference-descriptor>
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
+    	class-ref="edu.iu.uis.eden.actiontaken.ActionTakenValue" name="actionTaken">
+    	<foreignkey field-ref="actionTakenId" />
+    </reference-descriptor>
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
+      class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false"
+    	class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="nodeInstance">
+    	<foreignkey field-ref="nodeInstanceId"/>
+    </reference-descriptor>
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionitem.ActionItem" auto-retrieve="true" auto-update="false"
+      auto-delete="false" name="actionItems" proxy="true">
+      <inverse-foreignkey field-ref="actionRequestId" />
+    </collection-descriptor>
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.actionrequests.ActionRequestValue" auto-retrieve="true" auto-update="true"
+      auto-delete="false" name="childrenRequests">
+      <inverse-foreignkey field-ref="parentActionRequestId" />
+    </collection-descriptor>
+  </class-descriptor>
+  
+<!-- 
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeValue" table="EN_DOC_HDR_EXT_T">
+    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="VARCHAR"/>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+
+  </class-descriptor>
+-->
+
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeValue">
+  	<extent-class class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeStringValue" />
+  	<extent-class class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeFloatValue" />
+  	<extent-class class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeLongValue" />
+  	<extent-class class-ref="edu.iu.uis.eden.docsearch.SearchableAttributeDateTimeValue" />
+  </class-descriptor>
+  
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeStringValue" table="EN_DOC_HDR_EXT_T">
+    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="VARCHAR"/>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeFloatValue" table="EN_DOC_HDR_EXT_FLT_T">
+    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="REAL"/>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeLongValue" table="EN_DOC_HDR_EXT_LONG_T">
+    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="BIGINT"/>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.docsearch.SearchableAttributeDateTimeValue" table="EN_DOC_HDR_EXT_DT_T">
+    <field-descriptor column="DOC_HDR_EXT_ID" name="searchableAttributeValueId" jdbc-type="BIGINT" primarykey="true"
+      autoincrement="true" sequence-name="SEQ_SEARCHABLE_ATTRIBUTE_VALUE"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_EXT_VAL_KEY" name="searchableAttributeKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_EXT_VAL" name="searchableAttributeValue" jdbc-type="TIMESTAMP"/>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue" name="routeHeader"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="routeHeaderId" />
+    </reference-descriptor>
+
+  </class-descriptor>
+
+  <!-- new definition of docType -->
+
+  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentType" table="EN_DOC_TYP_T">
+    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" primarykey="true"
+         autoincrement="true" sequence-name="SEQ_DOCUMENT_ROUTE_HEADER" />
+    <field-descriptor column="DOC_TYP_PARNT_ID" name="docTypeParentId" jdbc-type="BIGINT" />
+    <field-descriptor column="DOC_TYP_NM" name="name" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_TYP_VER_NBR" name="version" jdbc-type="INTEGER"/>
+    <field-descriptor column="DOC_TYP_ACTV_IND" name="activeInd" jdbc-type="BIT"/>
+    <field-descriptor column="DOC_TYP_CUR_IND" name="currentInd" jdbc-type="BIT"/>
+    <field-descriptor column="DOC_TYP_DESC" name="description" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_TYP_LBL_TXT" name="label" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_TYP_PREV_VER" name="previousVersionId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_TYP_HDLR_URL_ADDR" name="docHandlerUrl" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_TYP_POST_PRCSR_NM" name="postProcessorName" jdbc-type="VARCHAR"/>
+    <field-descriptor column="WRKGRP_ID" name="workgroupId" jdbc-type="BIGINT"/>
+    <field-descriptor column="BLNKT_APPR_WRKGRP_ID" name="blanketApproveWorkgroupId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DOC_TYP_RTE_VER_NBR" name="routingVersion" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DOC_TYP_NOTIFY_ADDR" name="notificationFromAddress" jdbc-type="VARCHAR"/>
     <field-descriptor column="MESSAGE_ENTITY_NM" name="messageEntity" jdbc-type="VARCHAR"/>
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    <collection-descriptor auto-retrieve="true" auto-update="true" auto-delete="true"
-      element-class-ref="edu.iu.uis.eden.doctype.DocumentTypePolicy"
-      name="policies"
-      proxy="false">
-      <inverse-foreignkey field-ref="documentTypeId"  />
-    </collection-descriptor>
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.doctype.DocumentTypeAttribute" name="documentTypeAttributes"
-	    auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
-      <inverse-foreignkey field-ref="documentTypeId" />
-    </collection-descriptor>
-    <collection-descriptor name="processes"	element-class-ref="edu.iu.uis.eden.engine.node.Process"
-     	auto-retrieve="true" auto-update="true"	proxy="false">
-      <inverse-foreignkey field-ref="documentTypeId"/>
-    </collection-descriptor>
-  </class-descriptor>
-
-
-  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentTypePolicy" table="EN_DOC_TYP_PLCY_RELN_T">
-    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" primarykey="true"/>
-    <field-descriptor column="DOC_PLCY_NM" name="policyName" jdbc-type="VARCHAR" primarykey="true"/>
-    <field-descriptor column="DOC_PLCY_VAL" name="policyValue" jdbc-type="BIT"/>
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType">
-      <foreignkey field-ref="documentTypeId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentTypeAttribute" table="EN_DOC_TYP_ATTRIB_T">
-    <field-descriptor column="DOC_TYP_ATTRIB_ID" name="documentTypeAttributeId" jdbc-type="BIGINT"
-      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_TYPE_ATTRIBUTE"/>
-    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT"/>
-    <!--
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-    -->
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute">
-      <foreignkey field-ref="ruleAttributeId" />
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="documentTypeId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.messaging.PersistedMessage" table="EN_MESSAGE_QUE_T" >
-    <field-descriptor name="routeQueueId" column="MESSAGE_QUE_ID" jdbc-type="BIGINT"
-      primarykey="true" autoincrement="true" sequence-name="SEQ_ROUTE_QUEUE" />
-    <field-descriptor name="queuePriority" column="MESSAGE_QUE_PRIO_NBR" jdbc-type="INTEGER" />
-    <field-descriptor name="queueStatus" column="MESSAGE_QUE_STAT_CD" jdbc-type="CHAR" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    <collection-descriptor auto-retrieve="true" auto-update="true" auto-delete="true"
+      element-class-ref="edu.iu.uis.eden.doctype.DocumentTypePolicy"
+      name="policies"
+      proxy="false">
+      <inverse-foreignkey field-ref="documentTypeId"  />
+    </collection-descriptor>
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.doctype.DocumentTypeAttribute" name="documentTypeAttributes"
+	    auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
+      <inverse-foreignkey field-ref="documentTypeId" />
+    </collection-descriptor>
+    <collection-descriptor name="processes"	element-class-ref="edu.iu.uis.eden.engine.node.Process"
+     	auto-retrieve="true" auto-update="true"	proxy="false">
+      <inverse-foreignkey field-ref="documentTypeId"/>
+    </collection-descriptor>
+  </class-descriptor>
+
+
+  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentTypePolicy" table="EN_DOC_TYP_PLCY_RELN_T">
+    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" primarykey="true"/>
+    <field-descriptor column="DOC_PLCY_NM" name="policyName" jdbc-type="VARCHAR" primarykey="true"/>
+    <field-descriptor column="DOC_PLCY_VAL" name="policyValue" jdbc-type="BIT"/>
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType">
+      <foreignkey field-ref="documentTypeId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.doctype.DocumentTypeAttribute" table="EN_DOC_TYP_ATTRIB_T">
+    <field-descriptor column="DOC_TYP_ATTRIB_ID" name="documentTypeAttributeId" jdbc-type="BIGINT"
+      primarykey="true" autoincrement="true" sequence-name="SEQ_DOCUMENT_TYPE_ATTRIBUTE"/>
+    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT"/>
+    <!--
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+    -->
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute">
+      <foreignkey field-ref="ruleAttributeId" />
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="documentTypeId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.messaging.PersistedMessage" table="EN_MESSAGE_QUE_T" >
+    <field-descriptor name="routeQueueId" column="MESSAGE_QUE_ID" jdbc-type="BIGINT"
+      primarykey="true" autoincrement="true" sequence-name="SEQ_ROUTE_QUEUE" />
+    <field-descriptor name="queuePriority" column="MESSAGE_QUE_PRIO_NBR" jdbc-type="INTEGER" />
+    <field-descriptor name="queueStatus" column="MESSAGE_QUE_STAT_CD" jdbc-type="CHAR" />
     <field-descriptor name="queueDate" column="MESSAGE_QUE_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="expirationDate" column="MESSAGE_EXP_DT" jdbc-type="TIMESTAMP" />
-    <field-descriptor name="retryCount" column="MESSAGE_QUE_RTRY_CNT" jdbc-type="INTEGER" />
-    <field-descriptor name="ipNumber" column="MESSAGE_QUE_IP_NBR" jdbc-type="VARCHAR" />
+    <field-descriptor name="expirationDate" column="MESSAGE_EXP_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="retryCount" column="MESSAGE_QUE_RTRY_CNT" jdbc-type="INTEGER" />
+    <field-descriptor name="ipNumber" column="MESSAGE_QUE_IP_NBR" jdbc-type="VARCHAR" />
     <field-descriptor name="payload" column="MESSAGE_PAYLOAD" jdbc-type="LONGVARCHAR" />
     <field-descriptor name="serviceName" column="MESSAGE_SERVICE_NM" jdbc-type="VARCHAR"/>
     <field-descriptor name="messageEntity" column="MESSAGE_ENTITY_NM" jdbc-type="VARCHAR"/>
     <field-descriptor name="methodName" column="SERVICE_METHOD_NM" jdbc-type="VARCHAR"/>
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.useroptions.UserOptions" table="EN_USR_OPTN_T">
-    <field-descriptor name="optionId" column="PRSN_OPTN_ID" jdbc-type="VARCHAR" primarykey="true" />
-    <field-descriptor name="optionVal" column="PRSN_OPTN_VAL" jdbc-type="VARCHAR" />
-    <field-descriptor name="workflowId" column="PRSN_EN_ID" jdbc-type="VARCHAR" primarykey="true" />
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.applicationconstants.ApplicationConstant" table="EN_APPL_CNST_T">
-    <field-descriptor name="applicationConstantName" column="APPL_CNST_NM" jdbc-type="VARCHAR" primarykey="true" />
-    <field-descriptor name="applicationConstantValue" column="APPL_CNST_VAL_TXT" jdbc-type="VARCHAR" />
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <!-- generic routing -->
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplate" table="EN_RULE_TMPL_T">
-    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" primarykey="true" jdbc-type="BIGINT"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_TMPL_NM" name="name" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_TMPL_DESC" name="description" jdbc-type="VARCHAR" />
-    <field-descriptor column="DLGN_RULE_TMPL_ID" name="delegationTemplateId" jdbc-type="BIGINT"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor name="delegationTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
-    	auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="delegationTemplateId"/>
-    </reference-descriptor>
-    <collection-descriptor name="ruleTemplateAttributes" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute"
-        auto-delete="true" auto-retrieve="true" auto-update="true">
-      <inverse-foreignkey field-ref="ruleTemplateId" />
-    </collection-descriptor>
-    <collection-descriptor name="ruleTemplateOptions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateOption"
-        auto-delete="true" auto-retrieve="true" auto-update="true">
-      <inverse-foreignkey field-ref="ruleTemplateId" />
-    </collection-descriptor>
-
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplateOption" table="EN_RULE_TMPL_OPTN_T">
-    <field-descriptor column="RULE_TMPL_OPTN_ID" name="ruleTemplateOptionId" primarykey="true" jdbc-type="BIGINT"
-        autoincrement="true" sequence-name="SEQ_RULE_TMPL_OPTN" />
-
-    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_TMPL_OPTN_KEY" name="key" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_TMPL_OPTN_VAL" name="value" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-
-    <reference-descriptor name="ruleTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
-    	auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleTemplateId"/>
-    </reference-descriptor>
-  </class-descriptor>
-
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleAttribute" table="EN_RULE_ATTRIB_T">
-    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" primarykey="true" jdbc-type="BIGINT"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_ATTRIB_NM" name="name" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_ATTRIB_LBL_TXT" name="label" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_ATTRIB_TYP" name="type" jdbc-type="VARCHAR" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.useroptions.UserOptions" table="EN_USR_OPTN_T">
+    <field-descriptor name="optionId" column="PRSN_OPTN_ID" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="optionVal" column="PRSN_OPTN_VAL" jdbc-type="VARCHAR" />
+    <field-descriptor name="workflowId" column="PRSN_EN_ID" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.applicationconstants.ApplicationConstant" table="EN_APPL_CNST_T">
+    <field-descriptor name="applicationConstantName" column="APPL_CNST_NM" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="applicationConstantValue" column="APPL_CNST_VAL_TXT" jdbc-type="VARCHAR" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <!-- generic routing -->
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplate" table="EN_RULE_TMPL_T">
+    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" primarykey="true" jdbc-type="BIGINT"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_TMPL_NM" name="name" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_TMPL_DESC" name="description" jdbc-type="VARCHAR" />
+    <field-descriptor column="DLGN_RULE_TMPL_ID" name="delegationTemplateId" jdbc-type="BIGINT"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor name="delegationTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
+    	auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="delegationTemplateId"/>
+    </reference-descriptor>
+    <collection-descriptor name="ruleTemplateAttributes" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute"
+        auto-delete="true" auto-retrieve="true" auto-update="true">
+      <inverse-foreignkey field-ref="ruleTemplateId" />
+    </collection-descriptor>
+    <collection-descriptor name="ruleTemplateOptions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateOption"
+        auto-delete="true" auto-retrieve="true" auto-update="true">
+      <inverse-foreignkey field-ref="ruleTemplateId" />
+    </collection-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplateOption" table="EN_RULE_TMPL_OPTN_T">
+    <field-descriptor column="RULE_TMPL_OPTN_ID" name="ruleTemplateOptionId" primarykey="true" jdbc-type="BIGINT"
+        autoincrement="true" sequence-name="SEQ_RULE_TMPL_OPTN" />
+
+    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_TMPL_OPTN_KEY" name="key" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_TMPL_OPTN_VAL" name="value" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+
+    <reference-descriptor name="ruleTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
+    	auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleTemplateId"/>
+    </reference-descriptor>
+  </class-descriptor>
+
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleAttribute" table="EN_RULE_ATTRIB_T">
+    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" primarykey="true" jdbc-type="BIGINT"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_ATTRIB_NM" name="name" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_ATTRIB_LBL_TXT" name="label" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_ATTRIB_TYP" name="type" jdbc-type="VARCHAR" />
     <field-descriptor column="RULE_ATTRIB_CLS_NM" name="className" jdbc-type="VARCHAR" />
-    <field-descriptor column="MESSAGE_ENTITY_NM" name="messageEntity" jdbc-type="VARCHAR"/>
-    <field-descriptor column="RULE_ATTRIB_DESC" name="description" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_ATTRIB_XML_RTE_TXT" name="xmlConfigData" jdbc-type="LONGVARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-    <collection-descriptor name="ruleTemplateAttributes" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute"
-        auto-delete="true" auto-retrieve="true" auto-update="true">
-      <inverse-foreignkey field-ref="ruleAttributeId" />
-    </collection-descriptor>
-    <!-- <collection-descriptor name="validValues" element-class-ref="edu.iu.uis.eden.routetemplate.RuleAttributeValidValue"
-        auto-delete="true" auto-retrieve="true" auto-update="true">
-      <inverse-foreignkey field-ref="ruleAttributeId" />
-    </collection-descriptor> -->
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute" table="EN_RULE_TMPL_ATTRIB_T">
-    <field-descriptor column="RULE_TMPL_ATTRIB_ID" name="ruleTemplateAttributeId" jdbc-type="BIGINT" primarykey="true"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT" />
-    <field-descriptor column="REQ_IND" name="required" jdbc-type="BIT" />
-    <field-descriptor column="DSPL_ORD" name="displayOrder" jdbc-type="INTEGER" />
-    <field-descriptor column="DFLT_VAL" name="defaultValue" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" locking="true" />
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleAttributeId" />
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate" name="ruleTemplate"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleTemplateId" />
-    </reference-descriptor>
-    <collection-descriptor name="ruleExtensions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtension"
-        auto-delete="false" auto-retrieve="false" auto-update="false" proxy="true">
-      <inverse-foreignkey field-ref="ruleTemplateAttributeId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-  <!-- <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleAttributeValidValue" table="EN_RULE_ATTRIB_VLD_VAL_T">
-    <field-descriptor column="RULE_ATTRIB_VLD_VAL_ID" name="ruleAttributeValidValueId" primarykey="true" jdbc-type="BIGINT"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_ATTRIB_VLD_VAL_NM" name="name" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_ATTRIB_VLD_VAL_LBL_TXT" name="label" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_ATTRIB_VLD_VAL_CUR_IND" name="currentInd" jdbc-type="BIT" />
-    <field-descriptor column="RULE_ATTRIB_VLD_VAL_VER_NBR" name="versionNbr" jdbc-type="INTEGER" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" locking="true" jdbc-type="INTEGER" />
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleAttributeId" />
-    </reference-descriptor>
-  </class-descriptor> -->
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleBaseValues" table="EN_RULE_BASE_VAL_T">
-    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" primarykey="true"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_BASE_VAL_VER_NBR" name="versionNbr" jdbc-type="INTEGER"/>
-    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_BASE_VAL_ACTV_IND" name="activeInd" jdbc-type="BIT" />
-    <field-descriptor column="RULE_BASE_VAL_DESC" name="description" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_BASE_VAL_IGNR_PRVS" name="ignorePrevious" jdbc-type="BIT" />
-    <field-descriptor column="DOC_TYP_NM" name="docTypeName" jdbc-type="VARCHAR" />
-    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_BASE_VAL_FRM_DT" name="fromDate" jdbc-type="TIMESTAMP" />
-    <field-descriptor column="RULE_BASE_VAL_TO_DT" name="toDate" jdbc-type="TIMESTAMP" nullable="false"/>
-    <field-descriptor column="RULE_BASE_VAL_DACTVN_DT" name="deactivationDate" jdbc-type="TIMESTAMP" />
-    <field-descriptor column="RULE_BASE_VAL_CUR_IND" name="currentInd" jdbc-type="BIT" />
-    <field-descriptor column="TMPL_RULE_IND" name="templateRuleInd" jdbc-type="BIT" />
-    <field-descriptor column="RULE_BASE_VAL_PREV_VER" name="previousVersionId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_BASE_VAL_DLGN_IND" name="delegateRule" jdbc-type="BIT" />
-    <field-descriptor column="RULE_BASE_VAL_ACTVN_DT" name="activationDate" jdbc-type="TIMESTAMP" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-    <reference-descriptor name="ruleTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
-        auto-delete="false" auto-retrieve="true" auto-update="false">
-        <foreignkey field-ref="ruleTemplateId" />
-    </reference-descriptor>
-    <!--<reference-descriptor name="previousVersion" class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues"
-      auto-delete="false" auto-retrieve="false" auto-update="true">
-        <foreignkey field-ref="previousVersionId" />
-    </reference-descriptor>-->
-    <collection-descriptor name="responsibilities" element-class-ref="edu.iu.uis.eden.routetemplate.RuleResponsibility"
-        auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
-      <inverse-foreignkey field-ref="ruleBaseValuesId" />
-    </collection-descriptor>
-    <collection-descriptor name="ruleExtensions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtension"
-        auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
-      <inverse-foreignkey field-ref="ruleBaseValuesId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleDelegation" table="EN_DLGN_RSP_T">
-  	<field-descriptor column="DLGN_RULE_ID" name="ruleDelegationId" jdbc-type="BIGINT" primarykey="true" sequence-name="SEQ_ROUTE_TEMPLATE" autoincrement="true"/>
-  	<field-descriptor column="RULE_RSP_ID" name="ruleResponsibilityId" jdbc-type="BIGINT"/>
-  	<field-descriptor column="DLGN_RULE_BASE_VAL_ID" name="delegateRuleId" jdbc-type="BIGINT" />
-  	<field-descriptor column="DLGN_TYP" name="delegationType" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="delegationRuleBaseValues" auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="delegateRuleId" />
-    </reference-descriptor>
-
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleResponsibility" name="ruleResponsibility"
-    	auto-delete="false" auto-retrieve="true" auto-update="false">
-    	<foreignkey field-ref="ruleResponsibilityId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleResponsibility" table="EN_RULE_RSP_T">
-    <field-descriptor column="RULE_RSP_ID" name="ruleResponsibilityKey" jdbc-type="BIGINT" primarykey="true" sequence-name="SEQ_RESPONSIBILITY_ID" autoincrement="true"/>
-    <field-descriptor column="RSP_ID" name="responsibilityId" jdbc-type="BIGINT"/>
-    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_RSP_PRIO_NBR" name="priority" jdbc-type="INTEGER" />
-    <field-descriptor column="ACTION_RQST_CD" name="actionRequestedCd" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_RSP_NM" name="ruleResponsibilityName" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_RSP_TYP" name="ruleResponsibilityType" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_RSP_APPR_PLCY" name="approvePolicy" jdbc-type="CHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-
-	  <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="ruleBaseValues" auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleBaseValuesId" />
-    </reference-descriptor>
-
-    <collection-descriptor element-class-ref="edu.iu.uis.eden.routetemplate.RuleDelegation" name="delegationRules" auto-delete="false" auto-retrieve="true" auto-update="true" proxy="true">
-    	<inverse-foreignkey field-ref="ruleResponsibilityId" />
-    </collection-descriptor>
-
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleExtension" table="EN_RULE_EXT_T">
-    <field-descriptor column="RULE_EXT_ID" name="ruleExtensionId" jdbc-type="BIGINT" primarykey="true"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_TMPL_ATTRIB_ID" name="ruleTemplateAttributeId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="ruleBaseValues"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleBaseValuesId" />
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute" name="ruleTemplateAttribute"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleTemplateAttributeId" />
-    </reference-descriptor>
-    <collection-descriptor name="extensionValues" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtensionValue"
-        auto-delete="true" auto-retrieve="true" auto-update="true">
-      <inverse-foreignkey field-ref="ruleExtensionId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleExtensionValue" table="EN_RULE_EXT_VAL_T">
-    <field-descriptor column="RULE_EXT_VAL_ID" name="ruleExtensionValueId" jdbc-type="BIGINT" primarykey="true"
-        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
-    <field-descriptor column="RULE_EXT_ID" name="ruleExtensionId" jdbc-type="BIGINT" />
-    <field-descriptor column="RULE_EXT_VAL" name="value" jdbc-type="VARCHAR" />
-    <field-descriptor column="RULE_EXT_VAL_KEY" name="key" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleExtension" name="extension"
-      auto-delete="false" auto-retrieve="true" auto-update="false">
-      <foreignkey field-ref="ruleExtensionId" />
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.help.HelpEntry" table="EN_HLP_T">
-    <field-descriptor column="EN_HLP_ID" name="helpId" jdbc-type="BIGINT" primarykey="true"
-        autoincrement="true" sequence-name="SEQ_HELP_ENTRY" />
-    <field-descriptor column="EN_HLP_NM" name="helpName" jdbc-type="VARCHAR" />
-    <field-descriptor column="EN_HLP_KY" name="helpKey" jdbc-type="VARCHAR" />
-    <field-descriptor column="EN_HLP_TXT" name="helpText" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
-  </class-descriptor>
-
-  <!--  New Parallel Routing Mappings for 2.1 -->
-  <class-descriptor class="edu.iu.uis.eden.engine.node.RouteNode" table="EN_RTE_NODE_T">
-    <field-descriptor column="RTE_NODE_ID" name="routeNodeId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" />
-    <field-descriptor column="RTE_NODE_NM" name="routeNodeName" jdbc-type="VARCHAR" />
-    <field-descriptor column="RTE_NODE_TYP" name="nodeType" jdbc-type="VARCHAR" />
-    <field-descriptor column="DOC_RTE_MTHD_NM" name="routeMethodName" jdbc-type="VARCHAR" />
-    <field-descriptor column="DOC_FNL_APRVR_IND" name="finalApprovalInd" jdbc-type="BIT" />
-    <field-descriptor column="DOC_MNDTRY_RTE_IND" name="mandatoryRouteInd" jdbc-type="BIT" />
-    <field-descriptor column="WRKGRP_ID" name="exceptionWorkgroupId" jdbc-type="BIGINT" />
-    <field-descriptor column="DOC_RTE_MTHD_CD" name="routeMethodCode" jdbc-type="VARCHAR" />
-    <field-descriptor column="DOC_ACTVN_TYP_TXT" name="activationType" jdbc-type="VARCHAR" />
-    <field-descriptor column="BRCH_PROTO_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
-
-    <field-descriptor column="CONTENT_FRAGMENT" name="contentFragment" jdbc-type="VARCHAR"/>
-
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType">
-      <foreignkey field-ref="documentTypeId" />
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.BranchPrototype" name="branch" auto-update="true">
-      <foreignkey field-ref="branchId" />
-    </reference-descriptor>
-    <collection-descriptor name="previousNodes"
-     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
-     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNode"
-     	auto-retrieve="true"
-     	auto-update="true"
-     	proxy="true"
-     	indirection-table="EN_RTE_NODE_LNK_T">
-      <fk-pointing-to-this-class column="TO_RTE_NODE_ID"/>
-      <fk-pointing-to-element-class column="FROM_RTE_NODE_ID"/>
-    </collection-descriptor>
-    <collection-descriptor name="nextNodes"
-     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
-     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNode"
-     	auto-retrieve="true"
-     	auto-update="true"
-     	proxy="true"
-     	indirection-table="EN_RTE_NODE_LNK_T">
-      <fk-pointing-to-this-class column="FROM_RTE_NODE_ID"/>
-      <fk-pointing-to-element-class column="TO_RTE_NODE_ID"/>
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.BranchPrototype" table="EN_RTE_BRCH_PROTO_T">
-    <field-descriptor column="RTE_BRCH_PROTO_ID" name="branchId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-    <field-descriptor column="RTE_BRCH_PROTO_NM" name="name" jdbc-type="VARCHAR" />
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.RouteNodeInstance" table="EN_RTE_NODE_INSTN_T">
-    <field-descriptor column="RTE_NODE_INSTN_ID" name="routeNodeInstanceId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-    <field-descriptor column="DOC_ID" name="documentId" jdbc-type="BIGINT"/>
-    <field-descriptor column="RTE_NODE_ID" name="routeNodeId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="BRCH_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="PROC_RTE_NODE_INSTN_ID" name="processId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="ACTV_IND" name="active" jdbc-type="BIT"/>
-    <field-descriptor column="CMPLT_IND" name="complete" jdbc-type="BIT"/>
-    <field-descriptor column="INIT_IND" name="initial" jdbc-type="BIT"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNode" name="routeNode" auto-update="false">
-      <foreignkey field-ref="routeNodeId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="branch" auto-update="true">
-      <foreignkey field-ref="branchId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="process" auto-update="true">
-      <foreignkey field-ref="processId"/>
-    </reference-descriptor>
-    <collection-descriptor name="state"
-    	element-class-ref="edu.iu.uis.eden.engine.node.NodeState"
-    	auto-retrieve="true"
-    	auto-update="true"
-    	auto-delete="true"
-    	proxy="false">
-    	<inverse-foreignkey field-ref="nodeInstanceId" />
-    </collection-descriptor>
-    <collection-descriptor name="previousNodeInstances"
-     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
-     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
-     	auto-retrieve="true"
-     	auto-update="false"
-     	proxy="false"
-     	indirection-table="EN_RTE_NODE_INSTN_LNK_T">
-      <fk-pointing-to-this-class column="TO_RTE_NODE_INSTN_ID"/>
-      <fk-pointing-to-element-class column="FROM_RTE_NODE_INSTN_ID"/>
-    </collection-descriptor>
-    <collection-descriptor name="nextNodeInstances"
-     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
-     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
-     	auto-retrieve="true"
-     	auto-update="true"
-     	auto-delete="true"
-     	proxy="false"
-     	indirection-table="EN_RTE_NODE_INSTN_LNK_T">
-      <fk-pointing-to-this-class column="FROM_RTE_NODE_INSTN_ID"/>
-      <fk-pointing-to-element-class column="TO_RTE_NODE_INSTN_ID"/>
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.Branch" table="EN_RTE_BRCH_T">
-    <field-descriptor column="RTE_BRCH_ID" name="branchId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-    <field-descriptor column="BRCH_NM" name="name" jdbc-type="VARCHAR"/>
-    <field-descriptor column="PARNT_RTE_BRCH_ID" name="parentBranchId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="INIT_RTE_NODE_INSTN_ID" name="initialNodeId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="JOIN_RTE_NODE_INSTN_ID" name="joinNodeId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="SPLT_RTE_NODE_INSTN_ID" name="splitNodeId" jdbc-type="BIGINT" access="anonymous"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="parentBranch" >
-      <foreignkey field-ref="parentBranchId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="initialNode" >
-      <foreignkey field-ref="initialNodeId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="joinNode" >
-      <foreignkey field-ref="joinNodeId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="splitNode" >
-      <foreignkey field-ref="splitNodeId"/>
-    </reference-descriptor>
-    <collection-descriptor name="branchState"
-    	element-class-ref="edu.iu.uis.eden.engine.node.BranchState"
-    	auto-retrieve="true"
-    	auto-update="true"
-    	proxy="false">
-    	<inverse-foreignkey field-ref="branchId" />
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.BranchState" table="EN_RTE_BRCH_ST_T">
-    <field-descriptor column="RTE_BRCH_ST_ID" name="stateId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-  	<field-descriptor column="RTE_BRCH_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
-  	<field-descriptor column="ST_KEY" name="key" jdbc-type="VARCHAR"/>
-  	<field-descriptor column="ST_VAL_TXT" name="value" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="branch" >
-      <foreignkey field-ref="branchId"/>
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.NodeState" table="EN_RTE_NODE_INSTN_ST_T">
-    <field-descriptor column="RTE_NODE_INSTN_ST_ID" name="stateId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-  	<field-descriptor column="RTE_NODE_INSTN_ID" name="nodeInstanceId" jdbc-type="BIGINT" access="anonymous"/>
-  	<field-descriptor column="ST_KEY" name="key" jdbc-type="VARCHAR"/>
-  	<field-descriptor column="ST_VAL_TXT" name="value" jdbc-type="VARCHAR"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="nodeInstance" >
-      <foreignkey field-ref="nodeInstanceId"/>
-    </reference-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.engine.node.Process" table="EN_DOC_TYP_PROC_T">
-    <field-descriptor column="DOC_TYP_PROC_ID" name="processId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
-  	<field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" access="anonymous"/>
-  	<field-descriptor column="INIT_RTE_NODE_ID" name="initialRouteNodeId" jdbc-type="BIGINT" access="anonymous"/>
-  	<field-descriptor column="PROC_NM" name="name" jdbc-type="VARCHAR"/>
-  	<field-descriptor column="INIT_IND" name="initial" jdbc-type="BIT"/>
-    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType" >
-      <foreignkey field-ref="documentTypeId"/>
-    </reference-descriptor>
-    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNode" name="initialRouteNode" auto-update="true">
-      <foreignkey field-ref="initialRouteNodeId"/>
-    </reference-descriptor>
+    <field-descriptor column="MESSAGE_ENTITY_NM" name="messageEntity" jdbc-type="VARCHAR"/>
+    <field-descriptor column="RULE_ATTRIB_DESC" name="description" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_ATTRIB_XML_RTE_TXT" name="xmlConfigData" jdbc-type="LONGVARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+    <collection-descriptor name="ruleTemplateAttributes" element-class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute"
+        auto-delete="true" auto-retrieve="true" auto-update="true">
+      <inverse-foreignkey field-ref="ruleAttributeId" />
+    </collection-descriptor>
+    <!-- <collection-descriptor name="validValues" element-class-ref="edu.iu.uis.eden.routetemplate.RuleAttributeValidValue"
+        auto-delete="true" auto-retrieve="true" auto-update="true">
+      <inverse-foreignkey field-ref="ruleAttributeId" />
+    </collection-descriptor> -->
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute" table="EN_RULE_TMPL_ATTRIB_T">
+    <field-descriptor column="RULE_TMPL_ATTRIB_ID" name="ruleTemplateAttributeId" jdbc-type="BIGINT" primarykey="true"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT" />
+    <field-descriptor column="REQ_IND" name="required" jdbc-type="BIT" />
+    <field-descriptor column="DSPL_ORD" name="displayOrder" jdbc-type="INTEGER" />
+    <field-descriptor column="DFLT_VAL" name="defaultValue" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" locking="true" />
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleAttributeId" />
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate" name="ruleTemplate"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleTemplateId" />
+    </reference-descriptor>
+    <collection-descriptor name="ruleExtensions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtension"
+        auto-delete="false" auto-retrieve="false" auto-update="false" proxy="true">
+      <inverse-foreignkey field-ref="ruleTemplateAttributeId" />
+    </collection-descriptor>
+  </class-descriptor>
+
+  <!-- <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleAttributeValidValue" table="EN_RULE_ATTRIB_VLD_VAL_T">
+    <field-descriptor column="RULE_ATTRIB_VLD_VAL_ID" name="ruleAttributeValidValueId" primarykey="true" jdbc-type="BIGINT"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_ATTRIB_VLD_VAL_NM" name="name" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_ATTRIB_VLD_VAL_LBL_TXT" name="label" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_ATTRIB_ID" name="ruleAttributeId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_ATTRIB_VLD_VAL_CUR_IND" name="currentInd" jdbc-type="BIT" />
+    <field-descriptor column="RULE_ATTRIB_VLD_VAL_VER_NBR" name="versionNbr" jdbc-type="INTEGER" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" locking="true" jdbc-type="INTEGER" />
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleAttribute" name="ruleAttribute"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleAttributeId" />
+    </reference-descriptor>
+  </class-descriptor> -->
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleBaseValues" table="EN_RULE_BASE_VAL_T">
+    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" primarykey="true"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_BASE_VAL_VER_NBR" name="versionNbr" jdbc-type="INTEGER"/>
+    <field-descriptor column="RULE_TMPL_ID" name="ruleTemplateId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_BASE_VAL_ACTV_IND" name="activeInd" jdbc-type="BIT" />
+    <field-descriptor column="RULE_BASE_VAL_DESC" name="description" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_BASE_VAL_IGNR_PRVS" name="ignorePrevious" jdbc-type="BIT" />
+    <field-descriptor column="DOC_TYP_NM" name="docTypeName" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_HDR_ID" name="routeHeaderId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_BASE_VAL_FRM_DT" name="fromDate" jdbc-type="TIMESTAMP" />
+    <field-descriptor column="RULE_BASE_VAL_TO_DT" name="toDate" jdbc-type="TIMESTAMP" nullable="false"/>
+    <field-descriptor column="RULE_BASE_VAL_DACTVN_DT" name="deactivationDate" jdbc-type="TIMESTAMP" />
+    <field-descriptor column="RULE_BASE_VAL_CUR_IND" name="currentInd" jdbc-type="BIT" />
+    <field-descriptor column="TMPL_RULE_IND" name="templateRuleInd" jdbc-type="BIT" />
+    <field-descriptor column="RULE_BASE_VAL_PREV_VER" name="previousVersionId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_BASE_VAL_DLGN_IND" name="delegateRule" jdbc-type="BIT" />
+    <field-descriptor column="RULE_BASE_VAL_ACTVN_DT" name="activationDate" jdbc-type="TIMESTAMP" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+    <reference-descriptor name="ruleTemplate" class-ref="edu.iu.uis.eden.routetemplate.RuleTemplate"
+        auto-delete="false" auto-retrieve="true" auto-update="false">
+        <foreignkey field-ref="ruleTemplateId" />
+    </reference-descriptor>
+    <!--<reference-descriptor name="previousVersion" class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues"
+      auto-delete="false" auto-retrieve="false" auto-update="true">
+        <foreignkey field-ref="previousVersionId" />
+    </reference-descriptor>-->
+    <collection-descriptor name="responsibilities" element-class-ref="edu.iu.uis.eden.routetemplate.RuleResponsibility"
+        auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
+      <inverse-foreignkey field-ref="ruleBaseValuesId" />
+    </collection-descriptor>
+    <collection-descriptor name="ruleExtensions" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtension"
+        auto-delete="true" auto-retrieve="true" auto-update="true" proxy="false">
+      <inverse-foreignkey field-ref="ruleBaseValuesId" />
+    </collection-descriptor>
+  </class-descriptor>
+
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleDelegation" table="EN_DLGN_RSP_T">
+  	<field-descriptor column="DLGN_RULE_ID" name="ruleDelegationId" jdbc-type="BIGINT" primarykey="true" sequence-name="SEQ_ROUTE_TEMPLATE" autoincrement="true"/>
+  	<field-descriptor column="RULE_RSP_ID" name="ruleResponsibilityId" jdbc-type="BIGINT"/>
+  	<field-descriptor column="DLGN_RULE_BASE_VAL_ID" name="delegateRuleId" jdbc-type="BIGINT" />
+  	<field-descriptor column="DLGN_TYP" name="delegationType" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="delegationRuleBaseValues" auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="delegateRuleId" />
+    </reference-descriptor>
+
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleResponsibility" name="ruleResponsibility"
+    	auto-delete="false" auto-retrieve="true" auto-update="false">
+    	<foreignkey field-ref="ruleResponsibilityId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleResponsibility" table="EN_RULE_RSP_T">
+    <field-descriptor column="RULE_RSP_ID" name="ruleResponsibilityKey" jdbc-type="BIGINT" primarykey="true" sequence-name="SEQ_RESPONSIBILITY_ID" autoincrement="true"/>
+    <field-descriptor column="RSP_ID" name="responsibilityId" jdbc-type="BIGINT"/>
+    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_RSP_PRIO_NBR" name="priority" jdbc-type="INTEGER" />
+    <field-descriptor column="ACTION_RQST_CD" name="actionRequestedCd" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_RSP_NM" name="ruleResponsibilityName" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_RSP_TYP" name="ruleResponsibilityType" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_RSP_APPR_PLCY" name="approvePolicy" jdbc-type="CHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+
+	  <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="ruleBaseValues" auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleBaseValuesId" />
+    </reference-descriptor>
+
+    <collection-descriptor element-class-ref="edu.iu.uis.eden.routetemplate.RuleDelegation" name="delegationRules" auto-delete="false" auto-retrieve="true" auto-update="true" proxy="true">
+    	<inverse-foreignkey field-ref="ruleResponsibilityId" />
+    </collection-descriptor>
+
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleExtension" table="EN_RULE_EXT_T">
+    <field-descriptor column="RULE_EXT_ID" name="ruleExtensionId" jdbc-type="BIGINT" primarykey="true"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_TMPL_ATTRIB_ID" name="ruleTemplateAttributeId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_BASE_VAL_ID" name="ruleBaseValuesId" jdbc-type="BIGINT" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleBaseValues" name="ruleBaseValues"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleBaseValuesId" />
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleTemplateAttribute" name="ruleTemplateAttribute"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleTemplateAttributeId" />
+    </reference-descriptor>
+    <collection-descriptor name="extensionValues" element-class-ref="edu.iu.uis.eden.routetemplate.RuleExtensionValue"
+        auto-delete="true" auto-retrieve="true" auto-update="true">
+      <inverse-foreignkey field-ref="ruleExtensionId" />
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.routetemplate.RuleExtensionValue" table="EN_RULE_EXT_VAL_T">
+    <field-descriptor column="RULE_EXT_VAL_ID" name="ruleExtensionValueId" jdbc-type="BIGINT" primarykey="true"
+        autoincrement="true" sequence-name="SEQ_ROUTE_TEMPLATE" />
+    <field-descriptor column="RULE_EXT_ID" name="ruleExtensionId" jdbc-type="BIGINT" />
+    <field-descriptor column="RULE_EXT_VAL" name="value" jdbc-type="VARCHAR" />
+    <field-descriptor column="RULE_EXT_VAL_KEY" name="key" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+    <reference-descriptor class-ref="edu.iu.uis.eden.routetemplate.RuleExtension" name="extension"
+      auto-delete="false" auto-retrieve="true" auto-update="false">
+      <foreignkey field-ref="ruleExtensionId" />
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.help.HelpEntry" table="EN_HLP_T">
+    <field-descriptor column="EN_HLP_ID" name="helpId" jdbc-type="BIGINT" primarykey="true"
+        autoincrement="true" sequence-name="SEQ_HELP_ENTRY" />
+    <field-descriptor column="EN_HLP_NM" name="helpName" jdbc-type="VARCHAR" />
+    <field-descriptor column="EN_HLP_KY" name="helpKey" jdbc-type="VARCHAR" />
+    <field-descriptor column="EN_HLP_TXT" name="helpText" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true" />
+  </class-descriptor>
+
+  <!--  New Parallel Routing Mappings for 2.1 -->
+  <class-descriptor class="edu.iu.uis.eden.engine.node.RouteNode" table="EN_RTE_NODE_T">
+    <field-descriptor column="RTE_NODE_ID" name="routeNodeId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+    <field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" />
+    <field-descriptor column="RTE_NODE_NM" name="routeNodeName" jdbc-type="VARCHAR" />
+    <field-descriptor column="RTE_NODE_TYP" name="nodeType" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_RTE_MTHD_NM" name="routeMethodName" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_FNL_APRVR_IND" name="finalApprovalInd" jdbc-type="BIT" />
+    <field-descriptor column="DOC_MNDTRY_RTE_IND" name="mandatoryRouteInd" jdbc-type="BIT" />
+    <field-descriptor column="WRKGRP_ID" name="exceptionWorkgroupId" jdbc-type="BIGINT" />
+    <field-descriptor column="DOC_RTE_MTHD_CD" name="routeMethodCode" jdbc-type="VARCHAR" />
+    <field-descriptor column="DOC_ACTVN_TYP_TXT" name="activationType" jdbc-type="VARCHAR" />
+    <field-descriptor column="BRCH_PROTO_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
+
+    <field-descriptor column="CONTENT_FRAGMENT" name="contentFragment" jdbc-type="VARCHAR"/>
+
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType">
+      <foreignkey field-ref="documentTypeId" />
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.BranchPrototype" name="branch" auto-update="true">
+      <foreignkey field-ref="branchId" />
+    </reference-descriptor>
+    <collection-descriptor name="previousNodes"
+     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
+     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNode"
+     	auto-retrieve="true"
+     	auto-update="true"
+     	proxy="true"
+     	indirection-table="EN_RTE_NODE_LNK_T">
+      <fk-pointing-to-this-class column="TO_RTE_NODE_ID"/>
+      <fk-pointing-to-element-class column="FROM_RTE_NODE_ID"/>
+    </collection-descriptor>
+    <collection-descriptor name="nextNodes"
+     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
+     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNode"
+     	auto-retrieve="true"
+     	auto-update="true"
+     	proxy="true"
+     	indirection-table="EN_RTE_NODE_LNK_T">
+      <fk-pointing-to-this-class column="FROM_RTE_NODE_ID"/>
+      <fk-pointing-to-element-class column="TO_RTE_NODE_ID"/>
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.BranchPrototype" table="EN_RTE_BRCH_PROTO_T">
+    <field-descriptor column="RTE_BRCH_PROTO_ID" name="branchId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+    <field-descriptor column="RTE_BRCH_PROTO_NM" name="name" jdbc-type="VARCHAR" />
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.RouteNodeInstance" table="EN_RTE_NODE_INSTN_T">
+    <field-descriptor column="RTE_NODE_INSTN_ID" name="routeNodeInstanceId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+    <field-descriptor column="DOC_ID" name="documentId" jdbc-type="BIGINT"/>
+    <field-descriptor column="RTE_NODE_ID" name="routeNodeId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="BRCH_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="PROC_RTE_NODE_INSTN_ID" name="processId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="ACTV_IND" name="active" jdbc-type="BIT"/>
+    <field-descriptor column="CMPLT_IND" name="complete" jdbc-type="BIT"/>
+    <field-descriptor column="INIT_IND" name="initial" jdbc-type="BIT"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNode" name="routeNode" auto-update="false">
+      <foreignkey field-ref="routeNodeId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="branch" auto-update="true">
+      <foreignkey field-ref="branchId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="process" auto-update="true">
+      <foreignkey field-ref="processId"/>
+    </reference-descriptor>
+    <collection-descriptor name="state"
+    	element-class-ref="edu.iu.uis.eden.engine.node.NodeState"
+    	auto-retrieve="true"
+    	auto-update="true"
+    	auto-delete="true"
+    	proxy="false">
+    	<inverse-foreignkey field-ref="nodeInstanceId" />
+    </collection-descriptor>
+    <collection-descriptor name="previousNodeInstances"
+     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
+     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
+     	auto-retrieve="true"
+     	auto-update="false"
+     	proxy="false"
+     	indirection-table="EN_RTE_NODE_INSTN_LNK_T">
+      <fk-pointing-to-this-class column="TO_RTE_NODE_INSTN_ID"/>
+      <fk-pointing-to-element-class column="FROM_RTE_NODE_INSTN_ID"/>
+    </collection-descriptor>
+    <collection-descriptor name="nextNodeInstances"
+     	collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList"
+     	element-class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance"
+     	auto-retrieve="true"
+     	auto-update="true"
+     	auto-delete="true"
+     	proxy="false"
+     	indirection-table="EN_RTE_NODE_INSTN_LNK_T">
+      <fk-pointing-to-this-class column="FROM_RTE_NODE_INSTN_ID"/>
+      <fk-pointing-to-element-class column="TO_RTE_NODE_INSTN_ID"/>
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.Branch" table="EN_RTE_BRCH_T">
+    <field-descriptor column="RTE_BRCH_ID" name="branchId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+    <field-descriptor column="BRCH_NM" name="name" jdbc-type="VARCHAR"/>
+    <field-descriptor column="PARNT_RTE_BRCH_ID" name="parentBranchId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="INIT_RTE_NODE_INSTN_ID" name="initialNodeId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="JOIN_RTE_NODE_INSTN_ID" name="joinNodeId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="SPLT_RTE_NODE_INSTN_ID" name="splitNodeId" jdbc-type="BIGINT" access="anonymous"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="parentBranch" >
+      <foreignkey field-ref="parentBranchId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="initialNode" >
+      <foreignkey field-ref="initialNodeId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="joinNode" >
+      <foreignkey field-ref="joinNodeId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="splitNode" >
+      <foreignkey field-ref="splitNodeId"/>
+    </reference-descriptor>
+    <collection-descriptor name="branchState"
+    	element-class-ref="edu.iu.uis.eden.engine.node.BranchState"
+    	auto-retrieve="true"
+    	auto-update="true"
+    	proxy="false">
+    	<inverse-foreignkey field-ref="branchId" />
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.BranchState" table="EN_RTE_BRCH_ST_T">
+    <field-descriptor column="RTE_BRCH_ST_ID" name="stateId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+  	<field-descriptor column="RTE_BRCH_ID" name="branchId" jdbc-type="BIGINT" access="anonymous"/>
+  	<field-descriptor column="ST_KEY" name="key" jdbc-type="VARCHAR"/>
+  	<field-descriptor column="ST_VAL_TXT" name="value" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.Branch" name="branch" >
+      <foreignkey field-ref="branchId"/>
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.NodeState" table="EN_RTE_NODE_INSTN_ST_T">
+    <field-descriptor column="RTE_NODE_INSTN_ST_ID" name="stateId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+  	<field-descriptor column="RTE_NODE_INSTN_ID" name="nodeInstanceId" jdbc-type="BIGINT" access="anonymous"/>
+  	<field-descriptor column="ST_KEY" name="key" jdbc-type="VARCHAR"/>
+  	<field-descriptor column="ST_VAL_TXT" name="value" jdbc-type="VARCHAR"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNodeInstance" name="nodeInstance" >
+      <foreignkey field-ref="nodeInstanceId"/>
+    </reference-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.engine.node.Process" table="EN_DOC_TYP_PROC_T">
+    <field-descriptor column="DOC_TYP_PROC_ID" name="processId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_RTE_NODE"/>
+  	<field-descriptor column="DOC_TYP_ID" name="documentTypeId" jdbc-type="BIGINT" access="anonymous"/>
+  	<field-descriptor column="INIT_RTE_NODE_ID" name="initialRouteNodeId" jdbc-type="BIGINT" access="anonymous"/>
+  	<field-descriptor column="PROC_NM" name="name" jdbc-type="VARCHAR"/>
+  	<field-descriptor column="INIT_IND" name="initial" jdbc-type="BIT"/>
+    <field-descriptor column="DB_LOCK_VER_NBR" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+    <reference-descriptor class-ref="edu.iu.uis.eden.doctype.DocumentType" name="documentType" >
+      <foreignkey field-ref="documentTypeId"/>
+    </reference-descriptor>
+    <reference-descriptor class-ref="edu.iu.uis.eden.engine.node.RouteNode" name="initialRouteNode" auto-update="true">
+      <foreignkey field-ref="initialRouteNodeId"/>
+    </reference-descriptor>
   </class-descriptor>
 
   <class-descriptor class="edu.iu.uis.eden.messaging.ServiceInfo" table="EN_SERVICE_DEF_T">
@@ -758,79 +823,79 @@
     <reference-descriptor class-ref="edu.iu.uis.eden.messaging.ServiceInfo" name="serviceInfo" auto-update="false">
       <foreignkey field-ref="messageEntryId"/>
     </reference-descriptor>
-  </class-descriptor>
-
-  <!-- EDocLite XSLT style, definition, and association descriptors -->
-  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteStyle" table="en_edoclt_style_t">
-    <field-descriptor column="edoclt_style_id" name="eDocLiteStyleId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
-    <field-descriptor column="edoclt_style_nm" name="name" jdbc-type="VARCHAR"/>
-    <field-descriptor column="edoclt_style_xml" name="xmlContent" jdbc-type="LONGVARCHAR"/>
-    <field-descriptor column="edoclt_style_actv_ind" name="activeInd" jdbc-type="BIT"/>
-    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteDefinition" table="en_edoclt_def_t">
-    <field-descriptor column="edoclt_def_id" name="eDocLiteDefId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
-    <field-descriptor column="edoclt_def_nm" name="name" jdbc-type="VARCHAR"/>
-    <field-descriptor column="edoclt_def_xml" name="xmlContent" jdbc-type="LONGVARCHAR"/>
-    <field-descriptor column="edoclt_def_actv_ind" name="activeInd" jdbc-type="BIT"/>
-    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteAssociation" table="en_edoclt_assoc_t">
-    <field-descriptor column="edoclt_assoc_id" name="eDocLiteAssocId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
-    <field-descriptor column="edoclt_assoc_doctype_nm" name="edlName" jdbc-type="VARCHAR"/>
-    <field-descriptor column="edoclt_assoc_def_nm" name="definition" jdbc-type="VARCHAR"/>
-    <field-descriptor column="edoclt_assoc_style_nm" name="style" jdbc-type="VARCHAR"/>
-    <field-descriptor column="edoclt_assoc_actv_ind" name="activeInd" jdbc-type="BIT"/>
-    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
-  </class-descriptor>
-
-  <!-- Mapping for Simple User Implementation -->
-
-  <class-descriptor class="edu.iu.uis.eden.user.BaseWorkflowUser" table="EN_USR_T">
-    <field-descriptor name="workflowUserId"                 column="PRSN_EN_ID"       jdbc-type="VARCHAR" primarykey="true" autoincrement="true" sequence-name="SEQUENCE_EN_USR" />
-    <field-descriptor name="emplId"                         column="PRSN_UNIV_ID"     jdbc-type="VARCHAR" />
-    <field-descriptor name="authenticationUserId"           column="PRSN_NTWRK_ID"    jdbc-type="VARCHAR" />
-    <field-descriptor name="uuId"                           column="PRSN_UNVL_USR_ID" jdbc-type="VARCHAR" />
-    <field-descriptor name="emailAddress"                   column="PRSN_EMAIL_ADDR"  jdbc-type="VARCHAR" />
-    <field-descriptor name="displayName"                    column="PRSN_NM"          jdbc-type="VARCHAR"/>
-    <field-descriptor name="givenName"                      column="PRSN_GVN_NM"      jdbc-type="VARCHAR"/>
-    <field-descriptor name="lastName"                       column="PRSN_LST_NM"      jdbc-type="VARCHAR"/>
-	<field-descriptor name="createDate"                     column="USR_CRTE_DT"      jdbc-type="TIMESTAMP"  />
-    <field-descriptor name="lastUpdateDate"                 column="USR_LST_UPDT_DT"  jdbc-type="TIMESTAMP" />
-    <field-descriptor name="lockVerNbr"                     column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="false"/>
-  </class-descriptor>
-
-  <!-- Mapping for Simple Workgroup Implementation -->
-  <class-descriptor class="edu.iu.uis.eden.workgroup.BaseWorkgroup" table="EN_WRKGRP_T">
-    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" primarykey="true" />
-    <field-descriptor name="versionNumber" column="WRKGRP_VER_NBR" jdbc-type="INTEGER" primarykey="true"/>
-	<field-descriptor name="documentId" column="DOC_HDR_ID" jdbc-type="BIGINT"/>
-    <field-descriptor name="workgroupName" column="WRKGRP_NM" jdbc-type="VARCHAR" />
-    <field-descriptor name="description" column="WRKGRP_DESC" jdbc-type="VARCHAR" />
-    <field-descriptor name="activeInd" column="WRKGRP_ACTV_IND" jdbc-type="BIT" />
-    <field-descriptor name="workgroupType" column="WRKGRP_TYP_CD" jdbc-type="CHAR" />
-    <field-descriptor name="currentInd" column="WRKGRP_CUR_IND" jdbc-type="BIT" />
-    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
-	  <collection-descriptor element-class-ref="edu.iu.uis.eden.workgroup.BaseWorkgroupMember"
-        name="workgroupMembers"  auto-retrieve="true" auto-update="true" auto-delete="true">
-        <inverse-foreignkey field-ref="workgroupId"  />
-		<inverse-foreignkey field-ref="workgroupVersionNumber"/>
-    </collection-descriptor>
-  </class-descriptor>
-
-  <class-descriptor class="edu.iu.uis.eden.workgroup.BaseWorkgroupMember" table="EN_WRKGRP_MBR_T">
-    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" primarykey="true" />
-    <field-descriptor name="workflowId" column="WRKGRP_MBR_PRSN_EN_ID" jdbc-type="VARCHAR"
-      primarykey="true" />
-    <field-descriptor name="workgroupVersionNumber" column="WRKGRP_VER_NBR" jdbc-type="INTEGER"
-      primarykey="true" />
-	<field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
-    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.workgroup.BaseWorkgroup" name="workgroup">
-      <foreignkey field-ref="workgroupId"/>
-	  <foreignkey field-ref="workgroupVersionNumber"/>
-    </reference-descriptor>
+  </class-descriptor>
+
+  <!-- EDocLite XSLT style, definition, and association descriptors -->
+  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteStyle" table="en_edoclt_style_t">
+    <field-descriptor column="edoclt_style_id" name="eDocLiteStyleId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
+    <field-descriptor column="edoclt_style_nm" name="name" jdbc-type="VARCHAR"/>
+    <field-descriptor column="edoclt_style_xml" name="xmlContent" jdbc-type="LONGVARCHAR"/>
+    <field-descriptor column="edoclt_style_actv_ind" name="activeInd" jdbc-type="BIT"/>
+    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteDefinition" table="en_edoclt_def_t">
+    <field-descriptor column="edoclt_def_id" name="eDocLiteDefId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
+    <field-descriptor column="edoclt_def_nm" name="name" jdbc-type="VARCHAR"/>
+    <field-descriptor column="edoclt_def_xml" name="xmlContent" jdbc-type="LONGVARCHAR"/>
+    <field-descriptor column="edoclt_def_actv_ind" name="activeInd" jdbc-type="BIT"/>
+    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.edl.EDocLiteAssociation" table="en_edoclt_assoc_t">
+    <field-descriptor column="edoclt_assoc_id" name="eDocLiteAssocId" jdbc-type="BIGINT" primarykey="true" autoincrement="true" sequence-name="SEQ_en_edoclt"/>
+    <field-descriptor column="edoclt_assoc_doctype_nm" name="edlName" jdbc-type="VARCHAR"/>
+    <field-descriptor column="edoclt_assoc_def_nm" name="definition" jdbc-type="VARCHAR"/>
+    <field-descriptor column="edoclt_assoc_style_nm" name="style" jdbc-type="VARCHAR"/>
+    <field-descriptor column="edoclt_assoc_actv_ind" name="activeInd" jdbc-type="BIT"/>
+    <field-descriptor column="db_lock_ver_nbr" name="lockVerNbr" jdbc-type="INTEGER" locking="true"/>
+  </class-descriptor>
+
+  <!-- Mapping for Simple User Implementation -->
+
+  <class-descriptor class="edu.iu.uis.eden.user.BaseWorkflowUser" table="EN_USR_T">
+    <field-descriptor name="workflowUserId"                 column="PRSN_EN_ID"       jdbc-type="VARCHAR" primarykey="true" autoincrement="true" sequence-name="SEQUENCE_EN_USR" />
+    <field-descriptor name="emplId"                         column="PRSN_UNIV_ID"     jdbc-type="VARCHAR" />
+    <field-descriptor name="authenticationUserId"           column="PRSN_NTWRK_ID"    jdbc-type="VARCHAR" />
+    <field-descriptor name="uuId"                           column="PRSN_UNVL_USR_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="emailAddress"                   column="PRSN_EMAIL_ADDR"  jdbc-type="VARCHAR" />
+    <field-descriptor name="displayName"                    column="PRSN_NM"          jdbc-type="VARCHAR"/>
+    <field-descriptor name="givenName"                      column="PRSN_GVN_NM"      jdbc-type="VARCHAR"/>
+    <field-descriptor name="lastName"                       column="PRSN_LST_NM"      jdbc-type="VARCHAR"/>
+	<field-descriptor name="createDate"                     column="USR_CRTE_DT"      jdbc-type="TIMESTAMP"  />
+    <field-descriptor name="lastUpdateDate"                 column="USR_LST_UPDT_DT"  jdbc-type="TIMESTAMP" />
+    <field-descriptor name="lockVerNbr"                     column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="false"/>
+  </class-descriptor>
+
+  <!-- Mapping for Simple Workgroup Implementation -->
+  <class-descriptor class="edu.iu.uis.eden.workgroup.BaseWorkgroup" table="EN_WRKGRP_T">
+    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" primarykey="true" />
+    <field-descriptor name="versionNumber" column="WRKGRP_VER_NBR" jdbc-type="INTEGER" primarykey="true"/>
+	<field-descriptor name="documentId" column="DOC_HDR_ID" jdbc-type="BIGINT"/>
+    <field-descriptor name="workgroupName" column="WRKGRP_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="description" column="WRKGRP_DESC" jdbc-type="VARCHAR" />
+    <field-descriptor name="activeInd" column="WRKGRP_ACTV_IND" jdbc-type="BIT" />
+    <field-descriptor name="workgroupType" column="WRKGRP_TYP_CD" jdbc-type="CHAR" />
+    <field-descriptor name="currentInd" column="WRKGRP_CUR_IND" jdbc-type="BIT" />
+    <field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
+	  <collection-descriptor element-class-ref="edu.iu.uis.eden.workgroup.BaseWorkgroupMember"
+        name="workgroupMembers"  auto-retrieve="true" auto-update="true" auto-delete="true">
+        <inverse-foreignkey field-ref="workgroupId"  />
+		<inverse-foreignkey field-ref="workgroupVersionNumber"/>
+    </collection-descriptor>
+  </class-descriptor>
+
+  <class-descriptor class="edu.iu.uis.eden.workgroup.BaseWorkgroupMember" table="EN_WRKGRP_MBR_T">
+    <field-descriptor name="workgroupId" column="WRKGRP_ID" jdbc-type="BIGINT" primarykey="true" />
+    <field-descriptor name="workflowId" column="WRKGRP_MBR_PRSN_EN_ID" jdbc-type="VARCHAR"
+      primarykey="true" />
+    <field-descriptor name="workgroupVersionNumber" column="WRKGRP_VER_NBR" jdbc-type="INTEGER"
+      primarykey="true" />
+	<field-descriptor name="lockVerNbr" column="DB_LOCK_VER_NBR" jdbc-type="INTEGER" locking="true" />
+    <reference-descriptor auto-retrieve="true" auto-update="false" auto-delete="false" class-ref="edu.iu.uis.eden.workgroup.BaseWorkgroup" name="workgroup">
+      <foreignkey field-ref="workgroupId"/>
+	  <foreignkey field-ref="workgroupVersionNumber"/>
+    </reference-descriptor>
   </class-descriptor>
 
   <class-descriptor class="edu.iu.uis.eden.messaging.bam.BAMTargetEntry" table="EN_BAM_T">
@@ -858,4 +923,4 @@
       <foreignkey field-ref="bamId"/>
     </reference-descriptor>
   </class-descriptor>
-
+
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeValue.java
===================================================================
RCS file: /opt/cvs/workflow/src/edu/iu/uis/eden/docsearch/SearchableAttributeValue.java,v
retrieving revision 1.5.8.1
diff -u -r1.5.8.1 SearchableAttributeValue.java
--- src/edu/iu/uis/eden/docsearch/SearchableAttributeValue.java	2 Mar 2007 22:25:41 -0000	1.5.8.1
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeValue.java	28 Mar 2007 15:31:05 -0000
@@ -16,7 +16,6 @@
  */
 package edu.iu.uis.eden.docsearch;
 
-import edu.iu.uis.eden.WorkflowPersistable;
 import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
 
 /**
@@ -25,80 +24,27 @@
  * @author bh79
  *
  */
-public class SearchableAttributeValue implements WorkflowPersistable {
+public interface SearchableAttributeValue {
 
-    private static final long serialVersionUID = -2862825631745400602L;
-    private Long searchableAttributeValueId;
-	private String searchableAttributeKey;
-	private String searchableAttributeValue;
-
-
-	private Long routeHeaderId;
-	private DocumentRouteHeaderValue routeHeader;
-
-	public Long getSearchableAttributeValueId() {
-		return searchableAttributeValueId;
-	}
-
-	public void setSearchableAttributeValueId(Long searchableAttributeValueId) {
-		this.searchableAttributeValueId = searchableAttributeValueId;
-	}
-
-	/**
-	 * @param routeHeaderId The routeHeaderId to set.
-	 */
-	public void setRouteHeaderId(Long routeHeaderId) {
-		this.routeHeaderId = routeHeaderId;
-	}
-
-	/**
-	 * @return Returns the routeHeaderId.
-	 */
-	public Long getRouteHeaderId() {
-		return routeHeaderId;
-	}
-
-	/**
-	 * @param searchableAttributeKey The searchableAttributeKey to set.
-	 */
-	public void setSearchableAttributeKey(String searchableAttributeKey) {
-		this.searchableAttributeKey = searchableAttributeKey;
-	}
-
-	/**
-	 * @return Returns the searchableAttributeKey.
-	 */
-	public String getSearchableAttributeKey() {
-		return searchableAttributeKey;
-	}
-
-	/**
-	 * @param searchableAttributeValue The searchableAttributeValue to set.
-	 */
-	public void setSearchableAttributeValue(String searchableAttributeValue) {
-		this.searchableAttributeValue = searchableAttributeValue;
-	}
-
-	/**
-	 * @return Returns the searchableAttributeValue.
-	 */
-	public String getSearchableAttributeValue() {
-		return searchableAttributeValue;
-	}
-
-	/* (non-Javadoc)
-	 * @see edu.iu.uis.eden.WorkflowPersistable#copy(boolean)
-	 */
-	public Object copy(boolean preserveKeys) {
-		return null;
-	}
-
-	public DocumentRouteHeaderValue getRouteHeader() {
-		return routeHeader;
-	}
-
-	public void setRouteHeader(DocumentRouteHeaderValue routeHeader) {
-		this.routeHeader = routeHeader;
-	}
+    public String getOjbConcreteClass();
 
+    public void setOjbConcreteClass(String ojbConcreteClass);
+
+    public DocumentRouteHeaderValue getRouteHeader();
+
+    public void setRouteHeader(DocumentRouteHeaderValue routeHeader);
+
+    public Long getRouteHeaderId();
+
+    public void setRouteHeaderId(Long routeHeaderId);
+
+    public String getSearchableAttributeKey();
+
+    public void setSearchableAttributeKey(String searchableAttributeKey);
+
+    public Long getSearchableAttributeValueId();
+
+    public void setSearchableAttributeValueId(Long searchableAttributeValueId);
+    
+    public String getSearchableAttributeStringValue();
 }
Index: test/src/mocks/MockChartOrgAttribute.java
===================================================================
RCS file: /opt/cvs/workflow/test/src/mocks/MockChartOrgAttribute.java,v
retrieving revision 1.1.2.1
diff -u -r1.1.2.1 MockChartOrgAttribute.java
--- test/src/mocks/MockChartOrgAttribute.java	13 Feb 2007 16:59:49 -0000	1.1.2.1
+++ test/src/mocks/MockChartOrgAttribute.java	28 Mar 2007 15:31:06 -0000
@@ -16,7 +16,7 @@
 import edu.iu.uis.eden.IUServiceLocator;
 import edu.iu.uis.eden.WorkflowServiceErrorException;
 import edu.iu.uis.eden.WorkflowServiceErrorImpl;
-import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
 import edu.iu.uis.eden.fisdata.Organization;
 import edu.iu.uis.eden.lookupable.Field;
 import edu.iu.uis.eden.lookupable.Row;
@@ -266,13 +266,13 @@
         List searchStorageValues = new ArrayList();
 //TODO the variables finCoaCd and orgCd may not be populated.  Values may only be in the incoming doc content.
         if (finCoaCd != null && !finCoaCd.equals("")) {
-        	SearchableAttributeValue searchableFinCoaCd = new SearchableAttributeValue();
+            SearchableAttributeStringValue searchableFinCoaCd = new SearchableAttributeStringValue();
         	searchableFinCoaCd.setSearchableAttributeKey(FIN_COA_CD_KEY);
         	searchableFinCoaCd.setSearchableAttributeValue(this.finCoaCd);
             searchStorageValues.add(searchableFinCoaCd);
         }
         if (orgCd != null && !orgCd.equals("")) {
-        	SearchableAttributeValue searchableOrgCd = new SearchableAttributeValue();
+            SearchableAttributeStringValue searchableOrgCd = new SearchableAttributeStringValue();
             searchableOrgCd.setSearchableAttributeKey(ORG_CD_KEY);
             searchableOrgCd.setSearchableAttributeValue(this.orgCd);
             searchStorageValues.add(searchableOrgCd);
Index: src/edu/iu/uis/eden/docsearch/DefaultDocumentSearchExecutor.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/DefaultDocumentSearchExecutor.java
diff -N src/edu/iu/uis/eden/docsearch/DefaultDocumentSearchExecutor.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/DefaultDocumentSearchExecutor.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,661 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.oro.text.perl.Perl5Util;
+
+import edu.iu.uis.eden.EdenConstants;
+import edu.iu.uis.eden.KEWServiceLocator;
+import edu.iu.uis.eden.WorkflowServiceErrorImpl;
+import edu.iu.uis.eden.core.GlobalResourceLoader;
+import edu.iu.uis.eden.definition.ObjectDefinition;
+import edu.iu.uis.eden.docsearch.xml.GenericXMLSearchableAttribute;
+import edu.iu.uis.eden.doctype.DocumentType;
+import edu.iu.uis.eden.doctype.DocumentTypeAttribute;
+import edu.iu.uis.eden.doctype.DocumentTypeService;
+import edu.iu.uis.eden.exception.EdenUserNotFoundException;
+import edu.iu.uis.eden.routetemplate.RuleAttribute;
+import edu.iu.uis.eden.routetemplate.WorkflowAttributeValidationError;
+import edu.iu.uis.eden.user.AuthenticationUserId;
+import edu.iu.uis.eden.user.WorkflowUser;
+import edu.iu.uis.eden.user.WorkflowUserId;
+import edu.iu.uis.eden.util.KeyLabelPair;
+import edu.iu.uis.eden.util.Utilities;
+import edu.iu.uis.eden.workgroup.GroupNameId;
+import edu.iu.uis.eden.workgroup.Workgroup;
+
+/**
+ *
+ * @author delyea
+ */
+public class DefaultDocumentSearchExecutor implements DocumentSearchExecutor {
+
+    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(DefaultDocumentSearchExecutor.class);
+
+    private static final String CREATE_DATE_FIELD_STRING = " EN_DOC_HDR_T.DOC_CRTE_DT ";
+
+    private static final String APPROVE_DATE_FIELD_STRING = " EN_DOC_HDR_T.DOC_APRV_DT ";
+
+    private static final String FINALIZATION_DATE_FIELD_STRING = " EN_DOC_HDR_T.DOC_FNL_DT ";
+
+    private static final String LAST_STATUS_UPDATE_DATE = " EN_DOC_HDR_T.DOC_RTE_STAT_MDFN_DT ";
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.DocumentSearchExecutor#executeSearch(edu.iu.uis.eden.user.WorkflowUser, edu.iu.uis.eden.docsearch.DocSearchCriteriaVO, edu.iu.uis.eden.doctype.DocumentType)
+     */
+    public DocSearchResult executeSearch(DocSearchCriteriaVO criteria) throws EdenUserNotFoundException {
+        return getDocSearchSQL(criteria, true, DocSearchCriteriaVO.SEARCH_RESULT_CAP);
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.DocumentSearchExecutor#validateSearchableAttributes()
+     */
+    public List<WorkflowServiceErrorImpl> validateSearchableAttributes(DocSearchCriteriaVO criteria) {
+        List<WorkflowServiceErrorImpl> errors = new ArrayList<WorkflowServiceErrorImpl>();
+        List searchableAttributes = criteria.getSearchableAttributes();
+        if (searchableAttributes != null && !searchableAttributes.isEmpty()) {
+            Map paramMap = new HashMap();
+            for (Iterator iter = searchableAttributes.iterator(); iter.hasNext();) {
+                KeyLabelPair propertyField = (KeyLabelPair) iter.next();
+                paramMap.put(propertyField.getKey(), propertyField.getLabel());
+            }
+            DocumentType documentType = KEWServiceLocator.getDocumentTypeService().findByName(criteria.getDocTypeFullName());
+
+            for (Iterator iter = documentType.getDocumentTypeAttributes().iterator(); iter.hasNext();) {
+                DocumentTypeAttribute attribute = (DocumentTypeAttribute) iter.next();
+                RuleAttribute ruleAttribute = attribute.getRuleAttribute();
+                if (EdenConstants.SEARCHABLE_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType()) || EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())) {
+                    try {
+                        SearchableAttribute searchableAttribute = (SearchableAttribute) GlobalResourceLoader.getObject(new ObjectDefinition(ruleAttribute.getClassName(), ruleAttribute.getMessageEntity())); //SpringServiceLocator.getExtensionService().getSearchableAttribute(ruleAttribute.getClassName());
+                        if(EdenConstants.SEARCHABLE_XML_ATTRIBUTE_TYPE.equalsIgnoreCase(ruleAttribute.getType())){
+                            ((GenericXMLSearchableAttribute)searchableAttribute).setRuleAttribute(ruleAttribute);
+                        }
+                        List searchableErrors = searchableAttribute.validateUserSearchInputs(paramMap);
+                        if(!Utilities.isEmpty(searchableAttributes)){
+                            for (Iterator iterator = searchableErrors.iterator(); iterator.hasNext();) {
+                                WorkflowAttributeValidationError error = (WorkflowAttributeValidationError) iterator.next();
+                                errors.add(new WorkflowServiceErrorImpl(error.getKey(), "routetemplate.xmlattribute.error", error.getMessage()));
+                            }
+                        }
+                    } catch (Exception e) {
+                        LOG.error("error finding searchable attribute in when validating document search criteria.", e);
+                    }
+                }
+            }
+        }
+        return errors;
+    }
+    
+    public static SearchableAttributeSql getSearchableAttributeSql(List searchableAttributes, int whereClauseSize) {
+
+        SearchableAttributeSql searchableAttributeSql = new SearchableAttributeSql();
+        
+        StringBuffer selectSql = new StringBuffer();
+        StringBuffer fromSql = new StringBuffer();
+        StringBuffer whereSql = new StringBuffer();
+        
+        int tableIndex = 1;
+
+        for (Iterator iterator = searchableAttributes.iterator(); iterator.hasNext(); tableIndex++) {
+            KeyLabelPair propertyField = (KeyLabelPair) iterator.next();
+            String label = propertyField.getLabel();
+            
+//            if (!Utilities.isEmpty(label)) {
+                if (whereClauseSize > 0) {
+                    whereSql.append(" and ");
+                } else {
+                    whereSql.append(" where ");
+                }
+                String tableName = "EXT" + tableIndex;
+                whereSql.append("EN_DOC_HDR_T.DOC_HDR_ID = " + tableName + ".DOC_HDR_ID and " + tableName + ".DOC_HDR_EXT_VAL_KEY = '" + propertyField.getKey() + "' ");
+
+                if (!label.trim().endsWith("*")) {
+                    label = label.trim().concat("*").replace('*', '%');
+                } else {
+                    label = label.trim().replace('*', '%');
+                }
+
+                whereSql.append(" and " + tableName + ".DOC_HDR_EXT_VAL like '%" + label + "%' ");
+
+                // tables.append(" ,(SELECT * FROM EN_DOC_HDR_EXT_T WHERE DOC_HDR_EXT_VAL_KEY = '" + propertyField.getKey() + "') EXT" + tableIndex + " ");
+                fromSql.append(" ,EN_DOC_HDR_EXT_T EXT" + tableIndex + " ");
+
+                selectSql.append(",EXT" + tableIndex + ".DOC_HDR_EXT_VAL_KEY AS KEY" + tableIndex + " ");
+                selectSql.append(",EXT" + tableIndex + ".DOC_HDR_EXT_VAL AS VALUE" + tableIndex + " ");
+
+                whereClauseSize += whereSql.length();
+//            }
+        }
+
+        QueryComponent qc = new QueryComponent(selectSql.toString(),fromSql.toString(),whereSql.toString());
+        searchableAttributeSql.setQueryComponent(qc);
+        searchableAttributeSql.setSearchableAttributeCount(searchableAttributes.size());
+        return searchableAttributeSql;
+    }
+    
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.DocumentSearchExecutor#processResultSet(java.sql.ResultSet)
+     */
+    public List<DocSearchVO> processResultSet(ResultSet resultSet,DocSearchCriteriaVO criteria,int searchableAttributeCount) throws EdenUserNotFoundException, SQLException {
+        int size = 0;
+        List docList = new ArrayList();
+        Map resultMap = new HashMap();
+        while ((size < DocSearchCriteriaVO.SEARCH_RESULT_CAP) && resultSet.next()) {
+            DocSearchVO docSearchVO = processRow(resultSet, searchableAttributeCount);
+            if (!resultMap.containsKey(docSearchVO.getRouteHeaderId())) {
+                docList.add(docSearchVO);
+                resultMap.put(docSearchVO.getRouteHeaderId(), docSearchVO);
+            } else {
+                // handle duplicate rows with different search data
+                DocSearchVO previousEntry = (DocSearchVO)resultMap.get(docSearchVO.getRouteHeaderId());
+                handleMultipleDocumentRows(previousEntry, docSearchVO);
+            }
+            size++;     
+        }
+        // if we have threshold+1 results, then we have more results than we are going to display
+        criteria.setOverThreshold(resultSet.next());
+        LOG.debug("Processed "+size+" document search result rows.");
+        return docList;
+    }
+    
+    private DocSearchVO processRow(ResultSet rs, int searchableAttributeCount) throws java.sql.SQLException, EdenUserNotFoundException {
+        DocSearchVO docSearchVO = new DocSearchVO();
+
+        docSearchVO.setRouteHeaderId(new Long(rs.getLong("DOC_HDR_ID")));
+
+        String docTypeLabel = rs.getString("DOC_TYP_LBL_TXT");
+        String activeIndicatorCode = rs.getString("DOC_TYP_ACTV_IND");
+
+        docSearchVO.setDocRouteStatusCode(rs.getString("DOC_RTE_STAT_CD"));
+        docSearchVO.setDateCreated(rs.getTimestamp("DOC_CRTE_DT"));
+        docSearchVO.setDocumentTitle(rs.getString("DOC_TTL"));
+        docSearchVO.setDocTypeLabel(docTypeLabel);
+
+        if ((activeIndicatorCode == null) || (activeIndicatorCode.trim().length() == 0)) {
+            docSearchVO.setActiveIndicatorCode(EdenConstants.ACTIVE_CD);
+        } else {
+            docSearchVO.setActiveIndicatorCode(activeIndicatorCode);
+        }
+
+        if ((docTypeLabel == null) || (docTypeLabel.trim().length() == 0)) {
+            docSearchVO.setDocTypeHandlerUrl("");
+        } else {
+            docSearchVO.setDocTypeHandlerUrl(rs.getString("DOC_TYP_HDLR_URL_ADDR"));
+        }
+
+        docSearchVO.setInitiatorWorkflowId(rs.getString("DOC_INITR_PRSN_EN_ID"));
+
+        WorkflowUser user = KEWServiceLocator.getUserService().getWorkflowUser(new WorkflowUserId(docSearchVO.getInitiatorWorkflowId()));
+
+        docSearchVO.setInitiatorNetworkId(user.getAuthenticationUserId().getAuthenticationId());
+        docSearchVO.setInitiatorName(user.getDisplayName());
+        docSearchVO.setInitiatorFirstName(user.getGivenName());
+        docSearchVO.setInitiatorLastName(user.getLastName());
+        docSearchVO.setInitiatorTransposedName(user.getTransposedName());
+        docSearchVO.setInitiatorEmailAddress(user.getEmailAddress());
+        
+        int count = searchableAttributeCount;
+        if (count > 0) {
+            for (int i = 1; i <= count; i++) {
+                KeyLabelPair propertyField = 
+                    new KeyLabelPair(rs.getString("KEY" + i), rs.getString("VALUE" + i));
+                docSearchVO.addSearchableAttribute(propertyField);
+            }       
+        }
+        
+        return docSearchVO;
+    }
+
+    /**
+     * Handles multiple document rows by collapsing them and their data into the searchable attribute columns.
+     * 
+     * TODO this is currently concatenating strings together with HTML elements in a DAO, this seems bad,
+     * perhaps we should move this to the web layer (and perhaps enhance the searchable attributes
+     * portion of the DocSearchVO data structure?)
+     */
+    private void handleMultipleDocumentRows(DocSearchVO existingRow, DocSearchVO newRow) {
+        for (Iterator iterator = existingRow.getSearchableAttributes().iterator(); iterator.hasNext();) {
+            KeyLabelPair existingData = (KeyLabelPair) iterator.next();
+            String existingLabel = existingData.getLabel();
+            if (existingData.getKey() != null && existingLabel != null) {
+                for (Iterator dataIt = newRow.getSearchableAttributes().iterator(); dataIt.hasNext();) {
+                    KeyLabelPair newData = (KeyLabelPair) dataIt.next();
+                    if (existingData.getKey().equals(newData.getKey())) {
+                        String newLabel = newData.getLabel();
+                        if (StringUtils.isEmpty(newLabel)) {
+                            newLabel = "&nbsp;";
+                        }
+                        if (newData.getKey() != null) {
+                            if (StringUtils.isEmpty(existingLabel.trim())) {
+                                existingData.setLabel("");
+                            }
+                            existingData.setLabel(existingLabel + "<br>" + newLabel);
+                        }
+                    }
+                }
+            }
+        }
+    }
+    
+    protected static DocSearchResult getDocSearchSQL(DocSearchCriteriaVO criteria, boolean limitResults, int resultLimit) throws EdenUserNotFoundException {
+        // the DISTINCT here is important as it filters out duplicate rows which could occur as the result of doc search extension values...
+        StringBuffer selectSQL = new StringBuffer("select DISTINCT(EN_DOC_HDR_T.DOC_HDR_ID), EN_DOC_HDR_T.DOC_INITR_PRSN_EN_ID, EN_DOC_HDR_T.DOC_RTE_STAT_CD, EN_DOC_HDR_T.DOC_CRTE_DT, EN_DOC_HDR_T.DOC_TTL, DOC1.DOC_TYP_LBL_TXT, DOC1.DOC_TYP_HDLR_URL_ADDR, DOC1.DOC_TYP_ACTV_IND");
+        StringBuffer fromSQL = new StringBuffer(" from EN_DOC_HDR_T, EN_DOC_TYP_T DOC1 ");
+        StringBuffer whereSQL = new StringBuffer();
+        whereSQL.append(getRouteHeaderIdSql(criteria.getRouteHeaderId(), whereSQL.length()));
+        whereSQL.append(getInitiatorSql(criteria.getInitiator(), whereSQL.length()));
+        whereSQL.append(getDocTitleSql(criteria.getDocTitle(), whereSQL.length()));
+        whereSQL.append(getAppDocIdSql(criteria.getAppDocId(), whereSQL.length()));
+        whereSQL.append(getDateCreatedSql(criteria.getFromDateCreated(), criteria.getToDateCreated(), whereSQL.length()));
+        whereSQL.append(getDateLastModifiedSql(criteria.getFromDateLastModified(), criteria.getToDateLastModified(), whereSQL.length()));
+        whereSQL.append(getDateApprovedSql(criteria.getFromDateApproved(), criteria.getToDateApproved(), whereSQL.length()));
+        whereSQL.append(getDateFinalizedSql(criteria.getFromDateFinalized(), criteria.getToDateFinalized(), whereSQL.length()));
+        // flags for the table being added to the FROM class of the sql
+        boolean actionTakenTable = false;
+        if ((!"".equals(getViewerSql(criteria.getViewer(), whereSQL.length()))) || (!"".equals(getWorkgroupViewerSql(criteria.getWorkgroupViewerName(), whereSQL.length())))) {
+            whereSQL.append(getViewerSql(criteria.getViewer(), whereSQL.length()));
+            whereSQL.append(getWorkgroupViewerSql(criteria.getWorkgroupViewerName(), whereSQL.length()));
+            fromSQL.append(", EN_ACTN_RQST_T ");
+            actionTakenTable = true;
+        }
+
+        if (!("".equals(getApproverSql(criteria.getApprover(), whereSQL.length())))) {
+            whereSQL.append(getApproverSql(criteria.getApprover(), whereSQL.length()));
+            if (!actionTakenTable) {
+                fromSQL.append(", EN_ACTN_TKN_T ");
+            }
+            actionTakenTable = true;
+        }
+
+        if (!("".equals(getDocTypeFullNameSql(criteria.getDocTypeFullName(), whereSQL.length())))) {
+            whereSQL.append(getDocTypeFullNameSql(criteria.getDocTypeFullName(), whereSQL.length()));
+        }
+
+        if (!"".equals(getDocRouteNodeSql(criteria.getDocRouteNodeId(), criteria.getDocRouteNodeLogic(), whereSQL.length()))) {
+            whereSQL.append(getDocRouteNodeSql(criteria.getDocRouteNodeId(), criteria.getDocRouteNodeLogic(), whereSQL.length()));
+            fromSQL.append(", EN_RTE_NODE_INSTN_T ");
+        }
+
+        SearchableAttributeSql searchableAttributeSql = null;
+        int searchablAttributeCount = 0;
+        filterOutNonQueryAttributes(criteria);
+        if ((criteria.getSearchableAttributes() != null) && (criteria.getSearchableAttributes().size() > 0)) {
+            searchableAttributeSql = getSearchableAttributeSql(criteria.getSearchableAttributes(), whereSQL.length());
+            QueryComponent searchableAttributeQueryComponent = searchableAttributeSql.getQueryComponent();
+            selectSQL.append(searchableAttributeQueryComponent.getSelectSql());
+            fromSQL.append(searchableAttributeQueryComponent.getFromSql());
+            whereSQL.append(searchableAttributeQueryComponent.getWhereSql());
+            searchablAttributeCount = searchableAttributeSql.getSearchableAttributeCount();
+        }
+
+        if ((whereSQL == null) || (whereSQL.length() == 0)) {
+            if (Utilities.isEmpty(criteria.getDocRouteStatus())) {
+                // if they haven't set any criteria, default the from created date to today
+                criteria.setFromDateCreated(EdenConstants.getDefaultDateFormat().format(new Date()));
+                whereSQL.append(getDateCreatedSql(criteria.getFromDateCreated(), criteria.getToDateCreated(), whereSQL.length()));
+            }
+        }
+        // now append the status
+        whereSQL.append(getDocRouteStatusSql(criteria.getDocRouteStatus(), whereSQL.length()));
+
+        if ((whereSQL == null) || (whereSQL.length() == 0)) {
+            whereSQL.append(" where EN_DOC_HDR_T.DOC_TYP_ID = DOC1.DOC_TYP_ID ");
+            criteria.setFromDateCreated(EdenConstants.getDefaultDateFormat().format(new Date()));
+            whereSQL.append(getDateCreatedSql(criteria.getFromDateCreated(), criteria.getToDateCreated(), whereSQL.length()));
+        } else {
+            whereSQL.append(" and EN_DOC_HDR_T.DOC_TYP_ID = DOC1.DOC_TYP_ID ");
+        }
+        StringBuffer finalSql = selectSQL.append(fromSQL).append(whereSQL).append(" order by EN_DOC_HDR_T.DOC_HDR_ID desc");
+        return new DocSearchResult(finalSql.toString(), searchablAttributeCount);
+    }
+    
+    protected static String getRouteHeaderIdSql(String routeHeaderId, int whereClauseSize) {
+        if ((routeHeaderId == null) || "".equals(routeHeaderId.trim())) {
+            return "";
+        } else {
+            Long rh = new Long(routeHeaderId.trim());
+            if (whereClauseSize > 0) {
+                return new StringBuffer(" and EN_DOC_HDR_T.DOC_HDR_ID = ").append(rh.intValue()).toString();
+            } else {
+                return new StringBuffer(" where EN_DOC_HDR_T.DOC_HDR_ID = ").append(rh.intValue()).toString();
+            }
+        }
+    }
+
+    protected static String getInitiatorSql(String initiator, int whereClauseSize) throws EdenUserNotFoundException {
+        if ((initiator == null) || "".equals(initiator.trim())) {
+            return "";
+        } else {
+            String userWorkflowId = KEWServiceLocator.getUserService().getWorkflowUser(new AuthenticationUserId(initiator.trim())).getWorkflowUserId().getWorkflowId();
+
+            if (whereClauseSize > 0) {
+                return new StringBuffer(" and EN_DOC_HDR_T.DOC_INITR_PRSN_EN_ID = '").append(userWorkflowId).append("'").toString();
+            } else {
+                return new StringBuffer(" where EN_DOC_HDR_T.DOC_INITR_PRSN_EN_ID = '").append(userWorkflowId).append("'").toString();
+            }
+        }
+    }
+
+    protected static String getDocTitleSql(String docTitle, int whereClauseSize) {
+        if ((docTitle == null) || "".equals(docTitle.trim())) {
+            return "";
+        } else {
+            if (!docTitle.trim().endsWith("*")) {
+                docTitle = docTitle.trim().concat("*").replace('*', '%');
+            } else {
+                docTitle = docTitle.trim().replace('*', '%');
+            }
+            // quick and dirty ' replacement that isn't the best but should work for all dbs
+            docTitle = docTitle.trim().replace('\'', '%');
+
+            if (whereClauseSize > 0) {
+                return new StringBuffer(" and upper(EN_DOC_HDR_T.DOC_TTL) like '%").append(docTitle.toUpperCase()).append("'").toString();
+            } else {
+                return new StringBuffer(" where upper(EN_DOC_HDR_T.DOC_TTL) like '%").append(docTitle.toUpperCase()).append("'").toString();
+            }
+        }
+    }
+    
+    // special methods that return the sql needed to complete the search
+    // or nothing if the field was not filled in
+    protected static String getAppDocIdSql(String appDocId, int whereClauseSize) {
+        if ((appDocId == null) || "".equals(appDocId.trim())) {
+            return "";
+        } else {
+            if (!appDocId.trim().endsWith("*")) {
+                appDocId = appDocId.trim().concat("*").replace('*', '%');
+            } else {
+                appDocId = appDocId.trim().replace('*', '%');
+            }
+
+            if (whereClauseSize > 0) {
+                return new StringBuffer(" and upper(EN_DOC_HDR_T.DOC_APPL_DOC_ID) like '%").append(appDocId.toUpperCase()).append("'").toString();
+            } else {
+                return new StringBuffer(" where upper(EN_DOC_HDR_T.DOC_APPL_DOC_ID) like '%").append(appDocId.toUpperCase()).append("'").toString();
+            }
+        }
+    }
+
+    protected static String getDateCreatedSql(String fromDateCreated, String toDateCreated, int whereClauseSize) {
+        StringBuffer dateSqlString = startGeneratedPredicate(whereClauseSize);
+        return establishDateString(fromDateCreated, toDateCreated, CREATE_DATE_FIELD_STRING, dateSqlString);
+    }
+
+    protected static String getDateApprovedSql(String fromDateApproved, String toDateApproved, int whereClauseSize) {
+        StringBuffer dateSqlString = startGeneratedPredicate(whereClauseSize);
+        return establishDateString(fromDateApproved, toDateApproved, APPROVE_DATE_FIELD_STRING, dateSqlString);
+    }
+
+    protected static String getDateFinalizedSql(String fromDateFinalized, String toDateFinalized, int whereClauseSize) {
+        StringBuffer dateSqlString = startGeneratedPredicate(whereClauseSize);
+        return establishDateString(fromDateFinalized, toDateFinalized, FINALIZATION_DATE_FIELD_STRING, dateSqlString);
+    }
+
+    protected static String getDateLastModifiedSql(String fromDateLastModified, String toDateLastModified, int whereClauseSize) {
+        StringBuffer dateSqlString = startGeneratedPredicate(whereClauseSize);
+        return establishDateString(fromDateLastModified, toDateLastModified, LAST_STATUS_UPDATE_DATE, dateSqlString);
+    }
+
+    protected static String getViewerSql(String viewer, int whereClauseSize) throws EdenUserNotFoundException {
+        if ((viewer == null) || "".equals(viewer.trim())) {
+            return "";
+        } else {
+            WorkflowUser user = KEWServiceLocator.getUserService().getWorkflowUser(new AuthenticationUserId(viewer.trim()));
+            String userWorkflowId = user.getWorkflowId();
+            String sql = "";
+            if (whereClauseSize > 0) {
+                sql += " and ";
+            } else {
+                sql += " where ";
+            }
+            sql += "EN_DOC_HDR_T.DOC_HDR_ID = EN_ACTN_RQST_T.DOC_HDR_ID and EN_ACTN_RQST_T.ACTN_RQST_PRSN_EN_ID = '" + userWorkflowId + "'";
+
+            return sql;
+        }
+    }
+
+    protected static String getWorkgroupViewerSql(String workgroupName, int whereClauseSize) {
+        String sql = "";
+        if (!Utilities.isEmpty(workgroupName)) {
+            if (whereClauseSize > 0) {
+                sql += " and ";
+            } else {
+                sql += " where ";
+            }
+            Workgroup workgroup = KEWServiceLocator.getWorkgroupService().getWorkgroup(new GroupNameId(workgroupName));
+            sql += "EN_DOC_HDR_T.DOC_HDR_ID = EN_ACTN_RQST_T.DOC_HDR_ID and EN_ACTN_RQST_T.WRKGRP_ID = " + workgroup.getWorkflowGroupId().getGroupId();
+        }
+        return sql;
+    }
+
+    protected static String getApproverSql(String approver, int whereClauseSize) throws EdenUserNotFoundException {
+        if ((approver == null) || "".equals(approver.trim())) {
+            return "";
+        } else {
+            String userWorkflowId = KEWServiceLocator.getUserService().getWorkflowUser(new AuthenticationUserId(approver.trim())).getWorkflowUserId().getWorkflowId();
+            String sql = "";
+            if (whereClauseSize > 0) {
+                sql += " and";
+            } else {
+                sql += " where";
+            }
+            return sql += " EN_DOC_HDR_T.DOC_HDR_ID = EN_ACTN_TKN_T.DOC_HDR_ID and upper(EN_ACTN_TKN_T.ACTN_TKN_CD) = '" + EdenConstants.ACTION_TAKEN_APPROVED_CD + "' and EN_ACTN_TKN_T.ACTN_TKN_PRSN_EN_ID = '" + userWorkflowId + "'";
+        }
+    }
+
+    public static String getDocTypeFullNameSql(String docTypeFullName, int whereClauseSize) {
+        if ((docTypeFullName == null) || "".equals(docTypeFullName.trim())) {
+            return "";
+        } else {
+            DocumentTypeService docSrv = (DocumentTypeService) KEWServiceLocator.getDocumentTypeService();
+            DocumentType docType = docSrv.findByName(docTypeFullName.trim());
+            if (docType == null) {
+                return (whereClauseSize > 0 ? " and 1=0 " : " where 1=0 ");
+            }
+
+            StringBuffer sql = new StringBuffer();
+            sql.append(whereClauseSize > 0 ? " and " : " where ");
+            sql.append("(DOC1.DOC_TYP_NM = '" + docType.getName() + "'");
+
+            if (docType.getChildrenDocTypes() != null) {
+                addChildDocumentTypes(sql, docType.getChildrenDocTypes());
+            }
+            sql.append(")");
+            return sql.toString();
+        }
+    }
+
+    private static void addChildDocumentTypes(StringBuffer sql, Collection childDocumentTypes) {
+        for (Iterator iter = childDocumentTypes.iterator(); iter.hasNext();) {
+            DocumentType child = (DocumentType) iter.next();
+            sql.append(" or DOC1.DOC_TYP_NM = '" + child.getName() + "'");
+            addChildDocumentTypes(sql, child.getChildrenDocTypes());
+        }
+    }
+
+    public static String getDocRouteNodeSql(String docRouteLevel, String docRouteLevelLogic, int whereClauseSize) {
+        // -1 is the default 'blank' choice from the route node drop down a number is used because the ojb RouteNode object is used to
+        // render the node choices on the form.
+        if ((docRouteLevel == null) || "".equals(docRouteLevel.trim()) || docRouteLevel.equals("-1")) {
+            return "";
+        } else {
+            String operator;
+            if ("before".equalsIgnoreCase(docRouteLevelLogic.trim())) {
+                operator = " < ";
+            } else if ("after".equalsIgnoreCase(docRouteLevelLogic.trim())) {
+                operator = " > ";
+            } else {
+                operator = " = ";
+            }
+
+            String routeNodeSQL;
+            if (whereClauseSize > 0) {
+                routeNodeSQL = " and ";
+            } else {
+                routeNodeSQL = " where ";
+            }
+            return routeNodeSQL + "EN_DOC_HDR_T.DOC_HDR_ID = EN_RTE_NODE_INSTN_T.DOC_ID and EN_RTE_NODE_INSTN_T.ACTV_IND = 1 and EN_RTE_NODE_INSTN_T.RTE_NODE_ID " + operator + "'" + docRouteLevel.trim() + "' ";
+
+        }
+    }
+
+    protected static String getDocRouteStatusSql(String docRouteStatus, int whereClauseSize) {
+        String andClause = whereClauseSize > 0 ? " and " : " where ";
+
+        if ((docRouteStatus == null) || "".equals(docRouteStatus.trim())) {
+            return andClause + "EN_DOC_HDR_T.DOC_RTE_STAT_CD != '" + EdenConstants.ROUTE_HEADER_INITIATED_CD + "'";
+        } else {
+            return andClause + " EN_DOC_HDR_T.DOC_RTE_STAT_CD = '" + docRouteStatus.trim() + "'";
+        }
+    }
+
+
+    // ---- utility methods
+    
+    // TODO delyea - this was in class ANSISqlPlatform
+    private static String getDateSQL(String date, String time) {
+        // SQL 92 date literal syntax:
+        // http://www.stanford.edu/dept/itss/docs/oracle/9i/java.920/a96654/ref.htm#1005145
+        String d = date.replace('/', '-');
+        if (time == null) {
+            return "{d '" + d + "'}";    
+        } else {
+            return "{ts '" + d + " " + time + "'}"; 
+        }
+    }
+
+    // TODO delyea Fix this regex stuff?
+    private static String formatDate(String date) {
+        Perl5Util util = new Perl5Util();
+
+        String date_reg_ex_pass = "/^\\d{2}/\\d{2}/\\d{4}$|^\\d{2}-\\d{2}-\\d{4}$/";
+        String date_reg_ex_pass_split = "/(\\d{2})[/|-](\\d{2})[/|-](\\d{4})/";
+        String date_reg_ex_small = "/^\\d{1,2}/\\d{1,2}/(\\d\\d){1,2}$|^\\d{1,2}-\\d{1,2}-(\\d\\d){1,2}$/";
+        String date_reg_ex_small_split = "/(\\d{1,2})[/,-](\\d{1,2})[/,-]((\\d\\d){1,2})/";
+        String date_reg_ex_wholenum_small = "/^\\d{6}$/";
+        String date_reg_ex_wholenum_small_split = "/(\\d{2})(\\d{2})(\\d{2})/";
+        String date_reg_ex_wholenum_large = "/^\\d{8}$/";
+        String date_reg_ex_wholenum_large_split = "/(\\d{2})(\\d{2})(\\d{4})/";
+
+        // Check date formats and reformat to yyyy/MM/dd
+        // well formed MM/dd/yyyy
+        if (util.match(date_reg_ex_pass, date)) {
+            util.match(date_reg_ex_pass_split, date);
+
+            return util.group(3) + "/" + util.group(1) + "/" + util.group(2);
+
+            // small date format M/d/yy | 1-2d/1-2m/2or4y
+        } else if (util.match(date_reg_ex_small, date)) {
+            StringBuffer dateBuf = new StringBuffer();
+            util.match(date_reg_ex_small_split, date);
+
+            Integer year = new Integer(util.group(3));
+
+            if (year.intValue() <= 50) {
+                dateBuf.append("20").append(util.group(3)).append("/");
+            } else if (util.group(3).length() < 3) {
+                dateBuf.append("19").append(util.group(3)).append("/");
+            } else {
+                dateBuf.append(util.group(3)).append("/");
+            }
+
+            if (util.group(1).length() < 2) {
+                dateBuf.append("0").append(util.group(1)).append("/");
+            } else {
+                dateBuf.append(util.group(1)).append("/");
+            }
+
+            if (util.group(2).length() < 2) {
+                dateBuf.append("0").append(util.group(2));
+            } else {
+                dateBuf.append(util.group(2));
+            }
+
+            return dateBuf.toString();
+
+            // large number MMddyyyy
+        } else if (util.match(date_reg_ex_wholenum_large, date)) {
+            util.match(date_reg_ex_wholenum_large_split, date);
+
+            return new StringBuffer(util.group(3)).append("/").append(util.group(1)).append("/").append(util.group(2)).toString();
+
+            // small number MMddyy
+        } else if (util.match(date_reg_ex_wholenum_small, date)) {
+            util.match(date_reg_ex_wholenum_small_split, date);
+            StringBuffer dateBuf = new StringBuffer();
+            Integer year = new Integer(util.group(3));
+
+            if (year.intValue() < 50) {
+                dateBuf.append("20");
+            } else {
+                dateBuf.append("19");
+            }
+            dateBuf.append(util.group(3)).append("/").append(util.group(1)).append("/").append(util.group(2));
+            return dateBuf.toString();
+        } else {
+            return null;
+        }
+    }
+    
+    /**  
+     * TODO we should probably clean this up some, but we are going to exclude those KeyLabelPairs
+     * that have a null label.  This will happen in the case of Quickfinders which don't really
+     * represent criteria anyway.  Note however, that it is legal for the label to be the empty string.
+     * At some point we will probably need to do some more work to untangle this mess
+     */
+    private static void filterOutNonQueryAttributes(DocSearchCriteriaVO criteria) {
+        List newAttributes = new ArrayList();
+        for (Iterator iterator = criteria.getSearchableAttributes().iterator(); iterator.hasNext();) {
+            KeyLabelPair pair = (KeyLabelPair) iterator.next();
+            if (pair != null && pair.getKey() != null && pair.getLabel() != null) {
+                newAttributes.add(pair);
+            }
+        }
+        criteria.setSearchableAttributes(newAttributes);
+    }
+
+    private static StringBuffer startGeneratedPredicate(int whereClauseSize) {
+        StringBuffer dateSqlString = new StringBuffer().append(whereClauseSize > 0 ? " and " : " where ");
+        return dateSqlString;
+    }
+
+    public static String establishDateString(String fromDate, String toDate, String columnDbName, StringBuffer dateSqlString) {
+        dateSqlString.append(" " + columnDbName + " ");
+        if (fromDate != null && formatDate(fromDate) != null && toDate != null && formatDate(toDate) != null) {
+            return dateSqlString.append(" >= " + getDateSQL(formatDate(fromDate.trim()), null) + " and " + columnDbName + " <= " + getDateSQL(formatDate(toDate.trim()), "23:59:59")).toString();
+        } else {
+            if (fromDate != null && formatDate(fromDate) != null) {
+                return dateSqlString.append(" >= " + getDateSQL(formatDate(fromDate.trim()), null)).toString();
+            } else if (toDate != null && formatDate(toDate) != null) {
+                return dateSqlString.append(" <= " + getDateSQL(formatDate(toDate.trim()), "23:59:59")).toString();
+            } else {
+                return "";
+            }
+        }
+    }
+}
Index: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeLong.java
===================================================================
RCS file: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeLong.java
diff -N test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeLong.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeLong.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,49 @@
+package edu.iu.uis.eden.docsearch.xml;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeLongValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.lookupable.Row;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+import edu.iu.uis.eden.routetemplate.WorkflowAttributeValidationError;
+
+public class TestXMLSearchableAttributeLong implements SearchableAttribute {
+
+    private static final long serialVersionUID = 1309952222293029643L;
+
+    public static final String SEARCH_STORAGE_KEY = "testLongKey";
+    public static final Long SEARCH_STORAGE_VALUE = new Long(123456);
+
+    public String getSearchContent() {
+		return "TestXMLSearchableAttributeLong";
+	}
+
+	public List<SearchableAttributeValue> getSearchStorageValues(String docContent) {
+		List<SearchableAttributeValue> savs = new ArrayList<SearchableAttributeValue>();
+        SearchableAttributeLongValue sav = new SearchableAttributeLongValue();
+		sav.setRouteHeader(new DocumentRouteHeaderValue());
+        sav.setSearchableAttributeKey(SEARCH_STORAGE_KEY);
+        sav.setSearchableAttributeValue(SEARCH_STORAGE_VALUE);
+		savs.add(sav);
+		return savs;
+	}
+
+	public List<Row> getSearchingRows() {
+		Row row = new Row();
+		row.setNumberOfGroupRows(99);
+		List<Row> rows = new ArrayList<Row>();
+		rows.add(row);
+		return rows;
+	}
+
+	public List<WorkflowAttributeValidationError> validateUserSearchInputs(Map<Object, String> paramMap) {
+		List<WorkflowAttributeValidationError> waves = new ArrayList<WorkflowAttributeValidationError>();
+		WorkflowAttributeValidationError wave = new WorkflowAttributeValidationError("key1", "message1");
+		waves.add(wave);
+		return waves;
+	}
+}
Index: src/edu/iu/uis/eden/docsearch/QueryComponent.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/QueryComponent.java
diff -N src/edu/iu/uis/eden/docsearch/QueryComponent.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/QueryComponent.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,67 @@
+package edu.iu.uis.eden.docsearch;
+
+public class QueryComponent {
+
+	private String selectSql = "";
+	private String fromSql = "";
+	private String whereSql = "";
+	
+    public QueryComponent() {
+        super();
+    }
+
+    /**
+     * @param selectSql
+     * @param fromSql
+     * @param whereSql
+     */
+    public QueryComponent(String selectSql, String fromSql, String whereSql) {
+        super();
+        this.selectSql = selectSql;
+        this.fromSql = fromSql;
+        this.whereSql = whereSql;
+    }
+
+    /**
+	 * @return Returns the tables.
+	 */
+	public String getFromSql() {
+		return fromSql;
+	}
+
+	/**
+	 * @return Returns the sql.
+	 */
+	public String getSelectSql() {
+		return selectSql;
+	}
+
+	/**
+	 * @return Returns the tempSql.
+	 */
+	public String getWhereSql() {
+		return whereSql;
+	}
+
+	/**
+	 * @param tables The tables to set.
+	 */
+	public void setFromSql(String tables) {
+		this.fromSql = tables;
+	}
+
+	/**
+	 * @param sql The sql to set.
+	 */
+	public void setSelectSql(String sql) {
+		this.selectSql = sql;
+	}
+
+	/**
+	 * @param tempSql The tempSql to set.
+	 */
+	public void setWhereSql(String tempSql) {
+		this.whereSql = tempSql;
+	}
+	
+}
Index: src/edu/iu/uis/eden/docsearch/DocumentSearchExecutor.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/DocumentSearchExecutor.java
diff -N src/edu/iu/uis/eden/docsearch/DocumentSearchExecutor.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/DocumentSearchExecutor.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,50 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.List;
+
+import edu.iu.uis.eden.WorkflowServiceErrorImpl;
+import edu.iu.uis.eden.exception.EdenUserNotFoundException;
+
+/**
+ *
+ * @author delyea
+ */
+public interface DocumentSearchExecutor {
+    public static class DocSearchResult {
+        protected String sql;
+        protected int searchableAttributeCount;
+        public DocSearchResult(String sql, int count) {
+            this.sql = sql;
+            this.searchableAttributeCount = count;
+        }
+        public String getSql() {
+            return sql;
+        }
+        public int getSearchableAttributeCount() {
+            return searchableAttributeCount;
+        }
+    }
+    
+//    public List validateGlobalCriteria(WorkflowUser user, DocSearchCriteriaVO criteria);
+    public List<WorkflowServiceErrorImpl> validateSearchableAttributes(DocSearchCriteriaVO criteria);
+    public DocSearchResult executeSearch(DocSearchCriteriaVO criteria) throws EdenUserNotFoundException;
+    public List<DocSearchVO> processResultSet(ResultSet resultSet,DocSearchCriteriaVO criteria,int searchableAttributeCount) throws EdenUserNotFoundException, SQLException;
+}
Index: test/src/edu/iu/uis/eden/docsearch/xml/SearchableAttributeTest.java
===================================================================
RCS file: test/src/edu/iu/uis/eden/docsearch/xml/SearchableAttributeTest.java
diff -N test/src/edu/iu/uis/eden/docsearch/xml/SearchableAttributeTest.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ test/src/edu/iu/uis/eden/docsearch/xml/SearchableAttributeTest.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,575 @@
+package edu.iu.uis.eden.docsearch.xml;
+
+import java.util.Calendar;
+import java.util.Iterator;
+import java.util.List;
+
+import org.junit.Test;
+
+import edu.iu.uis.eden.KEWServiceLocator;
+import edu.iu.uis.eden.clientapp.WorkflowDocument;
+import edu.iu.uis.eden.clientapp.vo.NetworkIdVO;
+import edu.iu.uis.eden.clientapp.vo.WorkflowAttributeDefinitionVO;
+import edu.iu.uis.eden.docsearch.DocSearchCriteriaVO;
+import edu.iu.uis.eden.docsearch.DocumentSearchService;
+import edu.iu.uis.eden.docsearch.SearchableAttributeDateTimeValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeFloatValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeLongValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeStringValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+import edu.iu.uis.eden.test.WorkflowTestCase;
+import edu.iu.uis.eden.user.AuthenticationUserId;
+import edu.iu.uis.eden.user.UserService;
+import edu.iu.uis.eden.user.WorkflowUser;
+import edu.iu.uis.eden.util.KeyLabelPair;
+
+/**
+ * Tests the StandardGenericXMLSearchableAttribute.
+ * 
+ * KULWF-654: Tests the resolution to this issue by configuring a CustomActionListAttribute as well as a
+ * searchable attribute.
+ */
+public class SearchableAttributeTest extends WorkflowTestCase {
+    
+    protected void loadTestData() throws Exception {
+        loadXmlFile("XmlConfig.xml");
+    }
+
+//    private StandardGenericXMLSearchableAttribute getAttribute(String name) {
+//        String attName = name;
+//        if (attName == null) {
+//            attName = "XMLSearchableAttribute";
+//        }
+//        RuleAttribute ruleAttribute = KEWServiceLocator.getRuleAttributeService().findByName(attName);
+//        
+//        StandardGenericXMLSearchableAttribute attribute = new StandardGenericXMLSearchableAttribute();
+//        attribute.setRuleAttribute(ruleAttribute);
+//        return attribute;
+//    }
+
+    @Test public void testRouteDocumentWithSearchableAttribute() throws Exception {
+        String documentTypeName = "SearchDocType3";
+        String userNetworkId = "rkirkend";
+        String stringKey = "givenname";
+        String stringValue = "jack";
+
+        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO(userNetworkId), documentTypeName);
+        WorkflowAttributeDefinitionVO givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+
+        workflowDocument.setApplicationContent("<test></test>");
+        givennameXMLDef.addProperty(stringKey, stringValue);
+        workflowDocument.addSearchableDefinition(givennameXMLDef);
+        workflowDocument.setTitle("Routing style");
+        workflowDocument.routeDocument("routing this document.");
+        
+        workflowDocument = new WorkflowDocument(new NetworkIdVO(userNetworkId), workflowDocument.getRouteHeaderId());
+        DocumentRouteHeaderValue doc = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+        assertEquals("Wrong number of searchable attributes", 4, doc.getSearchableAttributeValues().size());
+        for (Iterator iter = doc.getSearchableAttributeValues().iterator(); iter.hasNext();) {
+            SearchableAttributeValue attributeValue = (SearchableAttributeValue) iter.next();
+            if (attributeValue instanceof SearchableAttributeStringValue) {
+                SearchableAttributeStringValue realValue = (SearchableAttributeStringValue) attributeValue;
+                assertEquals("The only String attribute that should have been added has key '" + stringKey + "'", stringKey, realValue.getSearchableAttributeKey());
+                assertEquals("The only String attribute that should have been added has value '" + stringValue + "'", stringValue, realValue.getSearchableAttributeValue());
+            } else if (attributeValue instanceof SearchableAttributeLongValue) {
+                SearchableAttributeLongValue realValue = (SearchableAttributeLongValue) attributeValue;
+                assertEquals("The only Long attribute that should have been added has key '" + TestXMLSearchableAttributeLong.SEARCH_STORAGE_KEY + "'", TestXMLSearchableAttributeLong.SEARCH_STORAGE_KEY, realValue.getSearchableAttributeKey());
+                assertEquals("The only Long attribute that should have been added has value '" + TestXMLSearchableAttributeLong.SEARCH_STORAGE_VALUE + "'", TestXMLSearchableAttributeLong.SEARCH_STORAGE_VALUE, realValue.getSearchableAttributeValue());
+            } else if (attributeValue instanceof SearchableAttributeFloatValue) {
+                SearchableAttributeFloatValue realValue = (SearchableAttributeFloatValue) attributeValue;
+                assertEquals("The only Float attribute that should have been added has key '" + TestXMLSearchableAttributeFloat.SEARCH_STORAGE_KEY + "'", TestXMLSearchableAttributeFloat.SEARCH_STORAGE_KEY, realValue.getSearchableAttributeKey());
+                assertEquals("The only Float attribute that should have been added has value '" + TestXMLSearchableAttributeFloat.SEARCH_STORAGE_VALUE + "'", TestXMLSearchableAttributeFloat.SEARCH_STORAGE_VALUE, realValue.getSearchableAttributeValue());
+            } else if (attributeValue instanceof SearchableAttributeDateTimeValue) {
+                SearchableAttributeDateTimeValue realValue = (SearchableAttributeDateTimeValue) attributeValue;
+                assertEquals("The only DateTime attribute that should have been added has key '" + TestXMLSearchableAttributeDateTime.SEARCH_STORAGE_KEY + "'", TestXMLSearchableAttributeDateTime.SEARCH_STORAGE_KEY, realValue.getSearchableAttributeKey());
+                Calendar testDate = Calendar.getInstance();
+                testDate.setTimeInMillis(TestXMLSearchableAttributeDateTime.SEARCH_STORAGE_VALUE_IN_MILLS);
+                testDate.set(Calendar.MILLISECOND, 0);
+                Calendar attributeDate = Calendar.getInstance();
+                attributeDate.setTimeInMillis(realValue.getSearchableAttributeValue().getTime());
+                testDate.set(Calendar.MILLISECOND, 0);
+                assertEquals("The only DateTime attribute that should have been added has value '" + TestXMLSearchableAttributeDateTime.SEARCH_STORAGE_VALUE + "'", testDate, attributeDate);
+            } else {
+                fail("Searchable Attribute Value base class should be one of the four checked always");
+            }
+        }
+
+        DocumentSearchService docSearchService = (DocumentSearchService) KEWServiceLocator.getService(KEWServiceLocator.DOCUMENT_SEARCH_SERVICE);
+        UserService userService = (UserService) KEWServiceLocator.getService(KEWServiceLocator.USER_SERVICE);
+
+        WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId(userNetworkId));
+        DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+        criteria.setDocTypeFullName("SearchDocType");
+        criteria.addSearchableAttribute(new KeyLabelPair(stringKey, stringValue));
+        List searchResults = docSearchService.getList(user, criteria);
+
+        assertEquals("Search results should have one document.", 1, searchResults.size());
+
+        DocSearchCriteriaVO criteria2 = new DocSearchCriteriaVO();
+        criteria2.setDocTypeFullName("SearchDocType");
+        criteria2.addSearchableAttribute(new KeyLabelPair(stringKey, "fred"));
+        List searchResults2 = docSearchService.getList(user, criteria2);
+
+        assertEquals("Search results should be empty.", 0, searchResults2.size());
+
+        DocSearchCriteriaVO criteria3 = new DocSearchCriteriaVO();
+        criteria3.setDocTypeFullName("SearchDocType");
+        criteria3.addSearchableAttribute(new KeyLabelPair("fakeproperty", "doesntexist"));
+        List searchResults3 = docSearchService.getList(user, criteria3);
+        assertEquals("Search results should be empty.", 0, searchResults3.size());
+
+        // TODO Implement searches for Long, Float, and DateTime searchable attribute types once KeyLabelPair corrected
+    }
+
+//    /**
+//     * Tests searching with client-generated documentContent which is just malformed XML.
+//     * @throws WorkflowException
+//     */
+//    @Test public void testRouteDocumentWithMalformedSearchableAttributeContent() throws WorkflowException {
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//
+//        workflowDocument.setApplicationContent("hey, <I'm Not ] Even & XML");
+//
+//        workflowDocument.setTitle("Routing style");
+//        try {
+//            workflowDocument.routeDocument("routing this document.");
+//            fail("routeDocument succeeded with malformed XML");
+//        } catch (WorkflowException we) {
+//            // An exception is thrown in BeanConverter/XmlUtils.appendXml at the time of this writing
+//            // so I will just assume that is the expected behavior
+//        }
+//    }
+//
+//    /**
+//     * Tests searching with client-generated documentContent which will not match what the SearchableAttribute
+//     * is configured to look for.  This should pass with zero search results, but should not throw an exception.
+//     * @throws Exception
+//     */
+//    @Test public void testRouteDocumentWithInvalidSearchableAttributeContent() throws Exception {
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//
+//        workflowDocument.setApplicationContent("<documentContent><searchableContent><garbage>" +
+//                                               "<blah>not going to match anything</blah>" +
+//                                               "</garbage></searchableContent></documentContent>");
+//
+//        workflowDocument.setTitle("Routing style");
+//        workflowDocument.routeDocument("routing this document.");
+//
+//        DocumentSearchService docSearchService = (DocumentSearchService) KEWServiceLocator.getService(KEWServiceLocator.DOCUMENT_SEARCH_SERVICE);
+//        UserService userService = (UserService) KEWServiceLocator.getService(KEWServiceLocator.USER_SERVICE);
+//
+//        WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId("rkirkend"));
+//        DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+//        criteria.setDocTypeFullName("SearchDocType");
+//        criteria.addSearchableAttribute(new KeyLabelPair("givenname", "jack"));
+//        List searchResults = docSearchService.getList(user, criteria);
+//
+//        assertEquals("Search results should be empty.", 0, searchResults.size());
+//
+//        DocSearchCriteriaVO criteria2 = new DocSearchCriteriaVO();
+//        criteria2.setDocTypeFullName("SearchDocType");
+//        criteria2.addSearchableAttribute(new KeyLabelPair("givenname", "fred"));
+//        List searchResults2 = docSearchService.getList(user, criteria2);
+//
+//        assertEquals("Search results should be empty.", 0, searchResults2.size());
+//
+//        DocSearchCriteriaVO criteria3 = new DocSearchCriteriaVO();
+//        criteria3.setDocTypeFullName("SearchDocType");
+//        criteria3.addSearchableAttribute(new KeyLabelPair("fakeproperty", "doesntexist"));
+//        List searchResults3 = docSearchService.getList(user, criteria3);
+//        assertEquals("Search results should be empty.", 0, searchResults3.size());
+//    }
+//
+//    /**
+//     * Tests searching with client-generated documentContent which will not match what the SearchableAttribute
+//     * is configured to look for.  This should pass with zero search results, but should not throw an exception.
+//     * @throws Exception
+//     */
+//    @Test public void testRouteDocumentWithMoreInvalidSearchableAttributeContent() throws Exception {
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//
+//        workflowDocument.setApplicationContent("<documentContent><NOTsearchableContent><garbage>" +
+//                                               "<blah>not going to match anything</blah>" +
+//                                               "</garbage></NOTsearchableContent></documentContent>");
+//
+//        workflowDocument.setTitle("Routing style");
+//        workflowDocument.routeDocument("routing this document.");
+//
+//        DocumentSearchService docSearchService = (DocumentSearchService) KEWServiceLocator.getService(KEWServiceLocator.DOCUMENT_SEARCH_SERVICE);
+//        UserService userService = (UserService) KEWServiceLocator.getService(KEWServiceLocator.USER_SERVICE);
+//
+//        WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId("rkirkend"));
+//        DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+//        criteria.setDocTypeFullName("SearchDocType");
+//        criteria.addSearchableAttribute(new KeyLabelPair("givenname", "jack"));
+//        List searchResults = docSearchService.getList(user, criteria);
+//
+//        assertEquals("Search results should be empty.", 0, searchResults.size());
+//
+//        DocSearchCriteriaVO criteria2 = new DocSearchCriteriaVO();
+//        criteria2.setDocTypeFullName("SearchDocType");
+//        criteria2.addSearchableAttribute(new KeyLabelPair("givenname", "fred"));
+//        List searchResults2 = docSearchService.getList(user, criteria2);
+//
+//        assertEquals("Search results should be empty.", 0, searchResults2.size());
+//
+//        DocSearchCriteriaVO criteria3 = new DocSearchCriteriaVO();
+//        criteria3.setDocTypeFullName("SearchDocType");
+//        criteria3.addSearchableAttribute(new KeyLabelPair("fakeproperty", "doesntexist"));
+//        List searchResults3 = docSearchService.getList(user, criteria3);
+//        assertEquals("Search results should be empty.", 0, searchResults3.size());
+//    }
+//
+//    @Test public void testAppendingSeachContentWithSearchableAttribute() throws Exception {
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//        WorkflowAttributeDefinitionVO givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//
+//        givennameXMLDef.addProperty("givenname", "jack");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//
+//        workflowDocument.setTitle("Routing Rowdy Piper");
+//        workflowDocument.routeDocument("routing this document.");
+//
+//        // look up document and verify the search valu is there
+//        DocumentRouteHeaderValue doc = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//        assertEquals("Wrong number of searchable attributes", 1, doc.getSearchableAttributeValues().size());
+//
+//        workflowDocument = new WorkflowDocument(new NetworkIdVO("jhopf"), workflowDocument.getRouteHeaderId());
+//        givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//
+//        givennameXMLDef.addProperty("givenname", "jill");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//        workflowDocument.approve("");
+//
+//        doc = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//        assertEquals("Wrong number of searchable attributes", 2, doc.getSearchableAttributeValues().size());
+//
+//        // check for jack and jill
+//        boolean foundJack = false;
+//        boolean foundJill = false;
+//        for (Iterator iter = doc.getSearchableAttributeValues().iterator(); iter.hasNext();) {
+//            SearchableAttributeValue searchableValue = (SearchableAttributeValue) iter.next();
+//            if (searchableValue.getSearchableAttributeStringValue().equals("jack")) {
+//                foundJack = true;
+//            } else if (searchableValue.getSearchableAttributeStringValue().equals("jill")) {
+//                foundJill = true;
+//            }
+//        }
+//        
+//        assertTrue("Didn't find searchable attribute value 'jack'", foundJack);
+//        assertTrue("Didn't find searchable attribute value 'jill'", foundJill);
+//    }
+//    
+//    @Test public void testNoSearchableContentAction() throws Exception {
+//    	WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//    	workflowDocument.saveDocument("");
+//    	
+//    	//verify that a searchable attribute exists even though 
+//    	DocumentRouteHeaderValue document = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//    	assertEquals("Should have a searchable attribute key", 1, document.getSearchableAttributeValues().size());
+//    	assertEquals("Searchable attribute key should be givenname", "givenname", ((SearchableAttributeValue)document.getSearchableAttributeValues().get(0)).getSearchableAttributeKey());
+//    	
+//    	
+//    	WorkflowDocument workflowDocument2 = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType2");
+//    	workflowDocument2.saveDocument("");
+//    	
+//    	DocumentRouteHeaderValue document2 = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//    	assertEquals("Should have a searchable attribute key", 1, document2.getSearchableAttributeValues().size());
+//    	assertEquals("Searchable attribute key should be givenname", "givenname", ((SearchableAttributeValue)document2.getSearchableAttributeValues().get(0)).getSearchableAttributeKey());
+//    }
+//    
+//    protected String getAltAppContextFile() {
+//    	if (this.getName().equals("testIndexingRequeue")) {
+//    		return "edu/iu/uis/eden/docsearch/xml/SearchableAttributeProcessorSpring.xml";
+//    	} else {
+//    		return null;
+//    	}
+//        
+//    }
+//    
+//    //this is testing that the code being called in the event of an OptimisticLockException happening in the 
+//    //SearchableAttributeProcessor is working.  An actual OptimisticLockException is not being created because it's 
+//    //too much of a pain in this single threaded testing env.
+////    public void testIndexingRequeue() throws Exception {
+////    	Long routeHeaderId = new Long(1);
+////    	
+////        PersistedMessage searchIndexingWork = new PersistedMessage();
+////        searchIndexingWork.setProcessorClassName(SearchableAttributeProcessor.class.getName());
+////        searchIndexingWork.setRouteHeaderId(routeHeaderId);
+////        searchIndexingWork.setQueuePriority(new Integer(6));
+////        searchIndexingWork.setQueueStatus("Q");
+////        searchIndexingWork.setQueueDate(new Timestamp(System.currentTimeMillis()));
+////        SpringServiceLocator.getRouteQueueService().save(searchIndexingWork);
+////        
+////        new SearchableAttributeProcessor().requeueIndexing(searchIndexingWork);
+////        
+////        Collection queueEntries = SpringServiceLocator.getRouteQueueService().findAll();
+////        assertEquals("should have 2 queue entries", 2, queueEntries.size());
+////        for (Iterator iter = queueEntries.iterator(); iter.hasNext();) {
+////			PersistedMessage queueEntry = (PersistedMessage) iter.next();
+////			//all entries should have certain similarities
+////			assertEquals("Wrong routeHeaderid", searchIndexingWork.getRouteHeaderId(), queueEntry.getRouteHeaderId());
+////			assertEquals("Wrong queue status", searchIndexingWork.getQueueStatus(), queueEntry.getQueueStatus());
+////			assertEquals("Wrong queue priority", searchIndexingWork.getQueuePriority(), queueEntry.getQueuePriority());
+////		}
+////    }
+//    
+//    @Test public void testClearingSearchContentWithSearchableAttribute() throws Exception {
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocType");
+//        WorkflowAttributeDefinitionVO givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//
+//        givennameXMLDef.addProperty("givenname", "jack");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//
+//        workflowDocument.setTitle("Routing Rowdy Piper");
+//        workflowDocument.routeDocument("routing this document.");
+//
+//        // look up document and verify the search valu is there
+//        DocumentRouteHeaderValue doc = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//        assertEquals("Wrong number of searchable attributes", 1, doc.getSearchableAttributeValues().size());
+//
+//        workflowDocument = new WorkflowDocument(new NetworkIdVO("jhopf"), workflowDocument.getRouteHeaderId());
+//        workflowDocument.clearSearchableContent();
+//        
+//        givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//        givennameXMLDef.addProperty("givenname", "dukeboys");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//        
+//        givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//        givennameXMLDef.addProperty("givenname", "luke duke");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//        
+//        givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLSearchableAttribute");
+//        givennameXMLDef.addProperty("givenname", "bo duke");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//        
+//        workflowDocument.approve("");
+//
+//        doc = KEWServiceLocator.getRouteHeaderService().getRouteHeader(workflowDocument.getRouteHeaderId());
+//        assertEquals("Wrong number of searchable attributes", 3, doc.getSearchableAttributeValues().size());
+//
+//        // check for jack and jill
+//        boolean foundLuke = false;
+//        boolean foundBo = false;
+//        boolean foundDukeBoys = false;
+//        for (Iterator iter = doc.getSearchableAttributeValues().iterator(); iter.hasNext();) {
+//            SearchableAttributeValue searchableValue = (SearchableAttributeValue) iter.next();
+//            if (searchableValue.getSearchableAttributeStringValue().equals("dukeboys")) {
+//                foundDukeBoys = true;
+//            } else if (searchableValue.getSearchableAttributeStringValue().equals("luke duke")) {
+//                foundLuke = true;
+//            } else if (searchableValue.getSearchableAttributeStringValue().equals("bo duke")) {
+//                foundBo = true;
+//            }
+//        }
+//        
+//        assertTrue("Didn't find searchable attribute value 'luke duke'", foundLuke);
+//        assertTrue("Didn't find searchable attribute value 'bo duke'", foundBo);
+//        assertTrue("Didn't find searchable attribute value 'dukeboys'", foundDukeBoys);    
+//    }
+//
+//    /*
+//     * Test method for 'edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttribute.getSearchContent()'
+//     */
+//    @Test public void testGetSearchContent() throws Exception {
+//        StandardGenericXMLSearchableAttribute attribute = getAttribute(null);
+//        //try {
+//            Map paramMap = new HashMap();
+//            paramMap.put("givenname", "jack");
+//
+//            attribute.setParamMap(paramMap);
+//
+//            String searchContent = attribute.getSearchContent();
+//            assertTrue("searchContent was not found.", searchContent != null && searchContent.length() > 0);
+//
+//            XPath xpath = XPathFactory.newInstance().newXPath();
+//            Element foundDocContent = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(new BufferedReader(new StringReader(searchContent)))).getDocumentElement();
+//
+//            String findStuff = "//putWhateverWordsIwantInsideThisTag/givenname/value";
+//            assertTrue("Search content does not contain field givenname with a value of jack.", "jack".equals(xpath.evaluate(findStuff, foundDocContent, XPathConstants.STRING)));
+//        //} catch (Exception e) {
+//        //    e.printStackTrace();
+//        //}
+//    }
+//
+//    /*
+//     * Test method for 'edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttribute.getSearchStorageValues(String)'
+//     */
+//    @Test public void testGetSearchStorageValues() {
+//        String documentcontent = "<documentContent>" + "<searchableContent>" + "<putWhateverWordsIwantInsideThisTag>" + "<givenname>" + "<value>jack</value>" + "</givenname>" + "</putWhateverWordsIwantInsideThisTag>" + "</searchableContent>" + "</documentContent>";
+//
+//        StandardGenericXMLSearchableAttribute attribute = getAttribute(null);
+//        List values = attribute.getSearchStorageValues(documentcontent);
+//
+//        assertTrue("There should be one search storage value", values.size() == 1);
+//        for (Iterator iter = values.iterator(); iter.hasNext();) {
+//            SearchableAttributeValue value = (SearchableAttributeValue) iter.next();
+//            assertTrue("Key should be givenname", "givenname".equals(value.getSearchableAttributeKey()));
+//            assertTrue("Value should be jack", "jack".equals(value.getSearchableAttributeStringValue()));
+//        }
+//    }
+//
+//    /*
+//     * Test method for 'edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttribute.getSearchingRows()'
+//     */
+//    @Test public void testGetSearchingRows() {
+//        StandardGenericXMLSearchableAttribute searchAttribute = getAttribute(null);
+//        assertTrue("Invalid number of search rows", searchAttribute.getSearchingRows().size() == 1);
+//        
+//        //we really just want this to load without exploding
+//        List searchRows = getAttribute("BlankDropDownSearchAttribute").getSearchingRows();
+//        assertEquals("Invalid number of search rows", 1, searchRows.size());
+//        Row row = (Row) searchRows.get(0);
+//        assertEquals("Should be 5 valid values", 5, row.getField(0).getFieldValidValues().size());
+//    }
+//
+//    /*
+//     * Test method for 'edu.iu.uis.eden.docsearch.xml.StandardGenericXMLSearchableAttribute.validateUserSearchInputs(Map)'
+//     */
+//    @Ignore("This test needs to be implemented!")
+//    @Test  public void testValidateUserSearchInputs() {
+//
+//    }
+//    
+//    /**
+//     * Tests the XStreamSafeEvaluator against searchable attributes to resolve EN-63 and KULWF-723.
+//     * 
+//     * This test is pretty much just a copy of testRouteDocumentWithSearchableAttribute using a 
+//     * different document type which defines the same xpath expression, only with embedded
+//     * XStream "reference" attributes in the XML.
+//     */
+//    @Test public void testRouteDocumentWithXStreamSearchableAttribute() throws Exception {
+//
+//        WorkflowDocument workflowDocument = new WorkflowDocument(new NetworkIdVO("rkirkend"), "SearchDocTypeXStream");
+//        WorkflowAttributeDefinitionVO givennameXMLDef = new WorkflowAttributeDefinitionVO("XMLXStreamSearchableAttribute");
+//
+//        workflowDocument.setApplicationContent("<test></test>");
+//        
+//        
+//        givennameXMLDef.addProperty("givenname", "jack");
+//        workflowDocument.addSearchableDefinition(givennameXMLDef);
+//
+//        workflowDocument.setTitle("Routing style");
+//        workflowDocument.routeDocument("routing this document.");
+//
+//        DocumentSearchService docSearchService = (DocumentSearchService) KEWServiceLocator.getService(KEWServiceLocator.DOCUMENT_SEARCH_SERVICE);
+//        UserService userService = (UserService) KEWServiceLocator.getService(KEWServiceLocator.USER_SERVICE);
+//
+//        WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId("rkirkend"));
+//        DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+//        criteria.setDocTypeFullName("SearchDocTypeXStream");
+//        criteria.addSearchableAttribute(new KeyLabelPair("givenname", "jack"));
+//        List searchResults = docSearchService.getList(user, criteria);
+//
+//        assertEquals("Search results should have one document.", 1, searchResults.size());
+//
+//        DocSearchCriteriaVO criteria2 = new DocSearchCriteriaVO();
+//        criteria2.setDocTypeFullName("SearchDocTypeXStream");
+//        criteria2.addSearchableAttribute(new KeyLabelPair("givenname", "fred"));
+//        List searchResults2 = docSearchService.getList(user, criteria2);
+//
+//        assertEquals("Search results should be empty.", 0, searchResults2.size());
+//
+//        DocSearchCriteriaVO criteria3 = new DocSearchCriteriaVO();
+//        criteria3.setDocTypeFullName("SearchDocTypeXStream");
+//        criteria3.addSearchableAttribute(new KeyLabelPair("fakeproperty", "doesntexist"));
+//        List searchResults3 = docSearchService.getList(user, criteria3);
+//        assertEquals("Search results should be empty.", 0, searchResults3.size());
+//
+//    }
+//    
+//    
+//    /**
+//     * Tests the resolution to issues EN-95, KULWF-757, KULOWF-52 whereby the use of a quickfinder is causing
+//     * NullPointers when searching for documents.
+//     */
+//    @Test public void testSearchableAttributeWithQuickfinder() throws Exception {
+//    	 WorkflowDocument document = new WorkflowDocument(new NetworkIdVO("rkirkend"), "AttributeWithQuickfinderDocType");
+//         
+//    	 // define the chart for the searchable attribute
+//    	 WorkflowAttributeDefinitionVO chartDef = new WorkflowAttributeDefinitionVO("SearchableAttributeWithQuickfinder");
+//         chartDef.addProperty("chart", "BL");
+//         document.addSearchableDefinition(chartDef);
+//
+//         // save the document
+//         document.setTitle("Routin' with style");
+//         document.saveDocument("Savin' this document.");
+//
+//         // prepare to search
+//         DocumentSearchService docSearchService = (DocumentSearchService) KEWServiceLocator.getService(KEWServiceLocator.DOCUMENT_SEARCH_SERVICE);
+//         UserService userService = (UserService) KEWServiceLocator.getService(KEWServiceLocator.USER_SERVICE);
+//         WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId("rkirkend"));
+//         
+//         // execute the search by our chart, we should see one result
+//         DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+//         criteria.setDocTypeFullName("AttributeWithQuickfinderDocType");
+//         criteria.addSearchableAttribute(new KeyLabelPair("chart", "BL"));
+//         List searchResults = docSearchService.getList(user, criteria);
+//         assertEquals("Search results should have one document.", 1, searchResults.size());
+//         DocSearchVO result = (DocSearchVO)searchResults.get(0);
+//         assertEquals("Wrong document in search results.", document.getRouteHeaderId(), result.getRouteHeaderId());
+//
+//         // search with no searchable attribute criteria, should return our document as well
+//         criteria = new DocSearchCriteriaVO();
+//         criteria.setDocTypeFullName("AttributeWithQuickfinderDocType");
+//         searchResults = docSearchService.getList(user, criteria);
+//         assertEquals("Search results should have one document.", 1, searchResults.size());
+//         result = (DocSearchVO)searchResults.get(0);
+//         assertEquals("Wrong document in search results.", document.getRouteHeaderId(), result.getRouteHeaderId());
+//         
+//    }
+//    
+//    /**
+//     * Tests that the hidding of fields and columns works properly to resolve EN-53.
+//     * 
+//     * TODO this is currently commented out because we can't test this properly through the unit
+//     * test since the filtering of the column actually happens in the web-tier.  Shoudl this be
+//     * the case?  Maybe we need to re-examine when we refactor document search.
+//     */
+////    public void testSearchableAttributeWithHiddens() throws Exception {
+////    	// for the following document, the chart field should not show up in the result set and the org field
+////    	// should not show up in the criteriaw
+////    	String docType = "AttributeWithHiddensDocType";
+////    	String attributeName = "SearchableAttributeWithHiddens";
+////    	WorkflowDocument document = new WorkflowDocument(new NetworkIdVO("rkirkend"), docType);
+////        
+////   	 	// define the chart for the searchable attribute
+////   	 	WorkflowAttributeDefinitionVO chartDef = new WorkflowAttributeDefinitionVO(attributeName);
+////        chartDef.addProperty("chart", "BL");
+////        chartDef.addProperty("org", "ARSC");
+////        document.addSearchableDefinition(chartDef);
+////
+////        // save the document
+////        document.setTitle("Routin' with style");
+////        document.saveDocument("Savin' this document.");
+////
+////        // prepare to search
+////        DocumentSearchService docSearchService = (DocumentSearchService) SpringServiceLocator.getService(SpringServiceLocator.DOCUMENT_SEARCH_SERVICE);
+////        UserService userService = (UserService) SpringServiceLocator.getService(SpringServiceLocator.USER_SERVICE);
+////        WorkflowUser user = userService.getWorkflowUser(new AuthenticationUserId("rkirkend"));
+////        
+////        // execute the search by our chart, we should see one result
+////        DocSearchCriteriaVO criteria = new DocSearchCriteriaVO();
+////        criteria.setDocTypeFullName(docType);
+////        criteria.addSearchableAttribute(new KeyLabelPair("chart", "BL"));
+////        List searchResults = docSearchService.getList(user, criteria);
+////        assertEquals("Search results should have one document.", 1, searchResults.size());
+////        DocSearchVO result = (DocSearchVO)searchResults.get(0);
+////        assertEquals("Wrong document in search results.", document.getRouteHeaderId(), result.getRouteHeaderId());
+////        // also check that the chart field is not in the result set and the org field is
+////        boolean foundOrg = false;
+////        List searchableAttributes = result.getSearchableAttributes();
+////        for (Iterator iter = searchableAttributes.iterator(); iter.hasNext();) {
+////			KeyLabelPair data = (KeyLabelPair) iter.next();
+////			if (data.getKey().equals("chart")) {
+////				fail("The chart column should not be in the result set!");
+////			} else if (data.getKey().equals("org")) {
+////				assertEquals("Wrong org code.", "ARSC", data.getLabel());
+////				foundOrg = true;
+////			}	
+////		}
+////        assertTrue("We should have found the org code in our result set!", foundOrg);
+////    }
+//
+}
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeDateTimeValue.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/SearchableAttributeDateTimeValue.java
diff -N src/edu/iu/uis/eden/docsearch/SearchableAttributeDateTimeValue.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeDateTimeValue.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,110 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import java.sql.Timestamp;
+
+import edu.iu.uis.eden.WorkflowPersistable;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+
+/**
+ *
+ * @author delyea
+ */
+public class SearchableAttributeDateTimeValue implements WorkflowPersistable, SearchableAttributeValue {
+
+    private static final long serialVersionUID = 3045621112943214772L;
+
+    private Long searchableAttributeValueId;
+    private String searchableAttributeKey;
+    private Timestamp searchableAttributeValue;
+    protected String ojbConcreteClass; // attribute needed for OJB polymorphism - do not alter!
+
+    private Long routeHeaderId;
+    private DocumentRouteHeaderValue routeHeader;
+
+    /**
+     * Default constructor.
+     */
+    public SearchableAttributeDateTimeValue() {
+        super();
+        this.ojbConcreteClass = this.getClass().getName();
+    }
+
+    public String getOjbConcreteClass() {
+        return ojbConcreteClass;
+    }
+
+    public void setOjbConcreteClass(String ojbConcreteClass) {
+        this.ojbConcreteClass = ojbConcreteClass;
+    }
+
+    public DocumentRouteHeaderValue getRouteHeader() {
+        return routeHeader;
+    }
+
+    public void setRouteHeader(DocumentRouteHeaderValue routeHeader) {
+        this.routeHeader = routeHeader;
+    }
+
+    public Long getRouteHeaderId() {
+        return routeHeaderId;
+    }
+
+    public void setRouteHeaderId(Long routeHeaderId) {
+        this.routeHeaderId = routeHeaderId;
+    }
+
+    public String getSearchableAttributeKey() {
+        return searchableAttributeKey;
+    }
+
+    public void setSearchableAttributeKey(String searchableAttributeKey) {
+        this.searchableAttributeKey = searchableAttributeKey;
+    }
+
+    public Timestamp getSearchableAttributeValue() {
+        return searchableAttributeValue;
+    }
+
+    public void setSearchableAttributeValue(Timestamp searchableAttributeValue) {
+        this.searchableAttributeValue = searchableAttributeValue;
+    }
+
+    public Long getSearchableAttributeValueId() {
+        return searchableAttributeValueId;
+    }
+
+    public void setSearchableAttributeValueId(Long searchableAttributeValueId) {
+        this.searchableAttributeValueId = searchableAttributeValueId;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.WorkflowPersistable#copy(boolean)
+     */
+    public Object copy(boolean preserveKeys) {
+        return null;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.SearchableAttributeValue#getSearchableAttributeStringValue()
+     */
+    public String getSearchableAttributeStringValue() {
+        // TODO delyea: date formatter... link to SQLUtil class ??
+        return this.getSearchableAttributeValue().toString();
+    }
+}
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeFloatValue.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/SearchableAttributeFloatValue.java
diff -N src/edu/iu/uis/eden/docsearch/SearchableAttributeFloatValue.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeFloatValue.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,107 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import edu.iu.uis.eden.WorkflowPersistable;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+
+/**
+ *
+ * @author delyea
+ */
+public class SearchableAttributeFloatValue implements WorkflowPersistable, SearchableAttributeValue {
+
+    private static final long serialVersionUID = -6682101853805320760L;
+
+    private Long searchableAttributeValueId;
+    private String searchableAttributeKey;
+    private Float searchableAttributeValue;
+    protected String ojbConcreteClass; // attribute needed for OJB polymorphism - do not alter!
+
+    private Long routeHeaderId;
+    private DocumentRouteHeaderValue routeHeader;
+
+    /**
+     * Default constructor.
+     */
+    public SearchableAttributeFloatValue() {
+        super();
+        this.ojbConcreteClass = this.getClass().getName();
+    }
+
+    public String getOjbConcreteClass() {
+        return ojbConcreteClass;
+    }
+
+    public void setOjbConcreteClass(String ojbConcreteClass) {
+        this.ojbConcreteClass = ojbConcreteClass;
+    }
+
+    public DocumentRouteHeaderValue getRouteHeader() {
+        return routeHeader;
+    }
+
+    public void setRouteHeader(DocumentRouteHeaderValue routeHeader) {
+        this.routeHeader = routeHeader;
+    }
+
+    public Long getRouteHeaderId() {
+        return routeHeaderId;
+    }
+
+    public void setRouteHeaderId(Long routeHeaderId) {
+        this.routeHeaderId = routeHeaderId;
+    }
+
+    public String getSearchableAttributeKey() {
+        return searchableAttributeKey;
+    }
+
+    public void setSearchableAttributeKey(String searchableAttributeKey) {
+        this.searchableAttributeKey = searchableAttributeKey;
+    }
+
+    public Float getSearchableAttributeValue() {
+        return searchableAttributeValue;
+    }
+
+    public void setSearchableAttributeValue(Float searchableAttributeValue) {
+        this.searchableAttributeValue = searchableAttributeValue;
+    }
+
+    public Long getSearchableAttributeValueId() {
+        return searchableAttributeValueId;
+    }
+
+    public void setSearchableAttributeValueId(Long searchableAttributeValueId) {
+        this.searchableAttributeValueId = searchableAttributeValueId;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.WorkflowPersistable#copy(boolean)
+     */
+    public Object copy(boolean preserveKeys) {
+        return null;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.SearchableAttributeValue#getSearchableAttributeStringValue()
+     */
+    public String getSearchableAttributeStringValue() {
+        return this.getSearchableAttributeValue().toString();
+    }
+}
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeStringValue.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/SearchableAttributeStringValue.java
diff -N src/edu/iu/uis/eden/docsearch/SearchableAttributeStringValue.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeStringValue.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,106 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import edu.iu.uis.eden.WorkflowPersistable;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+
+/**
+ *
+ * @author delyea
+ */
+public class SearchableAttributeStringValue implements WorkflowPersistable, SearchableAttributeValue {
+
+    private static final long serialVersionUID = 8696089933682052078L;
+
+    private Long searchableAttributeValueId;
+    private String searchableAttributeKey;
+    private String searchableAttributeValue;
+    protected String ojbConcreteClass; // attribute needed for OJB polymorphism - do not alter!
+
+    private Long routeHeaderId;
+    private DocumentRouteHeaderValue routeHeader;
+
+    /**
+     * Default constructor.
+     */
+    public SearchableAttributeStringValue() {
+        this.ojbConcreteClass = this.getClass().getName();
+    }
+
+    public String getOjbConcreteClass() {
+        return ojbConcreteClass;
+    }
+
+    public void setOjbConcreteClass(String ojbConcreteClass) {
+        this.ojbConcreteClass = ojbConcreteClass;
+    }
+
+    public DocumentRouteHeaderValue getRouteHeader() {
+        return routeHeader;
+    }
+
+    public void setRouteHeader(DocumentRouteHeaderValue routeHeader) {
+        this.routeHeader = routeHeader;
+    }
+
+    public Long getRouteHeaderId() {
+        return routeHeaderId;
+    }
+
+    public void setRouteHeaderId(Long routeHeaderId) {
+        this.routeHeaderId = routeHeaderId;
+    }
+
+    public String getSearchableAttributeKey() {
+        return searchableAttributeKey;
+    }
+
+    public void setSearchableAttributeKey(String searchableAttributeKey) {
+        this.searchableAttributeKey = searchableAttributeKey;
+    }
+
+    public String getSearchableAttributeValue() {
+        return searchableAttributeValue;
+    }
+
+    public void setSearchableAttributeValue(String searchableAttributeValue) {
+        this.searchableAttributeValue = searchableAttributeValue;
+    }
+
+    public Long getSearchableAttributeValueId() {
+        return searchableAttributeValueId;
+    }
+
+    public void setSearchableAttributeValueId(Long searchableAttributeValueId) {
+        this.searchableAttributeValueId = searchableAttributeValueId;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.WorkflowPersistable#copy(boolean)
+     */
+    public Object copy(boolean preserveKeys) {
+        return null;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.SearchableAttributeValue#getSearchableAttributeStringValue()
+     */
+    public String getSearchableAttributeStringValue() {
+        return this.getSearchableAttributeValue();
+    }
+}
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeSql.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/SearchableAttributeSql.java
diff -N src/edu/iu/uis/eden/docsearch/SearchableAttributeSql.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeSql.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,27 @@
+package edu.iu.uis.eden.docsearch;
+
+public class SearchableAttributeSql {
+
+    private QueryComponent queryComponent = new QueryComponent();
+	
+	private int searchableAttributeCount = 0;
+
+	/**
+	 * @return Returns the searchableAttributeCount.
+	 */
+	public int getSearchableAttributeCount() {
+		return searchableAttributeCount;
+	}
+
+    public void setSearchableAttributeCount(int searchableAttributeCount) {
+        this.searchableAttributeCount = searchableAttributeCount;
+    }
+
+    public QueryComponent getQueryComponent() {
+        return queryComponent;
+    }
+
+    public void setQueryComponent(QueryComponent queryComponent) {
+        this.queryComponent = queryComponent;
+    }
+}
Index: conf/release_2.3.1.1/create_database_ojbects_release_2.3.1.1.sql
===================================================================
RCS file: conf/release_2.3.1.1/create_database_ojbects_release_2.3.1.1.sql
diff -N conf/release_2.3.1.1/create_database_ojbects_release_2.3.1.1.sql
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ conf/release_2.3.1.1/create_database_ojbects_release_2.3.1.1.sql	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,27 @@
+CREATE TABLE EN_DOC_HDR_EXT_LONG_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			NUMBER(19) NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_LONG_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+);
+
+CREATE TABLE EN_DOC_HDR_EXT_FLT_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			FLOAT NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_FLT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+);
+
+CREATE TABLE EN_DOC_HDR_EXT_DT_T (
+	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
+	DOC_HDR_ID				NUMBER(14) NOT NULL,
+	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
+	DOC_HDR_EXT_VAL			DATE NOT NULL,
+	CONSTRAINT EN_DOC_HDR_EXT_DT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
+);
+
+GRANT SELECT ON EN_DOC_HDR_EXT_LONG_T TO EN_SELECT;
+GRANT SELECT ON EN_DOC_HDR_EXT_FLT_T TO EN_SELECT;
+GRANT SELECT ON EN_DOC_HDR_EXT_DT_T TO EN_SELECT;
Index: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeFloat.java
===================================================================
RCS file: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeFloat.java
diff -N test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeFloat.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeFloat.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,49 @@
+package edu.iu.uis.eden.docsearch.xml;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeFloatValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.lookupable.Row;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+import edu.iu.uis.eden.routetemplate.WorkflowAttributeValidationError;
+
+public class TestXMLSearchableAttributeFloat implements SearchableAttribute {
+
+    private static final long serialVersionUID = -2656250483031095594L;
+    
+    public static final String SEARCH_STORAGE_KEY = "testFloatKey";
+    public static final Float SEARCH_STORAGE_VALUE = new Float(123456.3456);
+
+    public String getSearchContent() {
+		return "TestXMLSearchableAttributeFloat";
+	}
+
+	public List<SearchableAttributeValue> getSearchStorageValues(String docContent) {
+		List<SearchableAttributeValue> savs = new ArrayList<SearchableAttributeValue>();
+        SearchableAttributeFloatValue sav = new SearchableAttributeFloatValue();
+		sav.setRouteHeader(new DocumentRouteHeaderValue());
+		sav.setSearchableAttributeKey(SEARCH_STORAGE_KEY);
+		sav.setSearchableAttributeValue(SEARCH_STORAGE_VALUE);
+		savs.add(sav);
+		return savs;
+	}
+
+	public List<Row> getSearchingRows() {
+		Row row = new Row();
+		row.setNumberOfGroupRows(99);
+		List<Row> rows = new ArrayList<Row>();
+		rows.add(row);
+		return rows;
+	}
+
+	public List<WorkflowAttributeValidationError> validateUserSearchInputs(Map<Object, String> paramMap) {
+		List<WorkflowAttributeValidationError> waves = new ArrayList<WorkflowAttributeValidationError>();
+		WorkflowAttributeValidationError wave = new WorkflowAttributeValidationError("key1", "message1");
+		waves.add(wave);
+		return waves;
+	}
+}
Index: src/edu/iu/uis/eden/docsearch/SearchableAttributeLongValue.java
===================================================================
RCS file: src/edu/iu/uis/eden/docsearch/SearchableAttributeLongValue.java
diff -N src/edu/iu/uis/eden/docsearch/SearchableAttributeLongValue.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ src/edu/iu/uis/eden/docsearch/SearchableAttributeLongValue.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,107 @@
+/*
+ * Copyright 2005-2006 The Kuali Foundation.
+ * 
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.iu.uis.eden.docsearch;
+
+import edu.iu.uis.eden.WorkflowPersistable;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+
+/**
+ *
+ * @author delyea
+ */
+public class SearchableAttributeLongValue implements WorkflowPersistable, SearchableAttributeValue {
+
+    private static final long serialVersionUID = 5786144436732198346L;
+
+    private Long searchableAttributeValueId;
+    private String searchableAttributeKey;
+    private Long searchableAttributeValue;
+    protected String ojbConcreteClass; // attribute needed for OJB polymorphism - do not alter!
+
+    private Long routeHeaderId;
+    private DocumentRouteHeaderValue routeHeader;
+
+    /**
+     * Default constructor.
+     */
+    public SearchableAttributeLongValue() {
+        super();
+        this.ojbConcreteClass = this.getClass().getName();
+    }
+
+    public String getOjbConcreteClass() {
+        return ojbConcreteClass;
+    }
+
+    public void setOjbConcreteClass(String ojbConcreteClass) {
+        this.ojbConcreteClass = ojbConcreteClass;
+    }
+
+    public DocumentRouteHeaderValue getRouteHeader() {
+        return routeHeader;
+    }
+
+    public void setRouteHeader(DocumentRouteHeaderValue routeHeader) {
+        this.routeHeader = routeHeader;
+    }
+
+    public Long getRouteHeaderId() {
+        return routeHeaderId;
+    }
+
+    public void setRouteHeaderId(Long routeHeaderId) {
+        this.routeHeaderId = routeHeaderId;
+    }
+
+    public String getSearchableAttributeKey() {
+        return searchableAttributeKey;
+    }
+
+    public void setSearchableAttributeKey(String searchableAttributeKey) {
+        this.searchableAttributeKey = searchableAttributeKey;
+    }
+
+    public Long getSearchableAttributeValue() {
+        return searchableAttributeValue;
+    }
+
+    public void setSearchableAttributeValue(Long searchableAttributeValue) {
+        this.searchableAttributeValue = searchableAttributeValue;
+    }
+
+    public Long getSearchableAttributeValueId() {
+        return searchableAttributeValueId;
+    }
+
+    public void setSearchableAttributeValueId(Long searchableAttributeValueId) {
+        this.searchableAttributeValueId = searchableAttributeValueId;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.WorkflowPersistable#copy(boolean)
+     */
+    public Object copy(boolean preserveKeys) {
+        return null;
+    }
+
+    /* (non-Javadoc)
+     * @see edu.iu.uis.eden.docsearch.SearchableAttributeValue#getSearchableAttributeStringValue()
+     */
+    public String getSearchableAttributeStringValue() {
+        return this.getSearchableAttributeValue().toString();
+    }
+}
Index: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeDateTime.java
===================================================================
RCS file: test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeDateTime.java
diff -N test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeDateTime.java
--- /dev/null	1 Jan 1970 00:00:00 -0000
+++ test/src/edu/iu/uis/eden/docsearch/xml/TestXMLSearchableAttributeDateTime.java	1 Jan 1970 00:00:00 -0000
@@ -0,0 +1,52 @@
+package edu.iu.uis.eden.docsearch.xml;
+
+import java.sql.Timestamp;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+import java.util.Map;
+
+import edu.iu.uis.eden.docsearch.SearchableAttribute;
+import edu.iu.uis.eden.docsearch.SearchableAttributeDateTimeValue;
+import edu.iu.uis.eden.docsearch.SearchableAttributeValue;
+import edu.iu.uis.eden.lookupable.Row;
+import edu.iu.uis.eden.routeheader.DocumentRouteHeaderValue;
+import edu.iu.uis.eden.routetemplate.WorkflowAttributeValidationError;
+
+public class TestXMLSearchableAttributeDateTime implements SearchableAttribute {
+
+    private static final long serialVersionUID = 1479059967548234181L;
+
+    public static final String SEARCH_STORAGE_KEY = "testDateTimeKey";
+    public static final Long SEARCH_STORAGE_VALUE_IN_MILLS = (new Long("1173995646535"));
+    public static final Timestamp SEARCH_STORAGE_VALUE = new Timestamp(SEARCH_STORAGE_VALUE_IN_MILLS.longValue());
+
+    public String getSearchContent() {
+		return "TestXMLSearchableAttributeDateTime";
+	}
+
+	public List<SearchableAttributeValue> getSearchStorageValues(String docContent) {
+		List<SearchableAttributeValue> savs = new ArrayList<SearchableAttributeValue>();
+        SearchableAttributeDateTimeValue sav = new SearchableAttributeDateTimeValue();
+		sav.setRouteHeader(new DocumentRouteHeaderValue());
+        sav.setSearchableAttributeKey(SEARCH_STORAGE_KEY);
+        sav.setSearchableAttributeValue(SEARCH_STORAGE_VALUE);
+		savs.add(sav);
+		return savs;
+	}
+
+	public List<Row> getSearchingRows() {
+		Row row = new Row();
+		row.setNumberOfGroupRows(99);
+		List<Row> rows = new ArrayList<Row>();
+		rows.add(row);
+		return rows;
+	}
+
+	public List<WorkflowAttributeValidationError> validateUserSearchInputs(Map<Object, String> paramMap) {
+		List<WorkflowAttributeValidationError> waves = new ArrayList<WorkflowAttributeValidationError>();
+		WorkflowAttributeValidationError wave = new WorkflowAttributeValidationError("key1", "message1");
+		waves.add(wave);
+		return waves;
+	}
+}
