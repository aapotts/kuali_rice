ALTER TABLE EN_RULE_TMPL_ATTRIB_T ADD ACTV_IND NUMBER(1) DEFAULT 1 NOT NULL
/

ALTER TABLE EN_RULE_TMPL_ATTRIB_T MODIFY ACTV_IND NUMBER(1) DEFAULT null
/

ALTER TABLE EN_RULE_BASE_VAL_T ADD RULE_NM VARCHAR2(256) NULL
/

ALTER TABLE EN_DOC_TYP_T ADD DOC_TYP_SECURITY_XML CLOB
/

ALTER TABLE EN_DOC_HDR_EXT_T MODIFY DOC_HDR_EXT_VAL	VARCHAR2(2000) NULL
/

CREATE TABLE EN_DOC_HDR_EXT_LONG_T (
	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
	DOC_HDR_ID				NUMBER(14) NOT NULL,
	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
	DOC_HDR_EXT_VAL			NUMBER(*,0) NULL,
	CONSTRAINT EN_DOC_HDR_EXT_LONG_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
)
/

CREATE TABLE EN_DOC_HDR_EXT_FLT_T (
	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
	DOC_HDR_ID				NUMBER(14) NOT NULL,
	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
	DOC_HDR_EXT_VAL			FLOAT NULL,
	CONSTRAINT EN_DOC_HDR_EXT_FLT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
)
/

CREATE TABLE EN_DOC_HDR_EXT_DT_T (
	DOC_HDR_EXT_ID			NUMBER(19) NOT NULL,
	DOC_HDR_ID				NUMBER(14) NOT NULL,
	DOC_HDR_EXT_VAL_KEY		VARCHAR2(256) NOT NULL,
	DOC_HDR_EXT_VAL			DATE NULL,
	CONSTRAINT EN_DOC_HDR_EXT_DT_T_PK PRIMARY KEY (DOC_HDR_EXT_ID)
)
/

CREATE INDEX EN_DOC_HDR_EXT_LONG_TI1 ON EN_DOC_HDR_EXT_LONG_T (DOC_HDR_EXT_VAL_KEY, DOC_HDR_EXT_VAL)
/
CREATE INDEX EN_DOC_HDR_EXT_LONG_TI2 ON EN_DOC_HDR_EXT_LONG_T (DOC_HDR_ID)
/
CREATE INDEX EN_DOC_HDR_EXT_LONG_TI3 ON EN_DOC_HDR_EXT_LONG_T (DOC_HDR_EXT_VAL)
/

CREATE INDEX EN_DOC_HDR_EXT_FLT_TI1 ON EN_DOC_HDR_EXT_FLT_T (DOC_HDR_EXT_VAL_KEY, DOC_HDR_EXT_VAL)
/
CREATE INDEX EN_DOC_HDR_EXT_FLT_TI2 ON EN_DOC_HDR_EXT_FLT_T (DOC_HDR_ID)
/
CREATE INDEX EN_DOC_HDR_EXT_FLT_TI3 ON EN_DOC_HDR_EXT_FLT_T (DOC_HDR_EXT_VAL)
/

CREATE INDEX EN_DOC_HDR_EXT_DT_TI1 ON EN_DOC_HDR_EXT_DT_T (DOC_HDR_EXT_VAL_KEY, DOC_HDR_EXT_VAL)
/
CREATE INDEX EN_DOC_HDR_EXT_DT_TI2 ON EN_DOC_HDR_EXT_DT_T (DOC_HDR_ID)
/
CREATE INDEX EN_DOC_HDR_EXT_DT_TI3 ON EN_DOC_HDR_EXT_DT_T (DOC_HDR_EXT_VAL)
/

ALTER TABLE EN_WRKGRP_T MODIFY WRKGRP_TYP_CD VARCHAR2(255) NULL
/

CREATE TABLE EN_WRKGRP_EXT_T (
    WRKGRP_EXT_ID        NUMBER(19) NOT NULL,
    WRKGRP_ID            NUMBER(19) NOT NULL,
    WRKGRP_VER_NBR       NUMBER(8) NOT NULL,
    WRKGRP_TYP_ATTRIB_ID NUMBER(19) NOT NULL,
    DB_LOCK_VER_NBR      NUMBER(8) DEFAULT 0,
    CONSTRAINT EN_WRKGRP_EXT_T_PK PRIMARY KEY (WRKGRP_EXT_ID)
)
/

CREATE TABLE EN_WRKGRP_EXT_DTA_T (
    WRKGRP_EXT_DTA_ID   NUMBER(19) NOT NULL,
    WRKGRP_EXT_ID       NUMBER(19) NOT NULL,
    EXT_KEY             VARCHAR2(2000) NOT NULL,
	EXT_VAL             VARCHAR2(2000),
	DB_LOCK_VER_NBR     NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_WRKGRP_EXT_DTA_T_PK PRIMARY KEY (WRKGRP_EXT_DTA_ID)
)
/

CREATE TABLE EN_WRKGRP_TYP_T (
	WRKGRP_TYP_ID NUMBER(19) NOT NULL,
	WRKGRP_TYP_NM VARCHAR2(250) NOT NULL,
	WRKGRP_TYP_LBL VARCHAR2(2000) NOT NULL,
	WRKGRP_TYP_DESC VARCHAR2(2000) NULL,
	DOC_TYP_NM VARCHAR2(255) NULL,
	ACTV_IND NUMBER(1) DEFAULT 1,
	DB_LOCK_VER_NBR	NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_WRKGRP_TYP_T_PK PRIMARY KEY (WRKGRP_TYP_ID)
)
/

CREATE TABLE EN_WRKGRP_TYP_ATTRIB_T (
	WRKGRP_TYP_ATTRIB_ID NUMBER(19) NOT NULL,
	WRKGRP_TYP_ID NUMBER(19) NOT NULL,
	ATTRIB_ID NUMBER(19) NOT NULL,
	ACTV_IND NUMBER(1) DEFAULT 1,
	ORD_INDX NUMBER(4) DEFAULT 0,
	DB_LOCK_VER_NBR	NUMBER(8) DEFAULT 0,
	CONSTRAINT EN_WRKGRP_TYP_ATTRIB_PK PRIMARY KEY (WRKGRP_TYP_ATTRIB_ID)
)
/

ALTER TABLE EN_WRKGRP_EXT_T ADD CONSTRAINT EN_WRKGRP_EXT_TR1 FOREIGN KEY (WRKGRP_ID, WRKGRP_VER_NBR) REFERENCES EN_WRKGRP_T (WRKGRP_ID, WRKGRP_VER_NBR) ENABLE
/
ALTER TABLE EN_WRKGRP_EXT_T ADD CONSTRAINT EN_WRKGRP_EXT_TR2 FOREIGN KEY (WRKGRP_TYP_ATTRIB_ID) REFERENCES EN_WRKGRP_TYP_ATTRIB_T (WRKGRP_TYP_ATTRIB_ID) ENABLE
/

ALTER TABLE EN_WRKGRP_EXT_DTA_T ADD CONSTRAINT EN_WRKGRP_EXT_DTA_TR1 FOREIGN KEY (WRKGRP_EXT_ID) REFERENCES EN_WRKGRP_EXT_T (WRKGRP_EXT_ID) ENABLE
/

ALTER TABLE EN_WRKGRP_TYP_ATTRIB_T ADD CONSTRAINT EN_WRKGRP_TYP_ATTRIB_TR1 FOREIGN KEY (WRKGRP_TYP_ID) REFERENCES EN_WRKGRP_TYP_T (WRKGRP_TYP_ID) ENABLE
/
ALTER TABLE EN_WRKGRP_TYP_ATTRIB_T ADD CONSTRAINT EN_WRKGRP_TYP_ATTRIB_TR2 FOREIGN KEY (ATTRIB_ID) REFERENCES EN_RULE_ATTRIB_T (RULE_ATTRIB_ID) ENABLE
/

ALTER TABLE EN_WRKGRP_MBR_T ADD WRKGRP_MBR_TYP CHAR(1) DEFAULT 'U'
/

ALTER TABLE EN_WRKGRP_MBR_T MODIFY WRKGRP_MBR_TYP CHAR(1) NOT NULL
/

CREATE UNIQUE INDEX EN_WRKGRP_TYP_TI1 ON EN_WRKGRP_TYP_T (WRKGRP_TYP_NM)
/

ALTER TABLE EN_DOC_HDR_T ADD DOC_RTE_USR_PRSN_EN_ID VARCHAR2(30) NULL
/

CREATE TABLE kr_qrtz_job_details
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    JOB_CLASS_NAME   VARCHAR2(128) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    IS_STATEFUL VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_job_listeners
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    JOB_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
	REFERENCES KR_QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(80) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
	REFERENCES KR_QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
)
/

CREATE TABLE kr_qrtz_simple_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(7) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_cron_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    CRON_EXPRESSION VARCHAR2(80) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_blob_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    BLOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_trigger_listeners
  (
    TRIGGER_NAME  VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    TRIGGER_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
	REFERENCES KR_QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_calendars
  (
    CALENDAR_NAME  VARCHAR2(80) NOT NULL,
    CALENDAR BLOB NOT NULL,
    PRIMARY KEY (CALENDAR_NAME)
)
/

CREATE TABLE kr_qrtz_paused_trigger_grps
  (
    TRIGGER_GROUP  VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_GROUP)
)
/

CREATE TABLE kr_qrtz_fired_triggers
  (
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(80) NULL,
    JOB_GROUP VARCHAR2(80) NULL,
    IS_STATEFUL VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    PRIMARY KEY (ENTRY_ID)
)
/

CREATE TABLE kr_qrtz_scheduler_state
  (
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    PRIMARY KEY (INSTANCE_NAME)
)
/

CREATE TABLE kr_qrtz_locks
  (
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    PRIMARY KEY (LOCK_NAME)
)
/

INSERT INTO kr_qrtz_locks values('TRIGGER_ACCESS')
/
INSERT INTO kr_qrtz_locks values('JOB_ACCESS')
/
INSERT INTO kr_qrtz_locks values('CALENDAR_ACCESS')
/
INSERT INTO kr_qrtz_locks values('STATE_ACCESS')
/
INSERT INTO kr_qrtz_locks values('MISFIRE_ACCESS')
/

create index idx_kr_qrtz_j_req_recovery on kr_qrtz_job_details(REQUESTS_RECOVERY)
/
create index idx_kr_qrtz_t_next_fire_time on kr_qrtz_triggers(NEXT_FIRE_TIME)
/
create index idx_kr_qrtz_t_state on kr_qrtz_triggers(TRIGGER_STATE)
/
create index idx_kr_qrtz_t_nft_st on kr_qrtz_triggers(NEXT_FIRE_TIME,TRIGGER_STATE)
/
create index idx_kr_qrtz_t_volatile on kr_qrtz_triggers(IS_VOLATILE)
/
create index idx_kr_qrtz_ft_trig_name on kr_qrtz_fired_triggers(TRIGGER_NAME)
/
create index idx_kr_qrtz_ft_trig_group on kr_qrtz_fired_triggers(TRIGGER_GROUP)
/
create index idx_kr_qrtz_ft_trig_nm_gp on kr_qrtz_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP)
/
create index idx_kr_qrtz_ft_trig_volatile on kr_qrtz_fired_triggers(IS_VOLATILE)
/
create index idx_kr_qrtz_ft_trig_inst_name on kr_qrtz_fired_triggers(INSTANCE_NAME)
/
create index idx_kr_qrtz_ft_job_name on kr_qrtz_fired_triggers(JOB_NAME)
/
create index idx_kr_qrtz_ft_job_group on kr_qrtz_fired_triggers(JOB_GROUP)
/
create index idx_kr_qrtz_ft_job_stateful on kr_qrtz_fired_triggers(IS_STATEFUL)
/
create index idx_kr_qrtz_ft_job_req_recov on kr_qrtz_fired_triggers(REQUESTS_RECOVERY)
/

commit
/
