/*
 * Copyright 2005-2006 The Kuali Foundation.
 * 
 * 
 * Licensed under the Educational Community License, Version 1.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.opensource.org/licenses/ecl1.php
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package edu.iu.uis.eden.actionlist.web;

import org.displaytag.decorator.TableDecorator;

import edu.iu.uis.eden.actionitem.ActionItemActionListExtension;
import edu.iu.uis.eden.actionlist.DisplayParameters;

/**
 * Class used to decorate table rows generated by our table tag lib.
 *
 * @author Kuali Rice Team (kuali-rice@googlegroups.com)
 */
public class ActionListDecorator extends TableDecorator {
    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(ActionListDecorator.class);
    
    public String startRow() {
        ActionItemActionListExtension actionItem = (ActionItemActionListExtension) getCurrentRowObject();
        StringBuffer tbody = new StringBuffer();
        tbody.append("<tbody bgcolor='" + actionItem.getRowStyleClass());
        tbody.append("' onmouseover=\"this.className = 'over';\" "); 
        tbody.append("onmouseout=\"this.className = this.className.replace('over', '');\">");
        return tbody.toString();
    }

    public String finishRow() {
        ActionItemActionListExtension actionItem = (ActionItemActionListExtension) getCurrentRowObject();
        String returnRow = "</tbody>";
        try {
        	DisplayParameters displayParameters = actionItem.getDisplayParameters();
            if (displayParameters != null) {
                Integer index = actionItem.getActionItemIndex();
                Integer frameHeight = new Integer(290);
                try {
                    if (displayParameters.getFrameHeight() != null && displayParameters.getFrameHeight().intValue() > 0) {
                        frameHeight = displayParameters.getFrameHeight();
                    }
                } catch (Exception ex) {
                    LOG.error("Error getting custom action list frame height.", ex);
                }
                StringBuffer newRow = new StringBuffer();
                newRow.append("<tr id='G");
                newRow.append(index.toString());
                newRow.append("' style='display: none;'>");
                newRow.append("<td class='white' height='0' colspan='11' >");
                newRow.append("<iframe name='iframeAL_");
                newRow.append(index.toString());
                newRow.append("' scrolling='yes' width=100% height=");
                newRow.append(frameHeight.toString());
                newRow.append(" hspace=0 vspace=0 frameborder=0></iframe>");
                newRow.append("</td></tr>");
                returnRow += newRow.toString();
            }
        } catch (Exception e) {
            LOG.error("Error with custom action list attribute.", e);
        }
        return returnRow;
    }
}
