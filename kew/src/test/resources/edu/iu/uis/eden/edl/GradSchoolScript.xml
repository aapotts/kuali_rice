<!--
  Works against GradSchoolEDL.xml 1.1.2.3 and GradSchoolRoutingConfiguration 1.1.2.5
-->
<script>
  <!-- load the expected output -->

  <variable name="AFTER_INITIATION" value="res:/edu/iu/uis/eden/edoclite/AfterInitiation.html" filters="CANONICALIZE"/>

  <variable name="AFTER_CREATE" value="res:/edu/iu/uis/eden/edoclite/AfterCreate.html" filters="CANONICALIZE"/>
  <!--
  <variable name="AFTER_CREATE" value="res:/edu/iu/uis/eden/edoclite/AfterCreate_novalue.html" filters="CANONICALIZE"/>
  -->

  <variable name="AFTER_ROUTE" value="res:/edu/iu/uis/eden/edoclite/AfterRoute.html" filters="CANONICALIZE"/>
  <variable name="AFTER_PICKUP" value="res:/edu/iu/uis/eden/edoclite/AfterPickup.html" filters="CANONICALIZE"/>
  <variable name="AFTER_APPROVAL" value="res:/edu/iu/uis/eden/edoclite/AfterApproval.html" filters="CANONICALIZE"/>

  <variable name="AFTER_SECOND_PICKUP" value="res:/edu/iu/uis/eden/edoclite/AfterSecondPickup.html" filters="CANONICALIZE"/>
  <variable name="AFTER_SECOND_APPROVAL" value="res:/edu/iu/uis/eden/edoclite/AfterSecondApproval.html" filters="CANONICALIZE"/>

  <!--
    example of using urls
  <variable name="AFTER_INITIATION" value="url:file:/C:/Documents and Settings/arh14.CITSTAFF/Desktop/CANONICAL_EDOCLITE_TEST_OUTPUT/AfterInitiation.html" filters="CANONICALIZE"/>
  <variable name="AFTER_CREATE" value="url:file:/C:/Documents and Settings/arh14.CITSTAFF/Desktop/CANONICAL_EDOCLITE_TEST_OUTPUT/AfterCreate.html" filters="CANONICALIZE"/>
  <variable name="AFTER_ROUTE" value="url:file:/C:/Documents and Settings/arh14.CITSTAFF/Desktop/CANONICAL_EDOCLITE_TEST_OUTPUT/AfterRoute.html" filters="CANONICALIZE"/>
  <variable name="AFTER_PICKUP" value="url:file:/C:/Documents and Settings/arh14.CITSTAFF/Desktop/CANONICAL_EDOCLITE_TEST_OUTPUT/AfterPickup.html" filters="CANONICALIZE"/>
  <variable name="AFTER_APPROVAL" value="url:file:/C:/Documents and Settings/arh14.CITSTAFF/Desktop/CANONICAL_EDOCLITE_TEST_OUTPUT/AfterApproval.html" filters="CANONICALIZE"/>
  -->

  <user>quickstart</user>


  <!-- get the selection page -->

  <submit/>
  <sleep seconds="5"/>

  <echo variable="RESPONSE.OUTPUT"/>
  <assert actual="CONTEXT.events" expected="0"/>


  <!-- initiate a new document -->

  <parameters>
    <param name="docType">NewCourseRequest</param>
  </parameters>

  <submit/>
  <sleep seconds="5"/>

  <echo variable="RESPONSE.OUTPUT"/>
  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_INITIATION"/>
  <assert actual="CONTEXT.events" expected="0"/>


  <!-- create a new document -->

  <parameters retain="true">
    <param name="academicSubjectCode">bogus academic subject code</param>
    <param name="courseNumber">A123</param>
    <!-- invalid department -->
    <!-- don't test this for now
      <param name="department">ATTRIB-ERROR</param>
    -->
    <!-- XXX: if a field is missing replacement doesn't happen
         and the attribute XML keeps %department% which will screw up
         subsequent matching because the first (bad) element will be
         preserved matched against and instead of the second element (where the value has
         actually been replaced upon subsequent valid submission)
         see: https://test.kuali.org/jira/browse/KULWF-471
    -->
    <param name="department">AAAD COAS</param>

    <param name="creditType">undergraduateCredit</param>
    <param name="courseGradedSFOnly">yes</param>
    <param name="variableTitleApproveRequested">yes</param>
    <param name="requiredForMajors">yes</param>
    <param name="readingMaterialsAvailable">yes</param>
    <!-- there is no annotation on create
      <param name="annotation">EDocLiteTest 'create' of NewCourseRequest as user 'quickstart'</param>
    -->
    <param name="action">create</param>
  </parameters>

  <submit method="POST"/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_CREATE"/>
  <!-- check that the doc id is present -->
  <assert actual="RESPONSE.OUTPUT" regex="(?is).*\[var docid=\p{Digit}+\].*"/>
  <!-- save the doc id from the response -->
  <assert actual="RESPONSE.docid" regex=".+"/>
  <variable name="docId" value="var:RESPONSE.docid"/>
  <assert actual="docId" regex=".+"/>
  <assert actual="CONTEXT.events" expected="0"/>


  <!-- fill in and route the new document -->

  <echo variable="docId"/>
  <parameters retain="true">
    <param name="docType"/> <!-- remove docType param -->
    <param name="docId" variable="docId"/>
    <param name="department" overwrite="true">AMST COAS</param>
    <param name="annotation" overwrite="true">EDocLiteTest 'route' of NewCourseRequest as user 'quickstart'</param>
    <param name="action" overwrite="true">route</param>
  </parameters>

  <submit method="POST"/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_ROUTE"/>
  <assert actual="CONTEXT.events" expected="2"/>


  <!-- pickup the doc as user 2-->

  <backdoorId>user2</backdoorId>

  <parameters>
    <param name="docId" variable="docId"/>
  </parameters>

  <submit/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_PICKUP"/>
  <assert actual="CONTEXT.events" expected="2"/>


  <!-- approve the doc -->

  <parameters retain="true">
    <param name="academicSubjectCode">bogus academic subject code</param>
    <param name="courseNumber">A123</param>
    <!-- invalid department -->
    <param name="department" overwrite="true">AMST COAS</param>
    <param name="creditType">undergraduateCredit</param>
    <param name="courseGradedSFOnly">yes</param>
    <param name="variableTitleApproveRequested">yes</param>
    <param name="requiredForMajors">yes</param>
    <param name="readingMaterialsAvailable">yes</param>
    <param name="annotation">EDocLiteTest 'approve' of NewCourseRequest as user 'user2'</param>
    <param name="action">approve</param>
  </parameters>

  <submit method="POST"/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_APPROVAL"/>
  <assert actual="CONTEXT.events" expected="4"/>


  <!-- pickup the doc as user3 -->

  <backdoorId>user3</backdoorId>

  <parameters>
    <param name="docId" variable="docId"/>
  </parameters>

  <submit/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_SECOND_PICKUP"/>
  <assert actual="CONTEXT.events" expected="4"/>


  <!-- approve the doc as user 3-->

  <parameters retain="true">
    <param name="academicSubjectCode">bogus academic subject code</param>
    <param name="courseNumber">A123</param>
    <!-- invalid department -->
    <param name="department" overwrite="true">AMST COAS</param>
    <param name="creditType">undergraduateCredit</param>
    <param name="courseGradedSFOnly">yes</param>
    <param name="variableTitleApproveRequested">yes</param>
    <param name="requiredForMajors">yes</param>
    <param name="readingMaterialsAvailable">yes</param>
    <param name="annotation">EDocLiteTest 'approve' of NewCourseRequest as user 'user3'</param>
    <param name="action">approve</param>
  </parameters>

  <submit method="POST"/>
  <sleep seconds="5"/>

  <assert actual="RESPONSE.FILTERED_OUTPUT" expected="var:AFTER_SECOND_APPROVAL"/>
  <assert actual="CONTEXT.events" expected="9"/>


  <!-- stash docId back in context so it is accessible by caller
       (caller could just lookup the variable also) -->
  <variable name="CONTEXT.docId" value="var:docId"/>
</script>